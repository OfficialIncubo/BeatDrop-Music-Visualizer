MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=4.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=100.000
fWaveScale=3.266
fWaveSmoothing=0.207
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99971
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=0.350
mv_g=0.350
mv_b=0.350
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
per_frame_1=wave_a=0;
warp_1=`// Space Gif by Martijn Steinrucken aka BigWings - 2019
warp_2=`// Email:countfrolic@gmail.com Twitter:@The_ArtOfCode
warp_3=`// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.
warp_4=`// Original idea from:
warp_5=`// https://boingboing.net/2018/12/20/bend-your-spacetime-continuum.html
warp_6=`//
warp_7=`// To see how this was done, check out this tutorial:
warp_8=`// https://youtu.be/cQXAbndD5CQ
warp_9=`//
warp_10=`
warp_11=`shader_body
warp_12=`{
warp_13=`    //aspect corr and global scaling
warp_14=`    float2 aspect_texsize = float2(1, texsize.y/texsize.x);
warp_15=`    uv = (uv-float2(.478, .5))*aspect_texsize*2;
warp_16=`
warp_17=`    uv = mul(uv, float2x2(.707, .707, -.707, .707));
warp_18=`    uv *= 15;
warp_19=`
warp_20=`    float2 gv = frac(uv)-.5; 
warp_21=`    	float2 id = floor(uv);
warp_22=`    
warp_23=`	float m = 0.;
warp_24=`    float t;
warp_25=`    for(float y=-1.; y<=1.; y++) {
warp_26=`    	for(float x=-1.; x<=1.; x++) {
warp_27=`            float2 offs = float2(x, y);
warp_28=`            
warp_29=`            t = -time+length(id-offs)*.2;
warp_30=`            float r = lerp(.4, 1.5, sin(t)*.5+.5);
warp_31=`    		float c = smoothstep(r, r*.9, length(gv+offs));
warp_32=`    		m = m*(1.-c) + c*(1.-m);
warp_33=`        }
warp_34=`    }
warp_35=`
warp_36=`    ret = m; 
warp_37=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    ret = tex2D(sampler_main, uv).xyz;
comp_4=`}
