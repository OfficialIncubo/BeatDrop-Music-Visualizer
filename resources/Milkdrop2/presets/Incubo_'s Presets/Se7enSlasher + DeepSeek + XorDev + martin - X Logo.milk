MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.005
fWaveScale=0.118
fWaveSmoothing=0.900
fWaveParam=-0.480
fModWaveAlphaStart=0.400
fModWaveAlphaEnd=1.600
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=-0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.800
wave_g=0.490
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.035
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
warp_1=`shader_body {
warp_2=`//ret = 1;
warp_3=`}
comp_1=`//Original ShaderToy code: https://www.shadertoy.com/view/csjfWc
comp_2=`//by Xor (XorDev)
comp_3=`//Converted to MilkDrop (HLSL) by DeepSeek: https://www.deepseek.com
comp_4=`
comp_5=`shader_body
comp_6=`{
comp_7=`    uv = (uv-0.5)*float2(1, texsize.y/texsize.x)+0.5; // martin (Nitorami) + Se7enSlasher - Effective Aspect Correction
comp_8=`    //uv = 1 - uv; //Se7enSlasher - Fix UV Flipping. Not needed?
comp_9=`
comp_10=`    // Center coordinates and normalize
comp_11=`    float2 p = (uv - 0.5) * 2.0; // [-1, 1] range
comp_12=`    
comp_13=`    // --- martin (Nitorami) - Matrix Multiplication ---
comp_14=`    float2x2 mat = float2x2(1, 1, -1, 1);
comp_15=`    float2 transformed_p = mul (p,mat);
comp_16=`    // -------------------------------------------------
comp_17=`    
comp_18=`    // Absolute transformed coordinates
comp_19=`    float2 a = abs(transformed_p);
comp_20=`    
comp_21=`    // Noise sampling coordinate
comp_22=`    float2 noise_coord = (-transformed_p + time * 0.2) / 30.0;
comp_23=`    float X = tex2D(sampler_noise_lq, noise_coord).r;
comp_24=`    
comp_25=`    // Geometric calculations
comp_26=`    float pattern = 
comp_27=`        0.1 / abs(max(a.x - 0.03, abs(p.y) - 0.1)) +
comp_28=`        0.1 / max(a.y, abs(a.x - 0.12) - 0.08);
comp_29=`    
comp_30=`    // Final color with HLSL tonemapping
comp_31=`    //XorDev - told me to replace tanh(x) with 1-exp(-x), which it works.
comp_32=`    float4 result = float4(1.0, 2.0, 3.0, 1.0) / 50.0 * pattern * 6.0 * X;
comp_33=`    float4 O = 1-exp(-result);
comp_34=`    
comp_35=`    ret = O;
comp_36=`}
