MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=0.925
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=2.449
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=1.00010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.000
wave_x=0.010
wave_y=0.500
ob_size=0.000
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=1.248
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=1.000
mv_g=1.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
per_frame_1=// NIN - Sunspots
per_frame_2=
per_frame_3=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);
per_frame_4=bt = bass_thresh;
per_frame_5=vol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);
per_frame_6=q12 = vol;
per_frame_7=mtime = mtime+vol*0.1;
per_frame_8=
per_frame_9=q10 = mtime*0.1;
per_frame_10=
per_frame_11=q1 = time*0.44;
per_frame_12=q2 = time*0.32;
per_frame_13=q3 = time*0.285;
per_frame_14=q7 = time*0.1;
per_frame_15=
per_frame_16=q4 = 0.2*sin(time*0.4);
per_frame_17=q5 = 0.2*cos(time*0.634);
per_frame_18=q6 = -0.2*sin(time*0.58);
per_frame_19=
per_frame_20=
per_frame_21=q9 = 0.4 + 0.35*sin(time*0.14);
per_frame_22=
warp_1=`sampler sampler_rand00;
warp_2=`shader_body
warp_3=`{
warp_4=`    ret = tex2D(sampler_rand00, float2(uv.x, uv.y)).xyz;    
warp_5=`    ret *= 1; 
warp_6=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`
comp_5=`
comp_6=`
comp_7=`// ***** Martin's ripples on water surface code, parameterized by Flexi *****
comp_8=`
comp_9=`float h = q9;                      // height of the horizon
comp_10=`float cut_off = 0;              // cut off lower border
comp_11=`float2 t = float2(0.1,-0.05)*time;  // velocity
comp_12=`float strength = 0.050;
comp_13=`
comp_14=`
comp_15=`float2 c = uv_orig-float2(0.5,1-h);
comp_16=`float z = 3/c.y;
comp_17=`float2 uv_water = float2(c.x*z*h,z*h)*0.05+t;
comp_18=`int mask = (c.y>0);
comp_19=`uv_water = (tex2D(sampler_noise_hq,uv_water)-0.5)*mask;
comp_20=`float2 uv_mirror = 1.0-abs(frac((c+float2(0.5,1))*0.5)*2-1)+float2(0,-cut_off);
comp_21=`uv_mirror =frac(uv_mirror-uv_water.xy*strength);
comp_22=`
comp_23=`// ***** :)
comp_24=`
comp_25=`uv = uv_mirror;
comp_26=`
comp_27=`
comp_28=`    float2 sam = tex2D(sampler_fc_main, uv);
comp_29=`    ret = tex2D(sampler_fc_main, float2(uv.x, uv.y));
comp_30=`    sam -= GetBlur1(uv)-GetBlur2(uv)*1;       
comp_31=`    sam *=0.1;
comp_32=`
comp_33=`    //sam affects how the fire moves
comp_34=`    float3 reta = tex2D(sampler_main, uv).xyz;
comp_35=`    ret = reta;
comp_36=`    ret = lerp(ret*float3(0.8,0.8,0.8), ret, q12);
comp_37=`
comp_38=`    ret *= 1; //gamma
comp_39=`
comp_40=`}
