MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=2
PSVERSION_COMP=4
[preset00]
fRating=1.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.005
fWaveScale=0.118
fWaveSmoothing=0.900
fWaveParam=-0.480
fModWaveAlphaStart=0.400
fModWaveAlphaEnd=1.600
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=-0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.800
wave_g=0.490
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.035
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
warp_1=`shader_body {
warp_2=`//ret = 1;
warp_3=`}
comp_1=`//Original ShaderToy code: https://www.shadertoy.com/view/tct3Rf
comp_2=`//by Xor (XorDev)
comp_3=`//Converted to MilkDrop (HLSL) by Incubo_.
comp_4=`
comp_5=`shader_body
comp_6=`{
comp_7=`    //Raymarch iterator, step distance, depth
comp_8=`    float i, d, z;
comp_9=`    float4 O;    
comp_10=`
comp_11=`    uv = (uv-.5)*aspect.xy; // CENTER + ASPECT FIX
comp_12=`    uv.y = -uv.y; // Y FLIPPING ISSUE FIX
comp_13=`
comp_14=`    for(i = 0; i < 1e2; i++)
comp_15=`    {
comp_16=`        //Raymarch sample point
comp_17=`        float3 p = z * normalize(float3(uv,-.25)) + .8;
comp_18=`        //Reflection distance
comp_19=`        d = max(-p.y, 0.);
comp_20=`        //Reflect y-axis
comp_21=`        p.y += d+d - 1.;
comp_22=`        //Step forward slowly with a bias for soft reflections
comp_23=`        z += d = .3 * (.01 + .1*d + 
comp_24=`        //Lazer distance field
comp_25=`        length(min( p = cos(p + time) + cos(p / .6).yzx, p.zxy)) 
comp_26=`        / (1.+d+d+d*d));
comp_27=`    
comp_28=`
comp_29=`    //Pick colors and attenuate
comp_30=`    O += (cos(z + float4(0,2,3,0)) + 1.5) / d / z;
comp_31=`    }
comp_32=`    //Tanh tonemapping
comp_33=`    O = tanh(O / 7e2);
comp_34=`    ret = O;
comp_35=`}
