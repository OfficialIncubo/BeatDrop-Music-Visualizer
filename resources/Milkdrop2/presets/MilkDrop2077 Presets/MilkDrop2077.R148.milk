MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=1.059
fWaveScale=1.351
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.200
ob_a=1.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.250
ib_a=1.000
nMotionVectorsX=12.000
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.200
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.700
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=62
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_per_frame1=t1=(t1+bass_att)*.9;
wave_0_per_frame2=t2=(t2+mid_att)*.9;
wave_0_per_point1=y=y-sin(time*t1);
wave_0_per_point2=r =r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );
wave_0_per_point3=g =g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );
wave_0_per_point4=b =b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );
wavecode_1_enabled=0
wavecode_1_samples=72
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1=(t1+bass_att)*.9;
wave_1_per_frame2=r=rand(20)*.2;
wave_1_per_frame3=g=rand(20)*.2;
wave_1_per_frame4=b=rand(20)*.2;
wave_1_per_frame5=
wave_1_per_point1=y=y;
wave_1_per_point2=x=x+sin(time*t1);
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=dec_med = pow (0.8, 30/fps);
per_frame_2=dec_slow = pow (0.9, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .5+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %16;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%5;
per_frame_10=monitor = index2;
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q21 = beat;
per_frame_14=q22 = peak;
per_frame_15=q23 = index;
per_frame_16=q24 = is_beat;
per_frame_17=q26 = bass + mid + treb;
per_frame_18=
per_frame_19=sb = sb*dec_med + q21*(1-dec_med);
per_frame_20=q29 = sb;
per_frame_21=
per_frame_22=k1 =  is_beat*bnot(index)*bnot(index2);
per_frame_23=p1 =  (index2-2);
per_frame_24=
per_frame_25=p2 = dec_med * p2+ (1-dec_med)*p1;
per_frame_26=p3 = dec_med * p3+ (1-dec_med)*p2;
per_frame_27=q5 = cos(p3*3.14/2);
per_frame_28=
per_frame_29=rott =  rott +  .003*30/fps*p3;
per_frame_30=
per_frame_31=q1 = cos(rott);
per_frame_32=q2 = sin(rott);
per_frame_33=q3 = -q2;
per_frame_34=q4 = q1;
per_frame_35=
per_frame_36=movx = movx + .002*30/fps;
per_frame_37=q28 = movx;
per_frame_38=
per_frame_39=q15 = (1+sin(time/23))*.15;
per_frame_40=q29 = 4*(.5+sin(time/17));
per_frame_41=q30 = 5/(1.2+sin(time/50)); 
per_frame_42=q31 = sin(time/38)/3;
per_frame_43=q32 = 2+sin(time/18);
per_frame_44=
per_frame_45=warp = .06;
per_frame_46=zoom = .998;
per_frame_47=
warp_1=`sampler sampler_grad3;
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`
warp_6=`    float3 txr = float3(uv,q1*0.1);
warp_7=`    float2  uv2 =  uv;
warp_8=`    uv2 = uv + texsize.zx*(q3,q3);
warp_9=`    float3 color = tex2D(sampler_noise_lq, uv2) - 0.5; 
warp_10=`    color += tex2D(sampler_noise_mq, uv2) - 0.5; 
warp_11=`    color += tex2D(sampler_noise_hq, uv2) - 0.5; 
warp_12=`//    uv += color*0.01; 
warp_13=`    //uv.y += abs(color*0.01) + bass_att*0.01;
warp_14=`    
warp_15=`    float2x2 rot = { cos(q9), sin(q9),
warp_16=`                      -sin(q9), cos(q9) }; 
warp_17=`
warp_18=`
warp_19=`    ret = tex2D( sampler_main, ((uv-0.5)*(1 - 0.01)) + 0.5  + GetBlur1((uv - 0.5)*0.9 + 0.5)*0.1 - 0.01).xyz;    
warp_20=`    ret = ret-0.002;// - 0.08; //or try: ret -= 0.004;
warp_21=`}
comp_1=`
comp_2=`float2 rs, uv2, uv3;
comp_3=`float3 noise, ret1;
comp_4=`
comp_5=`shader_body {
comp_6=`//uv *= aspect.xy;
comp_7=`
comp_8=`float corr = texsize.xy*texsize_noise_lq.zw;
comp_9=`float2 uv1 = (uv-.5-float2 (q7,q8))*aspect.xy;
comp_10=`
comp_11=`float h1 = .5;
comp_12=`
comp_13=`//uv1 = mul(uv1, float2x2(_qa));
comp_14=`//uv = uv1+.5;
comp_15=`
comp_16=`float z = h1/abs(pow(uv1.y,1));
comp_17=`// an pow spielen
comp_18=`//z = rad*13;
comp_19=`rs.x = uv1.x * z;
comp_20=`rs.y = z/2 + time*4;
comp_21=`
comp_22=`
comp_23=`rs = (uv_orig-.5- float2 (q5,q6)) * aspect.xy;
comp_24=`float2 dz1 = normalize(rs);
comp_25=`float rad1 = 22*length (rs) * q32 - .1;
comp_26=`
comp_27=`float2 uv4 =  .1*tan(rad1)*dz1 + float2(q15,q16);
comp_28=`float3 ret1 = tex2D (sampler_main,uv4);
comp_29=`float mask1 = saturate(10-7*rad1);
comp_30=`
comp_31=`noise = tex2D(sampler_noise_hq,uv4);
comp_32=`
comp_33=`uv2 = (uv1*(1-pow(length(uv1),3))-.5);
comp_34=`uv3 =frac(uv2-noise*.04 * (mask1));
comp_35=`
comp_36=`ret1 = 1.5*GetPixel(uv3) + GetBlur1(uv3)*1;
comp_37=`
comp_38=`
comp_39=`ret = ret1;    
comp_40=`}
