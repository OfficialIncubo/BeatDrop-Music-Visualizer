MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=4
PSVERSION_COMP=2
[preset00]
fRating=5.000
fGammaAdj=1.460
fDecay=0.935
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=2
nWaveMode=15
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=1
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.625
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.880
fModWaveAlphaEnd=1.980
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=1.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=0.98030
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=1.000
ob_b=0.000
ob_a=0.100
ib_size=0.000
ib_r=1.000
ib_g=0.000
ib_b=0.000
ib_a=0.100
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.000
mv_r=1.060
mv_g=1.000
mv_b=0.819
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
per_frame_1=warp = 0;
per_frame_2=wave_mystery = 2;
per_frame_3=wave_a = 0;
per_frame_4=q8 =oldq8+ 0.005*(pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps) + 0.035;
per_frame_5=oldq8 = q8;
per_frame_6=zoom = 1.9 +0.0155*cos(q8*0.423);
per_frame_7=rot = 0.0128*sin(1.343*q8);
per_frame_8=dx = 0.0035*sin(q8*0.646);
per_frame_9=dy = 0.0035*sin(q8*0.314);
per_frame_10=cx = 0.5 + 0.005*sin(0.497*q8);
per_frame_11=cy = 0.5 +0.005*sin(0.413*q8);
per_frame_12=//ob_size = 0.5 + 0.1*sin(q8*0.5251);
per_frame_13=//ib_r = 0.5 + 0.499*sin(q8*0.2543);
per_frame_14=//ib_b = 0.5 + 0.499*sin(q8*0.4643);
per_frame_15=//ib_g = 0.5 + 0.499*sin(q8*0.3153);
per_frame_16=//ob_r = 0.5 + 0.499*sin(q8*0.493);
per_frame_17=//ob_b = 0.5 + 0.499*sin(q8*0.6013);
per_frame_18=//ob_g = 0.5 + 0.499*sin(q8*0.223);
per_pixel_1=zoomexp = 1+2.5*rad;
per_pixel_2=dx = dx *8*(sin(8*rad*rad));
per_pixel_3=dy = dy *8*(sin(8*rad*rad));
per_pixel_4=rot = rot*0.1*(sin(rad*rad));
warp_1=`// Shader by altunenes https://www.shadertoy.com/view/DtXyWM 
warp_2=`// Ported to MilkDrop by MilkDrop2077
warp_3=`
warp_4=`// Constants
warp_5=`#define P 3.14159265359
warp_6=`
warp_7=`// Rodrigues' rotation formula
warp_8=`float3 e(float3 p, float3 ax, float ro) {
warp_9=`    return lerp(dot(p,ax)*ax, p, cos(ro)) + sin(ro)*cross(ax,p);
warp_10=`}
warp_11=`
warp_12=`// 3D Voronoi
warp_13=`float3 v3d(float3 x) {
warp_14=`    float3 p = floor(x);
warp_15=`    float3 f = frac(x);
warp_16=`    float2 res = float2(2.0, 2.0);
warp_17=`    
warp_18=`    for(int k=-1; k<=1; k++) {
warp_19=`        for(int j=-1; j<=1; j++) {
warp_20=`            for(int i=-1; i<=1; i++) {
warp_21=`                float3 r = float3(i,j,k) - f;
warp_22=`                float d = dot(r,r);
warp_23=`                if(d < res.x) {
warp_24=`                    res.y = res.x;
warp_25=`                    res.x = d;
warp_26=`                }
warp_27=`                else if(d < res.y) {
warp_28=`                    res.y = d;
warp_29=`                }
warp_30=`            }
warp_31=`        }
warp_32=`    }
warp_33=`    return float3(sqrt(res.x), sqrt(res.y), 0.0);
warp_34=`}
warp_35=`
warp_36=`shader_body {
warp_37=`    // Coordinate setup
warp_38=`    float aspect = aspect.x/aspect.y;
warp_39=`    float2 p = (uv.xy-0.5)*float2(aspect,1.0);
warp_40=`    float t = time*0.6;
warp_41=`    float s = sin(t);
warp_42=`    float r = 5.0 + s*0.01;
warp_43=`    float S = 15.0;
warp_44=`    float a = 0.0;
warp_45=`    float2 n = float2(0,0);
warp_46=`    
warp_47=`    // Animation loop
warp_48=`    for(float j=1.0; j<15.0; j++) {
warp_49=`        p = e(float3(p,0), float3(0,0,0.96), r).xy;
warp_50=`        n = e(float3(n,0), float3(0,0,1), r).xy;
warp_51=`        float2 q = p*S + t*3.5 + s + j + n;
warp_52=`        a += dot(cos(q+q19)/S, float2(0.31,0.31));
warp_53=`        n -= sin(q);
warp_54=`        S *= 1.2;
warp_55=`    }
warp_56=`    
warp_57=`    // Color calculation
warp_58=`    float f = 0.17*(a + 0.2 + a + a);
warp_59=`    uv = uv.xy;
warp_60=`    float3 v = v3d(float3(t, uv.x, uv.y));
warp_61=`    float w = cos(5.0*t + e(float3(uv,0), float3(0,0,1), t*0.1).y*uv.x*P);
warp_62=`    float3 c = 1.3 + 0.5*sin(2.0*t + float3(0,2.09,4.19) + 2.0*w);
warp_63=`    
warp_64=`    // Final output
warp_65=`    ret = float4(pow(v.r*0.1, f*30.0)*1.5*(c + float3(0.5,0.1,0.8)*0.1), 1.0);
warp_66=`}
comp_1=`shader_body
comp_2=`{
comp_3=`ret = tex2D(sampler_main, uv).xyz;
comp_4=`ret*=2;
comp_5=`}
