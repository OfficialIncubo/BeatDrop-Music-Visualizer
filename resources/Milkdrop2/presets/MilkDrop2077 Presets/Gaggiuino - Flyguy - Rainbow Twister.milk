MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=4
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.460
fDecay=0.935
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=2
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.042
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=1.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.105
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.010
ib_r=0.700
ib_g=0.000
ib_b=1.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.100
mv_b=0.970
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=ma=ma+(above(mid,1)*3.1415*.01*mid);
wave_0_per_point2=ma=ma-(above(treb,1)*3.1415*.01*treb);
wave_0_per_point3=
wave_0_per_point4=mx=mx+(.0004*sin(tan(ma)));
wave_0_per_point5=my=my+(.0004*sin(ma*bass));
wave_0_per_point6=
wave_0_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_0_per_point8=my=if(above(my,.9),(.9-my),my);
wave_0_per_point9=mx=if(below(mx,.3),(.9+mx),mx);
wave_0_per_point10=my=if(below(my,.3),(.9+my),my);
wave_0_per_point11=
wave_0_per_point12=x=mx;
wave_0_per_point13=y=my;
wave_0_per_point14=
wave_0_per_point15=a=(above(bass+mid+treb,.3));
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.160
wavecode_1_a=1.000
wave_1_per_point1=ma=ma+(above(bass,.5)*3.1415*.02*bass);
wave_1_per_point2=ma=ma-(above(treb,.5)*3.1415*.02*treb);
wave_1_per_point3=
wave_1_per_point4=mx=mx+(.0008*cos(ma));
wave_1_per_point5=my=my+(.0008*sin(ma*ang));
wave_1_per_point6=
wave_1_per_point7=mx=if(above(mx,.9),(.9-mx),mx);
wave_1_per_point8=my=if(above(my,.9),(.9-my),my);
wave_1_per_point9=mx=if(below(mx,.1),(.9+mx),mx);
wave_1_per_point10=my=if(below(my,.1),(.9+my),my);
wave_1_per_point11=
wave_1_per_point12=x=mx/time;
wave_1_per_point13=y=my;
wave_1_per_point14=
wave_1_per_point15=a=(above(bass+mid+treb,0.22));
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=311
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.03340
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.62832
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=0.000
shapecode_0_b2=1.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=0.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_0_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_0_per_frame3=
shape_0_per_frame4=mx=mx+(.0002*cos(ma-ang));
shape_0_per_frame5=my=my+(.0002*tan(ma));
shape_0_per_frame6=
shape_0_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_0_per_frame8=my=if(above(my,0.961),(0.961-my),my);
shape_0_per_frame9=mx=if(below(mx,.2),(.9+mx),mx);
shape_0_per_frame10=my=if(below(my,.3),(.9+my),my);
shape_0_per_frame11=
shape_0_per_frame12=x=1-mx;
shape_0_per_frame13=y=1-my;
shape_0_per_frame14=
shape_0_per_frame15=ang=(sin(time*.35)+1)*3;
shape_0_per_frame16=a=(above(bass+mid+treb,.8));
shape_0_per_frame17=pi23=4*asin(1)*1.333333333;
shape_0_per_frame18=t1=bass+mid+treb;
shape_0_per_frame19=r=(sin(time*ang+t1-0*pi23)+1)*.5;
shape_0_per_frame20=g=(sin(time*.3+t1-1*pi23)+1)*.5;
shape_0_per_frame21=b=(cos(time*.3+t1-2*pi23)+1)*.5;
shape_0_per_frame22=r2=(sin(time*.3+t1-0*pi23)+1)*.5;
shape_0_per_frame23=g2=(tan(time*.3+t1-1*pi23)+1)*.5;
shape_0_per_frame24=b2=(sin(time*.3+t1-2*pi23)+1)*.5;
shapecode_1_enabled=1
shapecode_1_sides=3
shapecode_1_additive=0
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=281
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.01000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=ma=ma+(above(bass,1)*3.1415*.05*bass);
shape_1_per_frame2=ma=ma-(above(mid,1)*3.1415*.05*mid);
shape_1_per_frame3=
shape_1_per_frame4=mx=mx+(.0001*tan(ma));
shape_1_per_frame5=my=my+(.0001*sin(ma));
shape_1_per_frame6=
shape_1_per_frame7=mx=if(above(mx,1.05),(1.05-mx),mx);
shape_1_per_frame8=my=if(above(my,.9),(.9-my),my);
shape_1_per_frame9=mx=if(below(mx,0.12),(0.77+mx),mx);
shape_1_per_frame10=my=if(below(my,.1),(.9+my),my);
shape_1_per_frame11=
shape_1_per_frame12=x=1-mx;
shape_1_per_frame13=y=1-my;
shape_1_per_frame14=
shape_1_per_frame15=ang=(sin(time*.30)+1)*3.3;
shape_1_per_frame16=a=(above(bass+mid+treb,.8));
shape_1_per_frame17=pi23=4*asin(1)*.333333333;
shape_1_per_frame18=t2=0;//bass+mid+treb;
shape_1_per_frame19=r=(sin(time*.3+t2-0*pi23)+1)*.5;
shape_1_per_frame20=g=(sin(time*.3+t2-1*pi23)+1)*.5;
shape_1_per_frame21=b=(sin(time*.3+t2-2*pi23)+1)*.5;
shape_1_per_frame22=r2=(sin(time*0.28+t2-0*pi23)+1)*.5;
shape_1_per_frame23=g2=(sin(time*0.27+t2-1*pi23)+1)*0.5;
shape_1_per_frame24=b2=(sin(time*.3+t2-2*pi23)+1)*.5;
shapecode_2_enabled=1
shapecode_2_sides=3
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=1
shapecode_2_num_inst=311
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.03340
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.62832
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_2_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_2_per_frame3=
shape_2_per_frame4=mx=mx+(.0003*cos(ma));
shape_2_per_frame5=my=my+(.0003*sin(ma));
shape_2_per_frame6=
shape_2_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_2_per_frame8=my=if(above(my,0.961),(0.961-my),my);
shape_2_per_frame9=mx=if(below(mx,.2),(.9+mx),mx);
shape_2_per_frame10=my=if(below(my,.3),(.9+my),my);
shape_2_per_frame11=
shape_2_per_frame12=x=1-mx;
shape_2_per_frame13=y=1-my-ang;
shape_2_per_frame14=
shape_2_per_frame15=ang=(sin(time*1.35)+1)*3;
shape_2_per_frame16=a=(above(bass+mid+treb,.8));
shape_2_per_frame17=pi23=4*asin(1)*2.333333333;
shape_2_per_frame18=t1=bass+mid+treb;
shape_2_per_frame19=r=(sin(time*ang+t1-0*pi23)+1)*.5;
shape_2_per_frame20=g=(sin(time*.3+t1-1*pi23)+1)*.5;
shape_2_per_frame21=b=(cos(time*.3+t1-2*pi23)+1)*.5;
shape_2_per_frame22=r2=(sin(time*.3+t1-0*pi23)+1)*.5;
shape_2_per_frame23=g2=(tan(time*.3+t1-1*pi23)+1)*.5;
shape_2_per_frame24=b2=(sin(time*.3+t1-2*pi23)+1)*.5;
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=311
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.03340
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=0.000
shapecode_3_b2=1.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
shape_3_per_frame1=ma=ma+(above(bass,1)*3.1415*.01*bass);
shape_3_per_frame2=ma=ma-(above(treb,1)*3.1415*.01*treb);
shape_3_per_frame3=
shape_3_per_frame4=mx=mx+(.0002*cos(ma-rad));
shape_3_per_frame5=my=my+(.0002*sin(ma));
shape_3_per_frame6=
shape_3_per_frame7=mx=if(above(mx,.9),(.9-mx),mx);
shape_3_per_frame8=my=if(above(my,0.961),(0.961-my),my);
shape_3_per_frame9=mx=if(below(mx,.2),(.9+mx),mx);
shape_3_per_frame10=my=if(below(my,.3),(.9+my),my);
shape_3_per_frame11=
shape_3_per_frame12=x=1-mx;
shape_3_per_frame13=y=1-my;
shape_3_per_frame14=
shape_3_per_frame15=ang=(sin(time*.35)+1)*3;
shape_3_per_frame16=a=(above(bass+mid+treb,.8));
shape_3_per_frame17=pi23=4*asin(1)*1.333333333;
shape_3_per_frame18=t1=bass+mid+treb;
shape_3_per_frame19=r=(sin(time*ang+t1-0*pi23)+1)*.15;
shape_3_per_frame20=g=(sin(time*.3+t1-1*pi23)+1)*.5;
shape_3_per_frame21=b=(cos(time*.3+t1-2*pi23)+1)*.5;
shape_3_per_frame22=r2=(sin(time*.3+t1-0*pi23)+1)*.5;
shape_3_per_frame23=g2=(tan(time*.3+t1-1*pi23)+1)*.5;
shape_3_per_frame24=b2=(sin(time*.3+t1-2*pi23)+1)*.5;
per_frame_init_1=n = 0;
per_frame_init_2=loop (100000,megabuf(n)=0;gmegabuf(n)=0;n += 1;);
per_frame_init_3=
per_frame_init_4=//rand chain
per_frame_init_5=n = 90000; t=0; loop (5000, t+= (2+cos(n/21))/5; megabuf(n)= sin(t)*0.5; n+= 1);
per_frame_init_6=
per_frame_init_7=
per_frame_init_8=fov = 1; reg05 = fov;
per_frame_init_9=maxstrings = 150;
per_frame_init_10=maxssize   = 37; //Pkte pro String
per_frame_init_11=maxpts     = 1600;
per_frame_init_12=maxshapes  = 300;
per_frame_init_13=pfree = maxpts; //freie Pkte
per_frame_init_14=sfree = maxstrings;  //freie Strings
per_frame_init_15=
per_frame_init_16=recsize = 8; reg01 = recsize; //pro Punkt
per_frame_init_17=dist0 =  0.8; reg02 = dist0;
per_frame_init_18=pi=3.1416;
per_frame_init_19=
per_frame_init_20=
per_frame_init_21=//bei 0 starten die String-Inforecords
per_frame_init_22=//0 : Age
per_frame_init_23=//1 : start index
per_frame_init_24=//2 : Len
per_frame_init_25=//3: Alive
per_frame_init_26=//4,5,6: dx0,dy0,dz0
per_frame_init_27=
per_frame_init_28=//bei 5000 starten die Punkt-records
per_frame_init_29=//es folgen die ppstring Punkte; pro punkt
per_frame_init_30=  //0..2: Pos. x,y,z
per_frame_init_31=// ende pro punkt
per_frame_init_32=
per_frame_init_33=//2D-Records in gmegabuf
per_frame_init_34=  //0..2: Pos. x,y,z
per_frame_init_35=  //3: rad
per_frame_init_36=  //5: a
per_frame_init_37=  //6: mask
per_frame_init_38=
per_frame_init_39=//Shape-Records in gmegabuf, optional
per_frame_init_40=  //0..2: r0, theta, phi
per_frame_init_41=  //3: speed
per_frame_init_42=  //4,5,6: x,y,z
per_frame_init_43=  //
per_frame_init_44=sPtr = 0;
per_frame_init_45=r01 = rand(12);
per_frame_init_46=r02 = rand(12);
per_frame_1=dt = 1/fps;
per_frame_2=vol = sqrt (bass_att+mid_att+treb_att)/3; vol_ = vol_*0.9 + 0.1*vol; gf = 0.35*vol/maxssize;
per_frame_3=prog += vol*30*dt; 
per_frame_4=
per_frame_5=// Count sfree and pfree; pfree = len=0
per_frame_6=s = 0; sfree = maxstrings; pfree = maxpts;
per_frame_7=loop (maxstrings, ibase = s*recsize; if (megabuf(ibase+3) > 0, sfree -=1; pfree -=megabuf(ibase+2), 0); s+= 1);
per_frame_8=
per_frame_9=s = 0; loop (maxstrings, //NEW STRING ?
per_frame_10=  ibase = s*recsize;
per_frame_11=  if ((megabuf(ibase+3)==0) && (vol > vol_*1) && (rand(100) < 20),
per_frame_12=    sfree -= 1;
per_frame_13=    tht = rand(1)*(2.9 + (vol>vol_*1.7)); phi = (rand(1)-0.5)*4+pi/2;;
per_frame_14=    pbase = 5000 + (s*maxssize)*recsize; //erster Punkt startet bei 0
per_frame_15=    megabuf (ibase  ) = 0;//Age
per_frame_16=    megabuf (ibase+1) = 0;//start ind
per_frame_17=    megabuf (ibase+2) = 0;//len  
per_frame_18=    megabuf (ibase+3) = 1;// am Leben
per_frame_19=    megabuf (ibase+4) = sin(tht)*cos(phi);
per_frame_20=    megabuf (ibase+5) = sin(tht)*sin(phi);
per_frame_21=    megabuf (ibase+6) = -abs(cos(tht)); 
per_frame_22=  ,0); //END NEW STRING
per_frame_23=s+=1;);
per_frame_24=
per_frame_25=s = 0; loop (maxstrings, //GROW and SHRINK
per_frame_26=  ibase = s*recsize;
per_frame_27=  if (megabuf(ibase+3) > 0, //am Leben ?
per_frame_28=    megabuf(ibase  ) += dt*rand(2) ; //Age
per_frame_29=//EXPAND
per_frame_30=    age   = megabuf (ibase);
per_frame_31=    start = megabuf (ibase+1);
per_frame_32=    len   = megabuf (ibase+2);
per_frame_33=    newpts = int (5*vol*maxssize/40*(age < 0.7)) ; 
per_frame_34=    newpts = max (0, min (newpts, min (pfree,maxssize-start-len))); 
per_frame_35=    dx0 = megabuf (ibase+4);
per_frame_36=    dy0 = megabuf (ibase+5);
per_frame_37=    dz0 = megabuf (ibase+6);
per_frame_38=    p = start+len;
per_frame_39=    loop (newpts,
per_frame_40=      pbase  = 5000 + (p+s*maxssize)*recsize;
per_frame_41=k1 = if (s%3==0, p, (p-start-len)*16)+3+s/16;
per_frame_42=if (frame%5==0,k1 = 20*vol,0);
per_frame_43=//k1 = max(k1,p);
per_frame_44=      megabuf (pbase) = k1*dx0*gf; megabuf (pbase+1) = k1*dy0*gf; megabuf (pbase+2) = k1*dz0*gf;      
per_frame_45=      p+=1; ); 
per_frame_46=    megabuf(ibase +2) += newpts;  len   = megabuf (ibase+2);  pfree -= newpts;
per_frame_47=//SHRINK
per_frame_48=    ivol = if (vol<0.35,3, if (vol<0.5,2,1));
per_frame_49=    delpts = min ((megabuf(ibase)>.7),len) * (frame%ivol==0);
per_frame_50=    megabuf(ibase+1) = (megabuf(ibase+1)+delpts); 
per_frame_51=    megabuf(ibase+2) -= delpts;  pfree += delpts;
per_frame_52=    if (megabuf(ibase+2) <= 0, megabuf(ibase+3)=0, 0);
per_frame_53=  ,0);
per_frame_54=s+=1);
per_frame_55=
per_frame_56=//MOVE
per_frame_57=s = 0; loop (maxstrings,
per_frame_58=  ibase = s*recsize;  start = megabuf (ibase+1); len = megabuf (ibase+2);
per_frame_59=  if (len > 0, 
per_frame_60=    p=start; i=0;
per_frame_61=    loop (len,
per_frame_62=      pbase  = 5000 + (p%maxssize+s*maxssize)*recsize;
per_frame_63=      scale = pow(i/len,2)*0.005 ;
per_frame_64=      r1 = pow(megabuf(pbase),2)+pow(megabuf(pbase+1),2)+pow(megabuf(pbase+2),2);
per_frame_65=      scale *= min(sqrt(r1)*10,1) ; //##mit vol skalieren
per_frame_66=      p1 = 5000-int(3*p+prog);
per_frame_67=      megabuf (pbase)   += megabuf(90000+(p1+s*57)%5000)*scale;      
per_frame_68=      megabuf (pbase+1) += megabuf(90000+(p1+s*91)%5000)*scale;      
per_frame_69=      megabuf (pbase+2) += megabuf(90000+(p1+s*113)%5000)*scale;       
per_frame_70=      p+=1; i+=1;   ); 
per_frame_71=
per_frame_72=//STRAIGHTEN
per_frame_73=    p=start+1; smooth = 8;
per_frame_74=    sz = 1/(1.93+smooth);
per_frame_75=    loop (len-2,
per_frame_76=      pbase  =  5000 + (p    +s*maxssize)*recsize;
per_frame_77=      pbase1  = 5000 + ((p-1)+s*maxssize)*recsize;
per_frame_78=      pbase2  = 5000 + ((p+1)+s*maxssize)*recsize;
per_frame_79=      megabuf (pbase  ) = (smooth*megabuf(pbase  ) +megabuf(pbase1  )+megabuf(pbase2 ))*sz;      
per_frame_80=      megabuf (pbase+1) = (smooth*megabuf(pbase+1) +megabuf(pbase1+1)+megabuf(pbase2+1))*sz;      
per_frame_81=      megabuf (pbase+2) = (smooth*megabuf(pbase+2) +megabuf(pbase1+2)+megabuf(pbase2+2))*sz;      
per_frame_82=     p+=1; ); 
per_frame_83=
per_frame_84=  ,0);
per_frame_85=s+=1);
per_frame_86=
per_frame_87=//Projektion waves
per_frame_88=n=0; loop (maxpts, gmegabuf(n+6)=0; n+=recsize); 
per_frame_89=s = 0; i = 0;
per_frame_90=loop (maxstrings,
per_frame_91=  ibase = s*recsize;
per_frame_92=  start = megabuf (ibase+1);
per_frame_93=  len   = megabuf (ibase+2);
per_frame_94=  p = start;  j=0;
per_frame_95=//  if (len==0, len=-1, 0);
per_frame_96=  loop (len+1, //ersten Pkt verdoppeln wegen waves
per_frame_97=    pbase = 5000 + (p%maxssize + s*maxssize)*recsize;
per_frame_98=    z    = megabuf (pbase+2)+dist0;
per_frame_99=    gmegabuf (i*recsize)   = megabuf(pbase  );    
per_frame_100=    gmegabuf (i*recsize+1) = megabuf(pbase+1);    
per_frame_101=    gmegabuf (i*recsize+2) = z;    
per_frame_102=    gmegabuf (i*recsize+3) = if (z>0, 0.027/z, 0) ;    //rad
per_frame_103=    gmegabuf (i*recsize+5) = 1; //a
per_frame_104=    gmegabuf (i*recsize+6) = (z>0.3)*(j>1) * (j<len-1); //mask
per_frame_105=    if (j>1, p += 1,0);  i += 1; j+=1;
per_frame_106=  );  
per_frame_107=  s+=1;
per_frame_108=);
per_frame_109=
per_frame_110=//Vol delay chain 
per_frame_111=tvol = tvol*0.8 + 0.2*(vol-vol_);
per_frame_112=n = 50030; loop (30, gmegabuf (n) = gmegabuf (n-1); n -= 1; ); gmegabuf (50000) = tvol;
per_frame_113=
per_frame_114=
per_frame_115=dec = if (vol>pvol,0.5, 1-dt*40*0.05);
per_frame_116=pvol = pvol*dec + vol*(1-dec);
per_frame_117=q1 = pvol;
per_frame_118=
per_frame_119=//Zentrum
per_frame_120=q10 = 0.5; 
per_frame_121=q11 = 0.5;
per_frame_122=q32 = aspecty;
per_frame_123=
per_frame_124=q3 = gmegabuf(50000)+1; 
per_frame_125=q4 = gmegabuf(50005)+1; 
per_frame_126=
per_frame_127=//planet pos
per_frame_128=t1 = time/12 +r01;
per_frame_129=q15 = 0.5-0.35*tan(t1);
per_frame_130=//q16 = 0.5- (0.05+0.24*cos(t1) * (0.7+0.3*sin(t1/7))); 
per_frame_131=
per_frame_132=q8 = (1.7+sin(time*.02+r02))*.16;
per_frame_133=q9 = (1.7+sin(time*.0157-r02))*.16;
per_frame_134=
per_frame_135=bal = min(0.85,max(0.15,bal+ dt*0.1 * atan(treb -bass - (bal-0.5)*0.1)));
per_frame_136=q12 = bal;
per_frame_137=
per_frame_138=monitor = q12;
warp_1=`shader_body
warp_2=`{
warp_3=`    // Get screen coordinates (MilkDrop uses uv coordinates 0-1)
warp_4=`    uv = uv.xy; // or use GetBlur1() etc depending on context
warp_5=`    float2 res = texsize.xy; // resolution
warp_6=`    
warp_7=`    // Convert to pixel coordinates and center
warp_8=`    float2 o = uv * res;
warp_9=`    o -= res * 0.5;
warp_10=`    
warp_11=`    // Convert to polar coordinates
warp_12=`    float len = length(o) / res.y - 0.3;
warp_13=`    float angle = atan2(o.y, o.x)+time/3;
warp_14=`    o = float2(len, angle);
warp_15=`    
warp_16=`    // Time-based animation
warp_17=`    float t = time;
warp_18=`    
warp_19=`    // Calculate color components
warp_20=`    float4 s = 0.13 * cos(1.5 * float4(0, 1, 2, 3) + angle + q1 * 2 + sin(angle) * sin(t/4) * 2.0);
warp_21=`    float4 c = s.yzwx; // swizzle
warp_22=`    
warp_23=`    // Calculate field
warp_24=`    float4 f = min(o.x - s, c - o.x);
warp_25=`    
warp_26=`    // Final color calculation
warp_27=`    c = dot(20.0 * (s - c), clamp(f * res.y, 0.0, 1.0)) * (s - 0.1) - f/100;
warp_28=`    
warp_29=`    ret = c;
warp_30=`}
comp_1=`shader_body
comp_2=`{
comp_3=`//MilkDrop3 Flip Mode:
comp_4=`uv = 1-uv;
comp_5=`
comp_6=` ret = GetPixel(uv);
comp_7=`}
