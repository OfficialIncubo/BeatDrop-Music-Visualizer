MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=4
PSVERSION_COMP=4
[preset00]
fRating=5.000
fGammaAdj=1.460
fDecay=0.935
fVideoEchoZoom=1.007
fVideoEchoAlpha=0.500
nVideoEchoOrientation=2
nWaveMode=7
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=1
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.900
fWaveParam=1.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=1.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.600
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.500
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
shapecode_0_enabled=1
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=1.800
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.100
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=1.800
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=1
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=1.800
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
per_frame_1=wave_r = wave_r + 0.15*sin(time*0.517);
per_frame_2=wave_g = wave_g + 0.15*sin(time*0.613);
per_frame_3=wave_b = wave_b + 0.15*sin(time*0.741);
per_frame_4=// Store bass_att in a custom variable for shader access
per_frame_5=q1 = bass_att;
per_frame_6=// Smoothed bass for more fluid movement
per_frame_7=q2 = q2*0.8 + bass_att*0.2;
per_frame_8=// Phase offset based on bass
per_frame_9=q3 = q3 + 0.01*bass_att;
warp_1=`shader_body
warp_2=`{
warp_3=`    // Shader By XorDev (x.com/XorDev), ported to MilkDrop by MilkDrop2077
warp_4=`
warp_5=`    float2 r = texsize.xy;
warp_6=`    float2 p = ((uv.xy - 0.5)*r); // FC.xy - r*.5
warp_7=`    p.y = -p.y;
warp_8=`    float4 o = float4(0,0,0,0);
warp_9=`    float t = time;
warp_10=`
warp_11=`    for (float i = 0.0; i < 19.0; i += 1.0)
warp_12=`    {
warp_13=`        float a = i * i / 180.0 - length(p) / r.y;  // i*i/8e1 - length(p)/r.y
warp_14=`        a = max(a, -a * 3.0);                      // max(..., -a*3.)
warp_15=`        float att = 0.01 / (a + 2.0 / r.y);        // .01/(... + 2./r.y)
warp_16=`
warp_17=`        float angle = atan2(p.y, p.x);             // atan(p.y,p.x)
warp_18=`        a = cos(i - t+q1);                            // cos(i-t)
warp_19=`        float mask = smoothstep(a, 2.0, cos(angle + a + i * i)); // smoothstep(...)
warp_20=`
warp_21=`        float hue = angle + i;
warp_22=`        float3 c = 1.2 + sin(float3(hue, hue + 2.0, hue + 4.0)); // (1.2+sin(...))
warp_23=`
warp_24=`        o.rgb += att * mask * c;
warp_25=`    }
warp_26=`
warp_27=`    o = tanh(o);
warp_28=`    ret = float4(o.rgb, 1.0);
warp_29=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    ret = GetPixel(uv);
comp_4=`}
