MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=2.700
fDecay=0.980
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=2
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=1.000
fWaveScale=0.000
fWaveSmoothing=0.900
fWaveParam=0.173
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=1.000
wave_g=0.000
wave_b=0.000
wave_x=0.448
wave_y=0.122
ob_size=0.010
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=1.000
nMotionVectorsY=1.000
mv_dx=0.087
mv_dy=0.343
mv_l=1.663
mv_r=0.890
mv_g=0.030
mv_b=0.881
mv_a=0.199
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=0.46374
wavecode_0_smoothing=0.00000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=//pi
wave_0_init2=t8=3.14159265*1.56;
wave_0_init3=t5 = 1;
wave_0_per_frame1=rotx = rotx+bass;
wave_0_per_frame2=roty = roty+mid;
wave_0_per_frame3=rotz = rotz+treb;
wave_0_per_frame4=//rotx = 0;
wave_0_per_frame5=//roty =0;
wave_0_per_frame6=//rotz = 0;
wave_0_per_frame7=
wave_0_per_frame8=//convert rotation values from degrees to radians
wave_0_per_frame9=t1= t8*rotx/180;
wave_0_per_frame10=t2 = t8*roty/180;
wave_0_per_frame11=t3 = t8*rotz/180;
wave_0_per_frame12=
wave_0_per_frame13=t4 = 12+13*sin(time+2.46*t8);
wave_0_per_frame14=t5 = 2+8*cos(time+1.66*t8);
wave_0_per_frame15=r = 1;
wave_0_per_frame16=b = 0;
wave_0_per_frame17=g=0;
wave_0_per_point1=//Define 3D Shape
wave_0_per_point2=
wave_0_per_point3=//Sphere
wave_0_per_point4=fvar = sample*512;
wave_0_per_point5=svar = fvar*128;
wave_0_per_point6=tvar = 0|svar;
wave_0_per_point7=nsample = tvar*4.5;
wave_0_per_point8=x1 = -.5+(2.5)*sin(sample);
wave_0_per_point9=y1 = (1)*cos(t8*nsample);
wave_0_per_point10=z1 = (1)*sin(t8*nsample);
wave_0_per_point11=
wave_0_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_0_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_0_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_0_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_0_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_0_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_0_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_0_per_point19=//move resulting shape in 3d space
wave_0_per_point20=x4 = x3;
wave_0_per_point21=y4 = y3;
wave_0_per_point22=z4 = z3+5;
wave_0_per_point23=//draw 3d shape in 2d
wave_0_per_point24=x=0.5-1*(x4/(1+z4*0.5));
wave_0_per_point25=y=0.5-1*(y4/(1+z4*0.5));
wave_0_per_point26=
wave_0_per_point27=a = -.9+sin(nsample+time);
wave_0_per_point28=a = if(below(a,0),0,a);
wave_0_per_point29=a=1;
wave_0_per_point30=g=y2;
wave_0_per_point31=b=x2;
wave_0_per_point32=r= z2+z3;
wavecode_1_enabled=1
wavecode_1_samples=262
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_init1=t3 = acos(-1)*128;
wave_1_init2=t4 = 4/3;
wave_1_per_frame1=spin = spin + .01;
wave_1_per_frame2=t2 = spin;
wave_1_per_frame3=red = (-1 * cos(time))  + abs(-1 * cos(time)) + 0.2 * (cos(sin(time))+(abs(cos(sin(time)))+cos(sin(time))));
wave_1_per_frame4=green = abs(sin(time)) ;
wave_1_per_frame5=blue = cos(time)  + abs(cos(time));
wave_1_per_frame6=r = if(above(red,1),1,if(above(red,0), abs(red),0));
wave_1_per_frame7=g = if(above(green,1),1,if(above(green,0), abs(green),0));
wave_1_per_frame8=b = if(above(blue,1),1,if(above(blue,0), abs(blue),0));
wave_1_per_frame9=t5 = r;
wave_1_per_frame10=t6 = g;
wave_1_per_frame11=t7 = b-sin(time);
wave_1_per_point1=dx = cos(sample*.1*t1 + t1*(t7-int(t5)))-.5;
wave_1_per_point2=dy = 0.3*cos(sample*t1 + 7 + t1*(t7-int(t6)));
wave_1_per_point3=ddy = -1*dy;
wave_1_per_point4=t = abs(sin(q7));
wave_1_per_point5=rad = sample*t3+t2;
wave_1_per_point6=x = cos(rad/32)*0.10 + sin(rad)*0.05 +dx*t;
wave_1_per_point7=y = sin(rad/64)*t4*0.10 + cos(rad)*t4*0.05+dy*t + ddy * t * t;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.46374
wavecode_2_smoothing=0.00000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=//pi
wave_2_init2=t8=3.14159265/2;
wave_2_init3=t5 = 1;
wave_2_per_frame1=rotx = rotx+bass;
wave_2_per_frame2=roty = roty+mid;
wave_2_per_frame3=rotz = rotz+treb;
wave_2_per_frame4=//rotx = 0;
wave_2_per_frame5=//roty =0;
wave_2_per_frame6=//rotz = 0;
wave_2_per_frame7=
wave_2_per_frame8=//convert rotation values from degrees to radians
wave_2_per_frame9=t1= t8*rotx/180;
wave_2_per_frame10=t2 = t8*roty/180;
wave_2_per_frame11=t3 = t8*rotz/180;
wave_2_per_frame12=
wave_2_per_frame13=t4 = sin(bass+0.86*t8);
wave_2_per_frame14=t5 = 10+8*cos(time+0.56*t8);
wave_2_per_point1=//Define 3D Shape
wave_2_per_point2=
wave_2_per_point3=//Sphere
wave_2_per_point4=fvar = sample*512;
wave_2_per_point5=svar = fvar*128;
wave_2_per_point6=tvar = 0|svar;
wave_2_per_point7=nsample = tvar*4.5;
wave_2_per_point8=x1 = -2.5+(1.5)*sin(sample);
wave_2_per_point9=y1 = (-1)*cos(t8*nsample);
wave_2_per_point10=z1 = (-1)*sin(t8*nsample);
wave_2_per_point11=
wave_2_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_2_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_2_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_2_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_2_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_2_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_2_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_2_per_point19=//move resulting shape in 3d space
wave_2_per_point20=x4 = x3;
wave_2_per_point21=y4 = y3;
wave_2_per_point22=z4 = z3+5;
wave_2_per_point23=//draw 3d shape in 2d
wave_2_per_point24=x=0.5+0.5*(x4/(1+z4*0.5));
wave_2_per_point25=y=0.5+0.5*(y4/(1+z4*0.5));
wave_2_per_point26=
wave_2_per_point27=a = -.9+sin(nsample+time);
wave_2_per_point28=a = if(below(a,0),0,a);
wave_2_per_point29=a=1;
wave_2_per_point30=r =sin(abs(x2*sin(time)))*0.5 + 0.5;
wave_2_per_point31=b = sin(abs(y3+sin(0.8765*time)))*0.5 + 0.5;
wave_2_per_point32=g = x2*z2;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=0.46374
wavecode_3_smoothing=0.00000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=//pi
wave_3_init2=t8=3.14159265;
wave_3_init3=t5 = 1;
wave_3_per_frame1=rotx = rotx+bass;
wave_3_per_frame2=roty = roty+mid;
wave_3_per_frame3=rotz = rotz+treb;
wave_3_per_frame4=//rotx = 0;
wave_3_per_frame5=//roty =0;
wave_3_per_frame6=//rotz = 0;
wave_3_per_frame7=
wave_3_per_frame8=//convert rotation values from degrees to radians
wave_3_per_frame9=t1= t8*rotx/180;
wave_3_per_frame10=t2 = t8*roty/180;
wave_3_per_frame11=t3 = t8*rotz/180;
wave_3_per_frame12=
wave_3_per_frame13=t4 = 3*sin(time+0.776*t8);
wave_3_per_frame14=t5 = 10+8*cos(time+0.56*t8);
wave_3_per_frame15=
wave_3_per_point1=//Define 3D Shape
wave_3_per_point2=
wave_3_per_point3=//Sphere
wave_3_per_point4=fvar = sample*512;
wave_3_per_point5=svar = fvar*128;
wave_3_per_point6=tvar = 0|svar;
wave_3_per_point7=nsample = tvar*4.5;
wave_3_per_point8=x1 = -.75+(1.5)*sin(sample);
wave_3_per_point9=y1 = (1)*cos(t8*nsample);
wave_3_per_point10=z1 = (1)*sin(t8*nsample);
wave_3_per_point11=
wave_3_per_point12=//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates
wave_3_per_point13=y2 = y1*cos(t1)-z1*sin(t1);
wave_3_per_point14=z2 = y1*sin(t1)+z1*cos(t1);
wave_3_per_point15=x2 = z2*sin(t2)+x1*cos(t2);
wave_3_per_point16=z3 = z2*cos(t2)-x1*sin(t2);
wave_3_per_point17=x3 = x2*cos(t3)-y2*sin(t3);
wave_3_per_point18=y3 = y2*cos(t3)+x2*sin(t3);
wave_3_per_point19=//move resulting shape in 3d space
wave_3_per_point20=x4 = x3;
wave_3_per_point21=y4 = y3;
wave_3_per_point22=z4 = z3+5;
wave_3_per_point23=//draw 3d shape in 2d
wave_3_per_point24=x=0.5+0.75*(x4/(1+z4*0.5));
wave_3_per_point25=y=0.5+0.75*(y4/(1+z4*0.5));
wave_3_per_point26=
wave_3_per_point27=a = -.9+sin(nsample+time);
wave_3_per_point28=a = if(below(a,0),0,a);
wave_3_per_point29=a=1;
wave_3_per_point30=r = y2*z2;
wave_3_per_point31=b = z3+y3;
wave_3_per_point32=g = z3/x2;
shapecode_0_enabled=1
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.880
shapecode_0_y=0.800
shapecode_0_rad=0.33004
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.00000
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);
shape_0_per_frame2=y = 0.5+ 0.4*sin(0.311*time+0.213*q8);
shape_0_per_frame3=ang = 3.1415-3.1415*cos(time*0.1389);
shapecode_1_enabled=1
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.880
shapecode_1_y=0.200
shapecode_1_rad=0.33004
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = 0.5+ 0.4*sin(0.212*time+0.1*q8);
shape_1_per_frame2=y = 0.5+ 0.4*sin(0.2891*time+0.121*q8);
shape_1_per_frame3=ang = 3.1415+3.1415*sin(time*0.181);
shapecode_2_enabled=1
shapecode_2_sides=100
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=1
shapecode_2_x=0.120
shapecode_2_y=0.800
shapecode_2_rad=0.33004
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=1.000
shapecode_2_g2=1.000
shapecode_2_b2=1.000
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=x = 0.5+ 0.4*sin(0.0932*time+0.421*q6);
shape_2_per_frame2=y = 0.5+ 0.4*sin(0.1178*time+0.2135*q6);
shape_2_per_frame3=ang = 3.1415-3.1415*cos(time*0.1154);
shapecode_3_enabled=0
shapecode_3_sides=100
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=1
shapecode_3_num_inst=1
shapecode_3_x=0.120
shapecode_3_y=0.200
shapecode_3_rad=0.33004
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=1.000
shapecode_3_g2=1.000
shapecode_3_b2=1.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=x = 0.5+ 0.4*sin(0.105*time+0.3*q4);
shape_3_per_frame2=y = 0.5+ 0.4*sin(0.1267*time+0.323*q4);
shape_3_per_frame3=ang = 3.1415+3.1415*sin(time*0.2654);
per_frame_init_1=vol = 0; p1 = 0;
per_frame_init_2=vx = .2; vy = -0.1;
per_frame_init_3=kx = 0; ky = 0;
per_frame_init_4=
per_frame_1=dec_med = pow (0.96, 30/fps);
per_frame_2=dec_slow = pow (0.98, 30/fps);
per_frame_3=beat = max (max (bass, mid), treb); 
per_frame_4=avg = avg*dec_slow + beat*(1-dec_slow);
per_frame_5=is_beat = above(beat, .5+avg+peak) * above (time, t0+.2);
per_frame_6=t0 = is_beat*time + (1-is_beat)*t0;
per_frame_7=peak = is_beat * beat + (1-is_beat)*peak*dec_med;
per_frame_8=index = (index + is_beat) %8;
per_frame_9=index2 = (index2 + is_beat*bnot(index))%2;
per_frame_10=index3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;
per_frame_11=
per_frame_12=q20 = avg;
per_frame_13=q21 = beat;
per_frame_14=q22 = peak;
per_frame_15=q23 = index;
per_frame_16=q24 = is_beat;
per_frame_17=
per_frame_18=vol = bass_att + treb_att;
per_frame_19=v2 = v2 * dec_slow + vol * (1-dec_slow) ;
per_frame_20=q26 = max(atan (vol - v2*.8),.3);
per_frame_21=
per_frame_22=q27 = index + 1;
per_frame_23=
per_frame_24=sw = sw*dec_med + (1-dec_med)*(index2%2);
per_frame_25=q28 = sw;
per_frame_26=
per_frame_27=k1 =  is_beat*bnot(index);
per_frame_28=k2 =  is_beat*bnot(index);
per_frame_29=
per_frame_30=p1 =  k1*(p1+1) + (1-k1)*p1;
per_frame_31=p2 = dec_slow * p2+ (1-dec_slow)*p1;
per_frame_32=rott = p2 * 3.1416/2;
per_frame_33=monitor = k1;
per_frame_34=q1 = cos(rott);
per_frame_35=q2 = sin(rott);
per_frame_36=q3 = -q2;
per_frame_37=q4 = q1;
per_frame_38=
per_frame_39=
per_frame_40=q5 = cos(time/6);
per_frame_41=q6 = -sin(time/6);
per_frame_42=q7 = -q6;
per_frame_43=q8 = q5;
per_frame_44=
per_frame_45=zoom = 1;
per_frame_46=rot = -0;
per_frame_47=
per_frame_48=movez = movez + .0035*(q1+1.1)*30/fps;
per_frame_49=q29 = movez;
per_frame_50=rota = rota + .001*(2-q1)*30/fps;
per_frame_51=q30 = rota;
per_frame_52=q31 = 1 + 16*abs(cos(time*.1));
per_frame_53=q32 = .5*cos(time*.08)/4;
per_frame_54=
per_frame_55=
per_frame_56=
warp_1=`shader_body
warp_2=`{
warp_3=`    // PAINTERLY EFFECT:
warp_4=`    float2 t = 0.005 + 0.045*saturate(float2(bass,treb)-1);
warp_5=`    float2 uv2 = uv;
warp_6=`    float2 delta2 = texsize.zw*float2(1,1);
warp_7=`    float3 blurry_color = tex2D( sampler_main, 
warp_8=`        lerp(uv,uv_orig,-1) + delta2 ).xyz;
warp_9=`    float2 v = (blurry_color.xy-0.37) * t;
warp_10=`      //uv2 += v;
warp_11=`      // instead, add a rotated version:
warp_12=`      uv2.x += v.x*q1 + v.y*q2;
warp_13=`      uv2.y += v.x*q2 - v.y*q1;
warp_14=`
warp_15=`    // sample previous frame
warp_16=`    ret = tex2D( sampler_main, uv2 ).xyz;
warp_17=`
warp_18=`    // darken over time
warp_19=`    ret -= 0.004;    
warp_20=`}
comp_1=`#define sat saturate
comp_2=`float z, z0, radi;
comp_3=`float2 uv1, uv2, uva, dz;
comp_4=`static const int anz = 35;
comp_5=`static const float2 moonpos = 0.4;
comp_6=`static const float2 hor = texsize.zw*float2(1,0);
comp_7=`static const float2 ver = texsize.zw*float2(1,0).yx;
comp_8=`float3 Get1 (float2 uvi, float par)
comp_9=`{return lerp(GetBlur1(uvi), GetPixel(uvi), 0*saturate(par/2))*par;}
comp_10=`
comp_11=`shader_body {
comp_12=`uva = (uv-0.5)*aspect.xy+0.5;
comp_13=`float moon = (.01 / length (uva-moonpos));
comp_14=`
comp_15=`dz.x = lum(GetPixel(uv-hor)) - lum(GetPixel(uv+hor));
comp_16=`dz.y = lum(GetPixel(uv-ver)) - lum(GetPixel(uv+ver));
comp_17=`
comp_18=`float3 shine = GetPixel(uv); 
comp_19=`
comp_20=`radi = 1;
comp_21=`for (int n=1; n <= anz; n++)
comp_22=`{ 
comp_23=`  shine += 5.0/anz*Get1((uv-moonpos)*radi+moonpos,radi);
comp_24=`  radi -= .975/anz;;
comp_25=`}
comp_26=`ret = max(shine,0*GetPixel(uv));
comp_27=`//ret = shine+GetPixel(uv);
comp_28=`
comp_29=`}
comp_30=`written by martin
comp_31=`END
