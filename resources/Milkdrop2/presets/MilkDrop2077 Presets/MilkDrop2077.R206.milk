MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=4.100
fWaveScale=1.286
fWaveSmoothing=0.548
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=0.960
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99951
rot=0.00000
cx=0.500
cy=0.575
dx=0.00000
dy=0.00000
warp=0.01030
sx=1.00000
sy=0.86000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.470
wave_y=0.500
ob_size=0.005
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=10.560
nMotionVectorsY=9.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.900
mv_r=0.950
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.880
b2x=1.180
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=sp = sample*7.034*8*8*4;
wave_0_per_point2=it = it+1;
wave_0_per_point3=it = it*above(sample,0);
wave_0_per_point4=sz = q1;
wave_0_per_point5=ss = sample*6;
wave_0_per_point6=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_0_per_point7=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_0_per_point8=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_0_per_point9=ox = ox + above(ss,3)*below(ss,4)*-0.499*sz + above(ss,4)*below(ss,5)*sz*(-0.499+(ss-4)) + above(ss,5)*sz*0.499;
wave_0_per_point10=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_0_per_point11=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_0_per_point12=
wave_0_per_point13=xang = q2;
wave_0_per_point14=axang = 0;
wave_0_per_point15=yang = q3;
wave_0_per_point16=ayang = 0;
wave_0_per_point17=zang = q4;
wave_0_per_point18=azang = 0;
wave_0_per_point19=fov = .3;
wave_0_per_point20=
wave_0_per_point21=mx = ox*cos(zang) - oy*sin(zang);
wave_0_per_point22=my = ox*sin(zang) + oy*cos(zang);
wave_0_per_point23=ox = mx;
wave_0_per_point24=oy = my;
wave_0_per_point25=mx = ox*cos(yang) + oz*sin(yang);
wave_0_per_point26=mz = - ox*sin(yang) + oz*cos(yang);
wave_0_per_point27=ox = mx;
wave_0_per_point28=oz = mz;
wave_0_per_point29=my = oy*cos(xang) - oz*sin(xang);
wave_0_per_point30=mz = oy*sin(xang) + oz*cos(xang);
wave_0_per_point31=oy = my;
wave_0_per_point32=oz = mz;
wave_0_per_point33=
wave_0_per_point34=a = .05;
wave_0_per_point35=mod = (oz+1)*.5;
wave_0_per_point36=a = a*max(min(mod,1),0);
wave_0_per_point37=oz = oz - 2;
wave_0_per_point38=x = ox*fov/oz + 0.5;
wave_0_per_point39=x = (x-.5)*0.75 + 0.5;
wave_0_per_point40=y = oy*fov/oz + 0.5;
wave_0_per_point41=
wave_0_per_point42=r = 1+sin(sp);
wave_0_per_point43=g = 0.5 + 0.5*sin(sample*1.57);
wave_0_per_point44=b = 0.5 + 0.5*cos(sample*1.57);
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=0.870
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=tic = time - tin;
wave_1_per_frame2=tin = time;
wave_1_per_frame3=mod = .1*(mod*9 + bass_att);
wave_1_per_frame4=tt = tt + tic*((mod+1)*(mod+1)-1);
wave_1_per_frame5=t1 = tt;
wave_1_per_point1=sp = sample*6.28*8*8*4;
wave_1_per_point2=it = it+1;
wave_1_per_point3=it = it*above(sample,0);
wave_1_per_point4=sz = q1;
wave_1_per_point5=pi = 3.141592653;
wave_1_per_point6=ss = sample*6;
wave_1_per_point7=ox = sz*0.44*pow(-1,it)*below(ss,1) + 0.44*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*0.44*pow(-1,it)*sz*below(ss,3);
wave_1_per_point8=oy = (ss-0.48)*sz*below(ss,1) + sz*0.48*above(ss,1)*below(ss,2) + (0.48-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_1_per_point9=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_1_per_point10=ox = ox + above(ss,3)*below(ss,4)*-0.5266*sz + above(ss,4)*below(ss,5)*sz*(-0.5266+(ss-4)) + above(ss,5)*sz*0.5266;
wave_1_per_point11=oy = oy + above(ss,3)*below(ss,4)*0.47*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-0.47 + above(ss,5)*sz*(-0.47+(ss-5));
wave_1_per_point12=oz = oz + above(ss,3)*below(ss,4)*sz*(0.492-(ss-3)) + above(ss,4)*below(ss,5)*sz*0.492*pow(-1,it) + above(ss,5)*sz*0.492*pow(-1,it);
wave_1_per_point13=
wave_1_per_point14=zang = t1;
wave_1_per_point15=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point16=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point17=ox = mx;
wave_1_per_point18=oy = my;
wave_1_per_point19=
wave_1_per_point20=sh = sz*0.53;
wave_1_per_point21=br = (zang/pi) + .5;
wave_1_per_point22=br = br - int(br*.25)*4;
wave_1_per_point23=br = int(br);
wave_1_per_point24=ra = pow(sh*sh*2,.5);
wave_1_per_point25=
wave_1_per_point26=ox = ox - (sh + ra*sin(-zang + pi*.25))*equal(br,0) - (-sh + ra*sin(zang + pi*.25))*equal(br,1) - (-sh - ra*sin(-zang + pi*.25))*equal(br,2) - (sh - ra*sin(zang + pi*.25))*equal(br,3);
wave_1_per_point27=oy = oy - (sh + ra*cos(-zang + pi*.25))*equal(br,0) - (sh - ra*cos(zang + pi*.25))*equal(br,1) - (-sh - ra*cos(-zang + pi*.25))*equal(br,2) - (-sh + ra*cos(zang + pi*.25))*equal(br,3);
wave_1_per_point28=
wave_1_per_point29=xang = q2;
wave_1_per_point30=axang = 0;
wave_1_per_point31=yang = q3;
wave_1_per_point32=ayang = 0;
wave_1_per_point33=zang = q4;
wave_1_per_point34=azang = 0;
wave_1_per_point35=fov = .3;
wave_1_per_point36=
wave_1_per_point37=mx = ox*cos(zang) - oy*sin(zang);
wave_1_per_point38=my = ox*sin(zang) + oy*cos(zang);
wave_1_per_point39=ox = mx;
wave_1_per_point40=oy = my;
wave_1_per_point41=mx = ox*cos(yang) + oz*sin(yang);
wave_1_per_point42=mz = - ox*sin(yang) + oz*cos(yang);
wave_1_per_point43=ox = mx;
wave_1_per_point44=oz = mz;
wave_1_per_point45=my = oy*cos(xang) - oz*sin(xang);
wave_1_per_point46=mz = oy*sin(xang) + oz*cos(xang);
wave_1_per_point47=oy = my;
wave_1_per_point48=oz = mz;
wave_1_per_point49=
wave_1_per_point50=a = .05;
wave_1_per_point51=mod = (oz+1)*.5;
wave_1_per_point52=a = a*max(min(mod,1),0);
wave_1_per_point53=oz = oz - 2;
wave_1_per_point54=x = ox*fov/oz + 0.58;
wave_1_per_point55=x = (x-0.44)*0.652 + 0.44;
wave_1_per_point56=y = oy*fov/oz + 0.5;
wave_1_per_point57=
wave_1_per_point58=r = -sin(sp);
wave_1_per_point59=g = 0.542 - 0.542*sin(sample*1.492);
wave_1_per_point60=b = 0.42 - 0.42*cos(sample*1.696);
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=0.86000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.040
wavecode_2_a=1.010
wave_2_per_frame1=tic = time - tin;
wave_2_per_frame2=tin = time;
wave_2_per_frame3=mod = 0.1*(mod*9 + mid_att);
wave_2_per_frame4=tt = tt + tic*((mod+1)*(mod+1)-1);
wave_2_per_frame5=t1 = tt;
wave_2_per_point1=sp = sample*6.28*8*8*4;
wave_2_per_point2=it = it+1;
wave_2_per_point3=it = it*above(sample,0);
wave_2_per_point4=sz = q1;
wave_2_per_point5=pi = 3.1101767265;
wave_2_per_point6=ss = sample*6;
wave_2_per_point7=ox = sz*.5*pow(-1,it)*below(ss,1) + .5*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*.5*pow(-1,it)*sz*below(ss,3);
wave_2_per_point8=oy = (ss-0.5153)*sz*below(ss,1) + sz*0.5153*above(ss,1)*below(ss,2) + (0.5153-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_2_per_point9=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_2_per_point10=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_2_per_point11=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_2_per_point12=oz = oz + above(ss,3)*below(ss,4)*sz*(0.47-(ss-3)) + above(ss,4)*below(ss,5)*sz*0.47*pow(-1,it) + above(ss,5)*sz*0.47*pow(-1,it);
wave_2_per_point13=
wave_2_per_point14=ang = t1;
wave_2_per_point15=mx = ox*cos(ang) + oz*sin(ang);
wave_2_per_point16=mz = - ox*sin(ang) + oz*cos(ang);
wave_2_per_point17=ox = mx;
wave_2_per_point18=oz = mz;
wave_2_per_point19=
wave_2_per_point20=sh = sz*.5;
wave_2_per_point21=br = (ang/pi) + .5;
wave_2_per_point22=br = br - int(br*.25)*4;
wave_2_per_point23=br = 4-int(br);
wave_2_per_point24=br = br - 4*equal(br,4);
wave_2_per_point25=ra = pow(sh*sh*2,0.58);
wave_2_per_point26=ang = -ang;
wave_2_per_point27=ox = ox - (sh + ra*sin(-ang + pi*.25))*equal(br,0) - (-sh + ra*sin(ang + pi*.25))*equal(br,1) - (-sh - ra*sin(-ang + pi*.25))*equal(br,2) - (sh - ra*sin(ang + pi*.25))*equal(br,3);
wave_2_per_point28=oz = oz - (sh + ra*cos(-ang + pi*0.297))*equal(br,0) - (sh - ra*cos(ang + pi*0.297))*equal(br,1) - (-sh - ra*cos(-ang + pi*0.297))*equal(br,2) - (-sh + ra*cos(ang + pi*0.297))*equal(br,3);
wave_2_per_point29=
wave_2_per_point30=xang = q2;
wave_2_per_point31=axang = 0;
wave_2_per_point32=yang = q3;
wave_2_per_point33=ayang = 0;
wave_2_per_point34=zang = q4;
wave_2_per_point35=azang = 0;
wave_2_per_point36=fov = 0.35;
wave_2_per_point37=
wave_2_per_point38=mx = ox*cos(zang) - oy*sin(zang);
wave_2_per_point39=my = ox*sin(zang) + oy*cos(zang);
wave_2_per_point40=ox = mx;
wave_2_per_point41=oy = my;
wave_2_per_point42=mx = ox*cos(yang) + oz*sin(yang);
wave_2_per_point43=mz = - ox*sin(yang) + oz*cos(yang);
wave_2_per_point44=ox = mx;
wave_2_per_point45=oz = mz;
wave_2_per_point46=my = oy*cos(xang) - oz*sin(xang);
wave_2_per_point47=mz = oy*sin(xang) + oz*cos(xang);
wave_2_per_point48=oy = my;
wave_2_per_point49=oz = mz;
wave_2_per_point50=
wave_2_per_point51=a = .05;
wave_2_per_point52=mod = (oz+1)*.5;
wave_2_per_point53=a = a*max(min(mod,1),0);
wave_2_per_point54=oz = oz - 2;
wave_2_per_point55=x = ox*fov/oz + 0.5;
wave_2_per_point56=x = (x-0.599)*0.683 + 0.599;
wave_2_per_point57=y = oy*fov/oz + 0.5;
wave_2_per_point58=
wave_2_per_point59=g = -sin(sp);
wave_2_per_point60=b = 0.5 - 0.5*sin(sample*1.57);
wave_2_per_point61=r = 0.42 - 0.42*cos(sample*1.539);
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.06000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.060
wavecode_3_b=1.000
wavecode_3_a=1.090
wave_3_per_frame1=tic = time - tin;
wave_3_per_frame2=tin = time;
wave_3_per_frame3=mod = .1*(mod*9 + treb_att);
wave_3_per_frame4=tt = tt + tic*((mod+1)*(mod+1)-1);
wave_3_per_frame5=t1 = tt;
wave_3_per_point1=sp = sample*6.029*8*8*4;
wave_3_per_point2=it = it+1;
wave_3_per_point3=it = it*above(sample,0);
wave_3_per_point4=sz = q1;
wave_3_per_point5=pi = 3.141592653;
wave_3_per_point6=ss = sample*6;
wave_3_per_point7=ox = sz*0.4221*pow(-1,it)*below(ss,1) + 0.4221*pow(-1,it)*above(ss,1)*sz*below(ss,2) + above(ss,2)*0.4221*pow(-1,it)*sz*below(ss,3);
wave_3_per_point8=oy = (ss-.5)*sz*below(ss,1) + sz*.5*above(ss,1)*below(ss,2) + (.5-(ss-2))*sz*above(ss,2)*below(ss,3);
wave_3_per_point9=oz = -sz*.5*below(ss,1) + ((ss-1)-.5)*sz*above(ss,1)*below(ss,2) + sz*.5*above(ss,2)*below(ss,3);
wave_3_per_point10=ox = ox + above(ss,3)*below(ss,4)*-.5*sz + above(ss,4)*below(ss,5)*sz*(-.5+(ss-4)) + above(ss,5)*sz*.5;
wave_3_per_point11=oy = oy + above(ss,3)*below(ss,4)*.5*sz*pow(-1,it) + above(ss,4)*below(ss,5)*sz*-.5 + above(ss,5)*sz*(-.5+(ss-5));
wave_3_per_point12=oz = oz + above(ss,3)*below(ss,4)*sz*(.5-(ss-3)) + above(ss,4)*below(ss,5)*sz*.5*pow(-1,it) + above(ss,5)*sz*.5*pow(-1,it);
wave_3_per_point13=
wave_3_per_point14=zang = t1;
wave_3_per_point15=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point16=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point17=ox = mx;
wave_3_per_point18=oy = my;
wave_3_per_point19=
wave_3_per_point20=sh = sz*0.47;
wave_3_per_point21=br = (zang/pi) + .5;
wave_3_per_point22=br = br - int(br*.25)*4;
wave_3_per_point23=br = int(br);
wave_3_per_point24=ra = pow(sh*sh*2,.5);
wave_3_per_point25=
wave_3_per_point26=ox = ox - (sh + ra*sin(-zang + pi*.25))*equal(br,0) - (-sh + ra*sin(zang + pi*.25))*equal(br,1) - (-sh - ra*sin(-zang + pi*.25))*equal(br,2) - (sh - ra*sin(zang + pi*.25))*equal(br,3);
wave_3_per_point27=oy = oy - (sh + ra*cos(-zang + pi*.25))*equal(br,0) - (sh - ra*cos(zang + pi*.25))*equal(br,1) - (-sh - ra*cos(-zang + pi*.25))*equal(br,2) - (-sh + ra*cos(zang + pi*.25))*equal(br,3);
wave_3_per_point28=
wave_3_per_point29=yang = pi*.5;
wave_3_per_point30=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point31=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point32=ox = mx;
wave_3_per_point33=oz = mz;
wave_3_per_point34=
wave_3_per_point35=xang = q2;
wave_3_per_point36=axang = 0;
wave_3_per_point37=yang = q3;
wave_3_per_point38=ayang = 0;
wave_3_per_point39=zang = q4;
wave_3_per_point40=azang = 0;
wave_3_per_point41=fov = .3;
wave_3_per_point42=
wave_3_per_point43=mx = ox*cos(zang) - oy*sin(zang);
wave_3_per_point44=my = ox*sin(zang) + oy*cos(zang);
wave_3_per_point45=ox = mx;
wave_3_per_point46=oy = my;
wave_3_per_point47=mx = ox*cos(yang) + oz*sin(yang);
wave_3_per_point48=mz = - ox*sin(yang) + oz*cos(yang);
wave_3_per_point49=ox = mx;
wave_3_per_point50=oz = mz;
wave_3_per_point51=my = oy*cos(xang) - oz*sin(xang);
wave_3_per_point52=mz = oy*sin(xang) + oz*cos(xang);
wave_3_per_point53=oy = my;
wave_3_per_point54=oz = mz;
wave_3_per_point55=
wave_3_per_point56=a = .05;
wave_3_per_point57=mod = (oz+1)*.5;
wave_3_per_point58=a = a*max(min(mod,1),0);
wave_3_per_point59=oz = oz - 2;
wave_3_per_point60=x = ox*fov/oz + 0.5;
wave_3_per_point61=x = (x-.5)*0.75 + 0.5;
wave_3_per_point62=y = oy*fov/oz + 0.58;
wave_3_per_point63=
wave_3_per_point64=b = -sin(sp);
wave_3_per_point65=r = 0.43 - 0.43*sin(sample*1.837);
wave_3_per_point66=g = 0.437 - 0.437*cos(sample*1.539);
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.93000
shapecode_0_r=1.180
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.980
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.120
shapecode_0_border_a=0.100
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.114
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.110
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=// clear screen first
per_frame_init_2=ob_r = 0; ob_g = 0; ob_b = 0; ob_a = 1;
per_frame_init_3=ib_r = 0; ib_g = 0; ib_b = 0; ib_a = 1;
per_frame_init_4=ob_size = 0.5;
per_frame_init_5=ib_size = 0.5;
per_frame_init_6=start = 1;
per_frame_1=zoom = 1;
per_frame_2=warp = 0;
per_frame_3=xx1 = xx1*0.9 + (bass);
per_frame_4=xx2 = xx2*0.97 + (treb);
per_frame_5=yy1 = yy1*0.94 + (treb+bass)*0.75;
per_frame_6=x1 = 0.5 + xx2-xx1;
per_frame_7=y1 = 0.5 + yy1;
per_frame_8=spring = 10;
per_frame_9=grav = .5;
per_frame_10=resist = 1;
per_frame_11=bounce = 0.5;
per_frame_12=dt = .001000000;
per_frame_13=vx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);
per_frame_14=vy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);
per_frame_15=vx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);
per_frame_16=vy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);
per_frame_17=vx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);
per_frame_18=vy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);
per_frame_19=x2 = x2 + vx2;
per_frame_20=y2 = y2 + vy2;
per_frame_21=x3 = x3 + vx3;
per_frame_22=y3 = y3 + vy3;
per_frame_23=x4 = x4 + vx4;
per_frame_24=y4 = y4 + vy4;
per_frame_25=vx2 = if(above(x2,0),vx2,abs(vx2)*bounce);
per_frame_26=vx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);
per_frame_27=vx3 = if(above(x3,0),vx3,abs(vx3)*bounce);
per_frame_28=vx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);
per_frame_29=vx4 = if(above(x4,0),vx4,abs(vx4)*bounce);
per_frame_30=vx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);
per_frame_31=vy2 = if(above(y2,0),vy2,abs(vy2)*bounce);
per_frame_32=vy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);
per_frame_33=vy3 = if(above(y3,0),vy3,abs(vy3)*bounce);
per_frame_34=vy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);
per_frame_35=vy4 = if(above(y4,0),vy4,abs(vy4)*bounce);
per_frame_36=vy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);
per_frame_37=
per_frame_38=ww = ww + (vx3-vx4)*10 - (x4-x3)*0.3+ bb*asin(1)*2;
per_frame_39=
per_frame_40=startx = endx;
per_frame_41=starty = endy;
per_frame_42=endx = startx + cos(ww)*0.004;
per_frame_43=endy = starty + sin(ww)*0.004;
per_frame_44=
per_frame_45=monitor = x4;
per_frame_46=
per_frame_47=bb = 1- above(endx,0.2)*above(endy,0.2)*below(endx,0.8)*below(endy,0.8);
per_frame_48=
per_frame_49=endx = min(0.8,max(0.2,endx));
per_frame_50=endy = min(0.8,max(0.2,endy));
per_frame_51=
per_frame_52=
per_frame_53=q9 = startx; q10 = starty; q11 = endx; q12 = endy;
per_frame_54=q13 = startx*1.1; q14 = starty*1.1; q15 = endx*1.1; q16 = endy*1.1;
per_frame_55=q17 = startx*bass; q18 = starty*treb; q19 = endx*mid; q20 = endy*1.11;
per_frame_56=q21 = starty*bass; q22 = startx*treb; q23 = endy*mid; q24 = endx*1.3;
per_frame_57=
per_frame_58=
per_frame_59=ob_size = start;
per_frame_60=ib_size = start;
per_frame_61=start = start-1;
per_pixel_1=//flexi per vertex - circular canvas warps
per_pixel_2=cx1 = 0.45+sin(time*0.7045)*0.21;
per_pixel_3=cy1 = 0.5+cos(time*1.618)*0.2;
per_pixel_4=dir = bass;
per_pixel_5=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_6=x1 = if( above(d,0.33),0,  sin(y-cy1)*0.05*dir);
per_pixel_7=y1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);
per_pixel_8=cx1 = 0.5+sin(time*2.618)*0.3;
per_pixel_9=cy1 = 0.5+cos(time*3.14)*0.3;
per_pixel_10=dir = -mid*2;
per_pixel_11=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_12=x2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);
per_pixel_13=y2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);
per_pixel_14=cx1 = 0.55+sin(-time*2.7489)*0.42;
per_pixel_15=cy1 = 0.5+cos(-time*1.14)*0.4;
per_pixel_16=dir = treb*3;
per_pixel_17=d = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));
per_pixel_18=x3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);
per_pixel_19=y3 = if( above(d,0.09),0, -sin(x-cx1)*0.05*dir);
per_pixel_20=dx = dx+x1+x2+x3;
per_pixel_21=dy = dy+y1+y2+y3;
per_pixel_22=
warp_1=`shader_body
warp_2=`{
warp_3=`    float2 v = normalize(uv-uv_orig);
warp_4=`    uv = uv_orig + v*texsize.zw*2;
warp_5=`
warp_6=`    // sample previous frame
warp_7=`    ret = tex2D( sampler_main, uv ).xyz;
warp_8=`    
warp_9=`    // darken over time
warp_10=`    ret *= 0.98; //or try: ret -= 0.0039;
warp_11=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 d = texsize.zw*4;
comp_4=`    float1 dx = ( GetBlur1(uv+float2(1,0)*d)-GetBlur1(uv-float2(1,0)*d) ).y;
comp_5=`    float1 dy = ( GetBlur1(uv+float2(0,1)*d)-GetBlur1(uv-float2(0,1)*d) ).y;
comp_6=`    float2 uv_y = uv-float2(dx,dy)*.7;
comp_7=`
comp_8=`ret = lerp(float3(2.4,2.1,0.5)*tex2D(sampler_fc_main, uv_y).x,
comp_9=`                              float3(1.9,1.5,1.5), GetBlur1(uv).y*0.05);
comp_10=`
comp_11=`ret = lerp(ret,float3(0.5,1.8,2.3),GetPixel(uv).z);
comp_12=`
comp_13=`}
comp_14=`
