MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=3
PSVERSION_COMP=4
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=4
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.527
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.800
wave_g=0.490
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=1.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=0.300
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=128
wavecode_0_sep=201
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=2.15542
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=0.700
wave_0_per_point1=x = sample;
wave_0_per_point2=
wave_0_per_point3=n = int(sample*128);
wave_0_per_point4=gmegabuf(n) = gmegabuf(n)*.5 + .5* (value1+value2) * (1+.01*(rand(100)-50));
wave_0_per_point5=
wave_0_per_point6=
wave_0_per_point7=y = gmegabuf (n)*.15+.2;
wave_0_per_point8=a=0;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=0.900
wave_1_per_point1=m = int(sample*512+.0);
wave_1_per_point2=sw = (m%2);
wave_1_per_point3=p1 = ((m+1)%16);
wave_1_per_point4=p2 = int(m/32);
wave_1_per_point5=
wave_1_per_point6=//p1 = 15; p2 = 0;
wave_1_per_point7=base = 1000;
wave_1_per_point8=x0 = if(sw,gmegabuf(p1*8+base),gmegabuf(p2*8+base));
wave_1_per_point9=y0 = if(sw,gmegabuf(p1*8+base+1),gmegabuf(p2*8+base+1));
wave_1_per_point10=z0 = if(sw,gmegabuf(p1*8+base+2),gmegabuf(p2*8+base+2));
wave_1_per_point11=
wave_1_per_point12=x = x0+.5;
wave_1_per_point13=y = y0+.5;
wave_1_per_point14=
wave_1_per_point15=ind = 5000+ p2*16+p1;
wave_1_per_point16=dist = z0;
wave_1_per_point17=a = min(.008/dist,1) * (dist >= .001) *q10;
wave_1_per_point18=
wave_1_per_point19=//a = .01/z0;
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=1
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=48
shapecode_0_x=0.260
shapecode_0_y=0.200
shapecode_0_rad=0.39317
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.93550
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.600
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=sides = q12;
shape_0_per_frame2=copies = int(num_inst/16);
shape_0_per_frame3=
shape_0_per_frame4=n = int(instance/copies)*8+1000;
shape_0_per_frame5=frac = (instance%copies)/(copies);
shape_0_per_frame6=
shape_0_per_frame7=k1 = 1;
shape_0_per_frame8=x0 = gmegabuf(n)*frac + megabuf(n)*(1-frac)*k1;
shape_0_per_frame9=y0 = gmegabuf(n+1)*frac+ megabuf(n+1)*(1-frac)*k1;
shape_0_per_frame10=z0 = gmegabuf(n+2)*frac+ megabuf(n+2)*(1-frac);
shape_0_per_frame11=ang = frac*3.14 + atan2(x0,y0);
shape_0_per_frame12=
shape_0_per_frame13=megabuf(n) = x0;
shape_0_per_frame14=megabuf(n+1) = y0;
shape_0_per_frame15=megabuf(n+2) = z0;
shape_0_per_frame16=
shape_0_per_frame17=x = x0 + .5;
shape_0_per_frame18=y = y0*q32 + .5;
shape_0_per_frame19=z = z0;
shape_0_per_frame20=
shape_0_per_frame21=a =  min(.4/z,1) * (z >= 0) ;
shape_0_per_frame22=a2 = 0;
shape_0_per_frame23=
shape_0_per_frame24=rad = (.02-.0006*sides)/z;
shape_0_per_frame25=r = instance/num_inst;
shape_0_per_frame26=b = 1-r;
shape_0_per_frame27=g = pow(r-.5*q2,2)*4;
shape_0_per_frame28=r2 = 0; b2 = 0; g2 = 0;
shape_0_per_frame29=
shape_0_per_frame30=border_a = .04*(sides >= 6);
shapecode_1_enabled=1
shapecode_1_sides=8
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=192
shapecode_1_x=0.650
shapecode_1_y=0.380
shapecode_1_rad=0.76893
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.73678
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.700
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.500
shapecode_1_border_g=0.500
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=copies = int(num_inst/16);
shape_1_per_frame2=
shape_1_per_frame3=n = int(instance/copies)*8+1000;
shape_1_per_frame4=frac = (instance%copies)/(copies);
shape_1_per_frame5=
shape_1_per_frame6=k1 =  1.1; 
shape_1_per_frame7=x0 = gmegabuf(n)*frac + megabuf(n)*(1-frac)*k1;
shape_1_per_frame8=y0 = gmegabuf(n+1)*frac+ megabuf(n+1)*(1-frac)*k1;
shape_1_per_frame9=z0 = gmegabuf(n+2)*frac+ megabuf(n+2)*(1-frac);
shape_1_per_frame10=ang = frac*3.14 + atan2(x0,y0);
shape_1_per_frame11=
shape_1_per_frame12=//x0 = 0; y0 = 0; z0 = 1;
shape_1_per_frame13=pulse = min(q22+.2,1);
shape_1_per_frame14=Tht = instance*2221.7;
shape_1_per_frame15=Phi = instance*332.5;
shape_1_per_frame16=
shape_1_per_frame17=kt = time*6+instance/num_inst*copies;
shape_1_per_frame18=v0 = pulse*.015/z0 * (kt-int(kt));
shape_1_per_frame19=ox = x0+v0*sin(Tht) * cos(Phi);
shape_1_per_frame20=oy = y0+v0*cos(Tht);
shape_1_per_frame21=oz = z0+v0*sin(Tht)*sin(Phi); 
shape_1_per_frame22=
shape_1_per_frame23=
shape_1_per_frame24=x = ox + .5;
shape_1_per_frame25=y = oy*q32 + .5;
shape_1_per_frame26=z = oz;
shape_1_per_frame27=
shape_1_per_frame28=a = min(.4/oz,1)*(oz>=0) *q11;
shape_1_per_frame29=a2 = 0;
shape_1_per_frame30=
shape_1_per_frame31=rad = .004/z*(1-frac)*pulse;
shape_1_per_frame32=
shape_1_per_frame33=border_a = .00;
shape_1_per_frame34=r = 1; b = 1; g = 1;
shape_1_per_frame35=r2 = 1; b2 = 1; g2 = 1;
shape_1_per_frame36=
shape_1_per_frame37=
shape_1_per_frame38=dec = q31; //###!
shape_1_per_frame39=megabuf(n) = megabuf(n)*dec + (1-dec)*gmegabuf(n);
shape_1_per_frame40=megabuf(n+1) = megabuf(n+1)*dec + (1-dec)*gmegabuf(n+1);
shape_1_per_frame41=megabuf(n+2) = megabuf(n+2)*dec + (1-dec)*gmegabuf(n+2);
per_frame_init_1=i=0; loop (5000,i[0]=0; gmem[i]=0; i+=1;);
per_frame_init_2=octaves=3; minbpm=75; maxbpm=200; nres_oct=60; 
per_frame_init_3=nres_extra=nres_oct/log(2)*log(maxbpm/minbpm/2);
per_frame_init_4=nres=nres_oct*octaves+nres_extra;
per_frame_init_5=bstep = log(2)/nres_oct;
per_frame_init_6=nres_out = ceil(nres_oct+nres_extra); //int is necessary !
per_frame_init_7=
per_frame_init_8=maxind = 40;
per_frame_init_9=i=0;
per_frame_init_10=loop (nres,
per_frame_init_11= //precalculate BPM
per_frame_init_12=  (8*i)[3]=minbpm*exp(i*bstep); 
per_frame_init_13= //precalculate weighting
per_frame_init_14=  if (i<=nres_out,(8*i)[4]=min(2,1+sin($pi*i/nres_out)*3)/2,0);; 
per_frame_init_15=i+=1); 
per_frame_init_16=
per_frame_init_17=tmov = 1333; start = 0.0; speed=0.1;
per_frame_init_18=
per_frame_init_19=
per_frame_1=//Martin/Nitorami - DFT based BPM identification
per_frame_2=dec_m=exp(-2*dt);
per_frame_3=vol=2*bass_att+mid_att+treb_att;
per_frame_4=vol_ = vol_*dec_m + vol*(1-dec_m);
per_frame_5=
per_frame_6=dt=1/fps; 
per_frame_7=tcorr = (dt - dt_);
per_frame_8=dt_= dt;
per_frame_9=treal += dt + tcorr*38;
per_frame_10=exc=vol;
per_frame_11=d0= exp(-1.5*dt);
per_frame_12=i=0; avg = 0;
per_frame_13=loop (nres,
per_frame_14=  n = 8*i;
per_frame_15=  w = 2*$pi/60*n[3];
per_frame_16=  d = 1-dt*w*0.013; 
per_frame_17=  arg = treal*w + tcorr*15000;
per_frame_18=  n[1] = n[1]*d +exc*cos(arg)*(1-d); 
per_frame_19=  n[2] = n[2]*d +exc*sin(arg)*(1-d); 
per_frame_20=  if (i<nres_out, 
per_frame_21=    n2 = 8*(i+nres_oct);
per_frame_22=    n4 = 8*(i+nres_oct*2);
per_frame_23=    sum = sqrt (sqr(n[1])+sqr(n[2]) + sqr(n2[1])+sqr(n2[2]) + sqr(n4[1])+sqr(n4[2]));
per_frame_24=    avg += sum;
per_frame_25=    n[0]= n[0]*d0+sum*(1-d0)*n[4];
per_frame_26=    if (n[0]>(8*promax)[0], promax=max(2,min(nres_out-2,i));,0); 
per_frame_27=  ,0);
per_frame_28=i += 1;);
per_frame_29=avg_ = avg_*d0 + (1-d0)*avg/nres_out;
per_frame_30=
per_frame_31=m8 = 8*maxind;
per_frame_32=wait += abs(m8[0]-(8*promax)[0])*dt*100; 
per_frame_33=if (wait>abs(promax-maxind)*80/nres_oct, maxind=promax; wait = 0,0);
per_frame_34=
per_frame_35=//OUTPUT
per_frame_36=BPM  = m8[3]; // BPM in nres_out discrete steps
per_frame_37=BPMtime += BPM/60*dt*4;
per_frame_38=d=exp(-2*dt);
per_frame_39=quali= quali*d + (1-d)*min (3,max(0,m8[0]*2.2));
per_frame_40=
per_frame_41=speed = speed*d + (1-d)*BPM*.00045;
per_frame_42=trel1 += bass*dt;
per_frame_43=rott  = $pi*0.17* atan(8*sin(time*.031+trel1*0.005)) * (1+0.6*sin(BPMTime*0.02));
per_frame_44=q1 = cos(rott);
per_frame_45=q2 = sin(rott);
per_frame_46=q3 = -q2;
per_frame_47=q4 = q1;
per_frame_48=tmov += speed*dt;
per_frame_49=q6 = tmov;
per_frame_50=q7=speed*500;
per_frame_51=zoom_ = 2.5;
per_frame_52=q8 = zoom_;
per_frame_53=
per_frame_54=q10=BPMtime;
per_frame_55=q11 =  0.007*max(0,sqrt(mid_att+.5))*max(0,quali-0.3)*
per_frame_56=             min(1,max(0,1+sin(BPMTime*$pi/15)));
per_frame_57=q13 = sin((time+BPMTime)/60)/3 + 0.55;
per_frame_58=
per_frame_59=reg32 = aspecty;
per_frame_60=q15=start;
per_frame_61=start *= exp(-8*dt);;
per_frame_62=monitor = quali;
warp_1=`shader_body {
warp_2=`
warp_3=`// Shader By XorDev (x.com/XorDev)
warp_4=`
warp_5=`uv = uv_orig;
warp_6=`float2 hor = float2(1,0)*texsize.zw*.7;
warp_7=`float2 ver = float2(0,1)*texsize.zw*.7;;
warp_8=`
warp_9=`uv += (tex2D(sampler_noise_lq,uv*4+rand_frame)-0.5)*0.00;
warp_10=`float dx = tex2D(sampler_main,uv+hor).r - tex2D(sampler_main,uv-hor).r;
warp_11=`float dy = tex2D(sampler_main,uv+ver).r - tex2D(sampler_main,uv-ver).r;
warp_12=`float2 dz = float2 (dx,dy);
warp_13=`
warp_14=`
warp_15=`float3 blur = GetBlur1(frac(uv));
warp_16=`
warp_17=`
warp_18=`double3 crisp = tex2D(sampler_main,uv+dz*.002);
warp_19=`crisp += - length(dz)*.01-0.014*blur;
warp_20=`
warp_21=`ret.r = max (0.3,crisp).r;
warp_22=`ret.b = GetPixel(uv*1.2).b*0.8;
warp_23=`ret.g = GetPixel(uv*2).b*2;
warp_24=`
warp_25=`}
comp_1=`/*
comp_2=`  Martin's milkdrop edit of XorDev's "Starship" on shadertoy.com
comp_3=`  Inspired by the debris from SpaceX's 7th Starship test:
comp_4=`  https://x.com/elonmusk/status/1880040599761596689
comp_5=`  Original twigl version:
comp_6=`  https://x.com/XorDev/status/1880344887033569682
comp_7=`*/
comp_8=`
comp_9=`#define sat saturate
comp_10=`static const float zoom = 1.5*q8*aspect.y, T = q6,speed=q7,  trails = 32, 
comp_11=`                   BPMtime=q10, vb=q11, zz=q13;
comp_12=`
comp_13=`shader_body{//MilkDrop3 Flip Mode:
comp_14=`uv = 1-uv;
comp_15=`
comp_16=`  float2 uv1 = (uv_orig-0.5)*aspect.xy + 0.02;
comp_17=`  float2 p, q = mul (uv1, float2x2(_qa))/3;
comp_18=`  float3 S = 0, C = float3(12, 22, 0), col, scr;
comp_19=`
comp_20=`  for (int i = 0; i < trails; i++)
comp_21=`  {
comp_22=`    float j=i/trails; 
comp_23=`    p = q* (1-zz*j)+ 0.053* sin (pow(i+1.,float2(17,23)/51)*T)*float2(1,1.5);
comp_24=`
comp_25=`    col =  (cos(C*cos(i)) +bass_att);
comp_26=`    float2 uvt = p + float2((j-.5)/8*0,T*(1+frac(i*M_PI)));  
comp_27=`    scr = GetPixel(1.25*frac(uvt.yx/aspect.xy+.5));
comp_28=`    float trail = 1 / length (max(p, p / float2(2, scr.r * speed)));
comp_29=`    S += (trail*scr.g*(-p.y))*0.5*(i%2);
comp_30=`    S += trail *   0.0015 * col ;
comp_31=`    S += vb/length(p)* (sat(1-pow((BPMtime)%trails-i,2)) +
comp_32=`                       sat(1-pow((BPMtime*2)%trails-i,2))*2*col);
comp_33=` }
comp_34=` ret = 1-exp(-(sat(q.x)*float3(0,0.6,1)*2  + pow(S,1.8)/trails));
comp_35=`//MilkDrop3 Burn Mode:
comp_36=`ret = lerp(ret,2,GetPixel(uv).z*1.36);
comp_37=`}
