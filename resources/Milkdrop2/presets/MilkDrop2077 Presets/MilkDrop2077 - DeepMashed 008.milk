MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=1.169
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.868
fWaveScale=0.282
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.331
fZoomExponent=1.00000
fShader=0.000
zoom=0.99950
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00900
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.500
ob_r=0.010
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.550
mv_r=0.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
per_frame_init_1=x1 = 2;
per_frame_init_2=y1= 2;
per_frame_init_3=z1 = 2;
per_frame_1=// raytraced sphere code
per_frame_2=
per_frame_3=d = 20; // distance of the sphere, the farther you're away the more you'll see on the horizon
per_frame_4=z = 4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view
per_frame_5=
per_frame_6=zz = 1 + bass_att*0; // linear zoom
per_frame_7=
per_frame_8=pi = asin(1)*2;
per_frame_9=pi2inv = 0.5/pi;
per_frame_10=maskangle = asin( 1/d);
per_frame_11=q32 = maskangle; // hit = (cameras angle < mask_angle)
per_frame_12=q31 = d;
per_frame_13=q30 = z;
per_frame_14=q29 = pi2inv;
per_frame_15=q28 = pi;
per_frame_16=q27 = 1/zz;
per_frame_17=
per_frame_18=v = 0.4;
per_frame_19=j1 = j1*0.95 + sqr(bass*4)*v;
per_frame_20=j2 = j2*0.95 + sqr(mid*4)*v;
per_frame_21=j3 = j3*0.95 + sqr(treb*4)*v;
per_frame_22=
per_frame_23=n = n + j1*0.0152;
per_frame_24=n1 = n1 + j2*0.0152;
per_frame_25=n2 = n2 + j3*0.0152;
per_frame_26=
per_frame_27=vol=(bass+mid+treb)*0.25;
per_frame_28=vol=vol;
per_frame_29=q3=vol;
per_frame_30=mtime = mtime+vol*0.01;
per_frame_31=q1=mtime;
per_frame_32=
per_frame_33=zoom = zoom + 0.015*vol;
per_frame_34=
per_frame_35=w1 = n*0.01;    // solid angles to rotate the sphere in its origin
per_frame_36=w2 = n1*0.01;
per_frame_37=w3 = n2*0.01;
per_frame_38=
per_frame_39=q20 = cos(w1);
per_frame_40=q21 = sin(w1);
per_frame_41=q22 = cos(w2);
per_frame_42=q23 = sin(w2);
per_frame_43=q24 = cos(w3);
per_frame_44=q25 = sin(w3);
warp_1=`shader_body
warp_2=`{
warp_3=`    float2 scale = float2(1280,1024)*texsize.zw; // 1280x1024 : the resolution i modelled this shader with
warp_4=`    float1 d = 0.005;
warp_5=`    float1 dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_6=`    float1 dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_7=`    float1 dxb = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).x*scale.x;
warp_8=`    float1 dyb = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).x*scale.y;
warp_9=`    float2 my_uv = uv - float2(dx,dy)*0.01 + float2(dxb,dyb)*0.003;
warp_10=`
warp_11=`
warp_12=`
warp_13=`    float2 v = 0.01;
warp_14=`    ret.x = tex2D( sampler_fw_main, my_uv -floor(my_uv)*0).x;
warp_15=`
warp_16=`    
warp_17=`    ret.x += (ret.x - GetBlur3(uv).x)*.1;
warp_18=`    ret.x += 0.004;
warp_19=`
warp_20=`
warp_21=`//--------------------------------
warp_22=`
warp_23=`    my_uv = uv + float2(dy,-dx)*0.05*(1.2-GetBlur3(uv).y);
warp_24=`
warp_25=`
warp_26=`
warp_27=`    v = 0.01;
warp_28=`    ret.z = tex2D( sampler_fw_main, my_uv).z;
warp_29=`    
warp_30=`    ret.z += (ret.z - GetBlur1(uv).z)*length(my_uv-uv)*180/length(scale);
warp_31=`    ret.z *= 0.8;
warp_32=`    ret.z += 0.004;
warp_33=`
warp_34=`
warp_35=`
warp_36=`//--------------------------------
warp_37=`
warp_38=`    d = 0.01;
warp_39=`    my_uv = float2(-dy,dx)*0.045;
warp_40=`
warp_41=`    dx = ( GetBlur2(uv + float2(d,0)) - GetBlur2(uv-float2(d,0)) ).y*scale.x;
warp_42=`    dy = ( GetBlur2(uv + float2(0,d)) - GetBlur2(uv-float2(0,d)) ).y*scale.y;
warp_43=`    my_uv += uv - float2(dx,dy)*0.03;
warp_44=`
warp_45=`
warp_46=`
warp_47=`    v = 0.01;
warp_48=`    ret.y =tex2D( sampler_fw_main, my_uv).y;
warp_49=`
warp_50=`    
warp_51=`    ret.y += (ret.y - GetBlur3(my_uv).y)*0.2 + 0.0;
warp_52=`    ret = lerp(ret, tex2D(sampler_main,uv_orig), 0.2); //motionblur
warp_53=`
warp_54=`//ret = 0;
warp_55=`}
comp_1=`shader_body
comp_2=`{
comp_3=`float2 uv2 = uv;
comp_4=`uv2.x=1-uv2.x;
comp_5=`
comp_6=`    float2 d  = texsize.zw*4;
comp_7=`    float2 d2 = texsize.zw*4;
comp_8=`
comp_9=`    float3 dx  = ( GetBlur1(uv +float2(1,0)*d )-GetBlur1(uv2-float2(1,0)*d2) );
comp_10=`    float3 dx2 = ( GetBlur1(uv2+float2(1,0)*d2)-GetBlur1(uv -float2(0,1)*d ) );
comp_11=`
comp_12=`    float3 dy  = ( GetBlur1(uv2+float2(0,1)*d2)-GetBlur1(uv -float2(1,0)*d ) );
comp_13=`    float3 dy2 = ( GetBlur1(uv +float2(0,1)*d )-GetBlur1(uv2-float2(0,1)*d2) );
comp_14=`
comp_15=`
comp_16=`float2 uv_bg  = uv2 - float2(dx2.y,dy2.y)*texsize.zw*16;
comp_17=`float2 uv_bg2 = uv  - float2(dx.y ,dy.y )*texsize.zw*16;
comp_18=`
comp_19=`        ret = (GetBlur2(uv_bg )-GetBlur1(uv_bg2)*1+GetPixel(uv_bg )*0.9 + (-dx.y  + dy.y )*0.4).y*0.8*float3(1.0,1.1,1.2);
comp_20=`float3 ret2 = (GetBlur2(uv_bg2)-GetBlur1(uv_bg )*1+GetPixel(uv_bg2)*0.9 + (-dx2.y + dy2.y)*0.4).y*0.8*float3(1.2,1.0,1.1);
comp_21=`
comp_22=`float2 uv_m  = uv2 - float2(dx2.x,dy.x )*texsize.zw*8;
comp_23=`float2 uv_m2 = uv  - float2(dx.x ,dy2.x)*texsize.zw*8;
comp_24=`
comp_25=`ret  = lerp(ret , 2*float3(0.0,0.5,1.0), GetBlur3(uv_m2 - float2(dx2.y,dy.y )*0.4).x*0.4);
comp_26=`ret2 = lerp(ret2, 2*float3(0.5,1.0,0.0), GetBlur3(uv_m  - float2(dx.y ,dy2.y)*0.4).x*0.4);
comp_27=`
comp_28=`ret  = lerp(ret , 2*float3(0.5,1.0,1.0), GetBlur2(uv_m  - float2(dx.y ,dy2.y)*0.2).x*0.4);
comp_29=`ret2 = lerp(ret2, 2*float3(1.0,0.5,1.0), GetBlur2(uv_m2 - float2(dx2.y,dy.y )*0.2).x*0.4);
comp_30=`
comp_31=`ret = lerp(ret, 2*float3(1,1,0.8), GetBlur1(uv_m - float2(dx.y,dy.y)*0.1).x*0.2);
comp_32=`//ret = lerp(ret, float3(0.5,0,1), GetPixel(uv_m).x*0.4);
comp_33=`
comp_34=`//ret = .7-ret2;
comp_35=`//ret2=.7-ret;
comp_36=`//ret-=ret2;
comp_37=`//MilkDrop3 Color Mode:
comp_38=`ret /= float3(1.5,2.2,1.2);
comp_39=`//MilkDrop3 Brightness Mode:
comp_40=`ret *= 1.6;
comp_41=`}