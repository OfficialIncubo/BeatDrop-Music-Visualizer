MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=0.952
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.021
fWaveSmoothing=0.450
fWaveParam=0.000
fModWaveAlphaStart=0.000
fModWaveAlphaEnd=1.320
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00826
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.050
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=0.000
nMotionVectorsY=0.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=0.600
b3x=0.300
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=300
wavecode_0_sep=20
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=0.29460
wavecode_0_smoothing=0.10000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_init1=t0 = 0;
wave_0_per_frame1=t1 = 0;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=0.14869
wavecode_1_smoothing=0.82000
wavecode_1_r=0.400
wavecode_1_g=0.300
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = 0;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.82000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=t1 = samples*2;
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=1
wavecode_3_scaling=1.22018
wavecode_3_smoothing=0.20000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=t1 = samples*3;
shapecode_0_enabled=1
shapecode_0_sides=6
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=500
shapecode_0_x=0.900
shapecode_0_y=0.900
shapecode_0_rad=0.01215
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=2.51821
shapecode_0_r=0.000
shapecode_0_g=0.000
shapecode_0_b=0.700
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.700
shapecode_0_a2=0.000
shapecode_0_border_r=0.000
shapecode_0_border_g=0.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=//Spiegelung
shape_0_per_frame2=nstab = reg10; ppstab = int(num_inst/nstab); stab = int (instance/ppstab); 
shape_0_per_frame3=maxinst = nstab*ppstab;
shape_0_per_frame4=frac = (instance%ppstab)/ppstab;
shape_0_per_frame5=skip = int (ppstab/30);
shape_0_per_frame6=
shape_0_per_frame7=base1 = 1000+4*stab; base2 = 2000+4*stab;
shape_0_per_frame8=x0 = (1-frac)*gmegabuf(base1) + frac*gmegabuf(base2);
shape_0_per_frame9=y0 = (1-frac)*gmegabuf(base1+1) + frac*gmegabuf(base2+1);
shape_0_per_frame10=z0 = (1-frac)*gmegabuf(base1+2) + frac*gmegabuf(base2+2);
shape_0_per_frame11=z0 = -z0;
shape_0_per_frame12=Nenner = q9 + q28*x0 + q26*y0 - q27*z0;
shape_0_per_frame13=x = (q7 + q22*x0 + q20*y0 -q21*z0)/Nenner + 0.5;
shape_0_per_frame14=y = -(q8 + q25*x0 + q23*y0 -q24*z0 )/Nenner*q32 +0.5;
shape_0_per_frame15=
shape_0_per_frame16=if ((instance%skip ==0) && (instance < maxinst), 
shape_0_per_frame17=  rad = reg11/nenner*1.4 ;
shape_0_per_frame18=  mv = if (q2, gmegabuf(500+stab),  max(gmegabuf(500+stab), gmegabuf(500+nstab-stab)))/3;
shape_0_per_frame19=  arg = abs(frac);
shape_0_per_frame20=  a=0; a2= arg < mv; a2*= min(1, arg*1.5);
shape_0_per_frame21=
shape_0_per_frame22=,a=0; a2=0;);
shape_0_per_frame23=
shapecode_1_enabled=1
shapecode_1_sides=12
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=500
shapecode_1_x=0.260
shapecode_1_y=0.200
shapecode_1_rad=0.02449
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.93550
shapecode_1_r=0.000
shapecode_1_g=0.800
shapecode_1_b=0.000
shapecode_1_a=0.700
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=0.700
shapecode_1_border_b=0.800
shapecode_1_border_a=0.000
shape_1_per_frame1=//Glas
shape_1_per_frame2=nstab = reg10; ppstab = int(num_inst/nstab);stab = int (instance/ppstab);
shape_1_per_frame3=maxinst = nstab*ppstab-1;
shape_1_per_frame4=
shape_1_per_frame5=frac = (instance%ppstab)/ppstab;
shape_1_per_frame6=
shape_1_per_frame7=
shape_1_per_frame8=base1 = 1000+4*stab; base2 = 2000+4*stab;
shape_1_per_frame9=x0 = (1-frac)*gmegabuf(base1) + frac*gmegabuf(base2);
shape_1_per_frame10=y0 = (1-frac)*gmegabuf(base1+1) + frac*gmegabuf(base2+1);
shape_1_per_frame11=z0 = (1-frac)*gmegabuf(base1+2) + frac*gmegabuf(base2+2);
shape_1_per_frame12=
shape_1_per_frame13=
shape_1_per_frame14=Nenner = q9 + q28*x0 + q26*y0 - q27*z0;
shape_1_per_frame15=x = (q7 + q22*x0 + q20*y0 -q21*z0)/Nenner + 0.5;
shape_1_per_frame16=y = -(q8 + q25*x0 + q23*y0 -q24*z0 )/Nenner*q32 +0.5;
shape_1_per_frame17=
shape_1_per_frame18=rad = 2*reg11/nenner;;
shape_1_per_frame19=a = min(1,3/Nenner) * (instance<=maxinst); a2 = a/2;;
shape_1_per_frame20=
shape_1_per_frame21=reg99 = maxinst;
shapecode_2_enabled=1
shapecode_2_sides=12
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=500
shapecode_2_x=0.390
shapecode_2_y=0.400
shapecode_2_rad=0.01000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.44790
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.000
shapecode_2_r2=1.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=1.000
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=//Struc
shape_2_per_frame2=nstab = reg10; ppstab = int(num_inst/nstab); stab = int (instance/ppstab); 
shape_2_per_frame3=maxinst = nstab*ppstab;
shape_2_per_frame4=frac = (instance%ppstab)/ppstab;
shape_2_per_frame5=skip = int (ppstab/30);
shape_2_per_frame6=
shape_2_per_frame7=base1 = 1000+4*stab; base2 = 2000+4*stab;
shape_2_per_frame8=x0 = (1-frac)*gmegabuf(base1) + frac*gmegabuf(base2);
shape_2_per_frame9=y0 = (1-frac)*gmegabuf(base1+1) + frac*gmegabuf(base2+1);
shape_2_per_frame10=z0 = (1-frac)*gmegabuf(base1+2) + frac*gmegabuf(base2+2);
shape_2_per_frame11=
shape_2_per_frame12=Nenner = q9 + q28*x0 + q26*y0 - q27*z0;
shape_2_per_frame13=x = (q7 + q22*x0 + q20*y0 -q21*z0)/Nenner + 0.5;
shape_2_per_frame14=y = -(q8 + q25*x0 + q23*y0 -q24*z0 )/Nenner*q32 +0.5;
shape_2_per_frame15=
shape_2_per_frame16=if ((instance%skip ==0) && (instance < maxinst), 
shape_2_per_frame17=  rad = reg11/nenner*0.8 ;
shape_2_per_frame18=  mv = if (q2, gmegabuf(500+stab),  max(gmegabuf(500+stab), gmegabuf(500+nstab-stab)))/3;
shape_2_per_frame19=  arg = abs(frac);
shape_2_per_frame20=  a=0; a2= arg < mv; a2*= min(1, arg*1.5);
shape_2_per_frame21=
shape_2_per_frame22=,a=0; a2=0;);
shape_2_per_frame23=
shapecode_3_enabled=0
shapecode_3_sides=6
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=141
shapecode_3_x=0.650
shapecode_3_y=0.800
shapecode_3_rad=0.14536
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.33570
shapecode_3_r=0.000
shapecode_3_g=0.800
shapecode_3_b=0.000
shapecode_3_a=0.600
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=0.000
shapecode_3_border_a=0.000
per_frame_init_1=n = 0; loop (50000,gmegabuf(n) = 0; n+=1);
per_frame_init_2=num_res = 100; MINBPM = 90; MAXBPM = 200;
per_frame_init_3=sax1 = 1; sax2 = 0; sax3 = 4;
per_frame_init_4=r1 = 1; r2 = 1; j0=0;  
per_frame_init_5=index = 1; nstab = int(rand(10))+4;;
per_frame_init_6=BMP=100; certain = 0;
per_frame_init_7=
per_frame_1=dt = 1/fps;
per_frame_2=dec_s = 1-.015*30/fps; dec_m = 1-0.1*30/fps; dec_f = 0.7;
per_frame_3=vol = (bass_att + mid_att + treb_att)/3;
per_frame_4=avg = avg*dec_m + (1-dec_m)*vol;
per_frame_5=
per_frame_6=is_beat = above(vol, 1.25*peak) * above (time, t0+.3);
per_frame_7=t0 = if(is_beat,time,t0);
per_frame_8=peak = if (is_beat, vol, peak*dec_m);
per_frame_9=index = (index + is_beat) %32;
per_frame_10=index2 = (index2 + is_beat*bnot(index))%16;
per_frame_11=
per_frame_12=//biquad lowpass
per_frame_13=fg = BPM/60; Q=1.8; omega = 6.283*min(0.5,fg/fps); tcos = cos (omega); alpha = sin(omega)/(2*Q);
per_frame_14=b0=(1-tcos)/2; b1=1-tcos; b2=(1-tcos)/2; a0=1+alpha; a1=-2*tcos; a2=1-alpha;
per_frame_15=b0a0=b0/a0; b1a0=b1/a0; b2a0=b2/a0; a1a0=a1/a0; a2a0=a2/a0;
per_frame_16=X = vol; LastOut= b0a0*X + b1a0*in1 + b2a0*in2 - a1a0*ou1 - a2a0*ou2;
per_frame_17=in2 =in1; in1 =X; ou2 =ou1;  ou1 =LastOut; X =LastOut;
per_frame_18=BiVol=X;
per_frame_19=
per_frame_20=maxind = 0; qavg = 0.1; i=0; 
per_frame_21=Excite = (vol-avg);
per_frame_22=loop (num_res,
per_frame_23=  n = i*8;
per_frame_24=  Freq  = (i/(num_res-1)+minbpm/(maxbpm-minbpm))*(maxbpm-minbpm)/60;
per_frame_25=  Feder = sqr(Freq*6.2832);
per_frame_26=  megabuf (n+4) = megabuf(n+2); megabuf (n+1) *= 1-0.22*dt; 
per_frame_27=  EC_Steps = int (10*Freq*dt)+1;
per_frame_28=  loop (EC_Steps, // Euler-Cauchy steps
per_frame_29=    Kraft = Excite - Feder*megabuf(n + 2) ;
per_frame_30=    megabuf (n+1) += Kraft        * dt/EC_Steps;
per_frame_31=    megabuf (n+2) += megabuf(n+1) * dt/EC_Steps;  );
per_frame_32=  beatcos = megabuf(n+1);  beatsin = megabuf(n+2)*Freq*6.2832;
per_frame_33=  quad = sqrt (pow(beatsin,2) + pow(beatcos,2));
per_frame_34=  megabuf (n+3) = megabuf(n+3) *dec_m +  quad* (1-dec_m);
per_frame_35=  if (megabuf(n+3) > megabuf (maxind*8+3), maxind =i,0);
per_frame_36=  qavg = qavg+pow (megabuf(n+3),2);
per_frame_37=  i += 1;);
per_frame_38=
per_frame_39=qavg = sqrt (qavg/num_res); 
per_frame_40=qdev = 0; i =0; loop (num_res, qdev += pow(megabuf(i+3)-qavg,2); i += 8; );
per_frame_41=qdev = sqrt (qdev/num_res);
per_frame_42=BPM =   (maxind/(num_res-1)+minbpm/(maxbpm-minbpm))*(maxbpm-minbpm);
per_frame_43=
per_frame_44=certain = certain * dec_m + (1-dec_m) * megabuf(maxind*8+3)/qavg;
per_frame_45=dbl_beat = megabuf(maxind*8+2) * megabuf (maxind*8+4) < 0;
per_frame_46=bcount += dbl_beat;
per_frame_47=is_rbeat  = dbl_beat && (bcount%2==0);
per_frame_48=bcount2 += is_rbeat;
per_frame_49=
per_frame_50=trig1 = is_beat && (index==0); trig2 = is_beat && (index==4);
per_frame_51=r1 = if (trig2,(rand(17)-1)*0.1,r1); r1_ += min(0.1,max(-0.1, r1-r1_))*dt*5;
per_frame_52=r2 = if (trig2,rand(1)*0.7-0.3,r2);      r2_ += min(0.1,max(-0.1, r2-r2_))*dt*5;
per_frame_53=r3 = if (trig2,vol*min(1,max(-1,sin(rand(24)))),r3); r3_ += r3*dt;
per_frame_54=
per_frame_55=//persp. center
per_frame_56=if (dbl_beat, j0=0; j1=0; j2=(rand(1)-0.5)*3,0);
per_frame_57=jrel = (certain>6-avg-jrel+jtime/8);
per_frame_58=jtime = max(0,if (jrel, jtime + dt, jtime-dt)); 
per_frame_59=q7 = sin(r3_/7+r1_*4); q8 = 1.5;
per_frame_60=q9 = 10-j2*jrel*5; //z pos
per_frame_61=
per_frame_62=//Comp PLANE
per_frame_63=ax=-r1_; ay = r3_; az = r2_;
per_frame_64=c1 = cos(ax); c2 = cos(ay); c3 = cos(az); s1 = sin(ax); s2 = sin(ay); s3 = sin(az);
per_frame_65=q20 = c2*c3;            q21 = c2*s3;            q22= -s2;
per_frame_66=q23 = s1*s2*c3 - c1*s3; q24 = s1*s2*s3 + c1*c3; q25 = s1*c2;
per_frame_67=q26 = c1*s2*c3 + s1*s3; q27 = c1*s2*s3 - s1*c3; q28 = c1*c2;
per_frame_68=
per_frame_69=
per_frame_70=sax1 = if (trig1, rand(10), sax1);
per_frame_71=sax2 = if (trig1, rand(10), sax2);
per_frame_72=sax3 = if (trig1, rand(10), sax3);
per_frame_73=nstab = if (trig1 && (index2%4==0), int(rand(12)*rand(10)+4), nstab);
per_frame_74=
per_frame_75=//Now to stabs
per_frame_76=slen = 2; sdia = 0.17;
per_frame_77=n = 20500; loop (500, megabuf(n)=megabuf(n-1); n-=1);
per_frame_78=megabuf (20000) = megabuf(20000)*dec_f + (1-dec_f)*sax1;
per_frame_79=n = 21500; loop (500, megabuf(n)=megabuf(n-1); n-=1);
per_frame_80=megabuf (21000) = megabuf(21000)*dec_f + (1-dec_f)*sax2;
per_frame_81=n = 22500; loop (500, megabuf(n)=megabuf(n-1); n-=1);
per_frame_82=megabuf (22000) = megabuf(22000)*dec_f + (1-dec_f)*sax3*0.6;
per_frame_83=
per_frame_84=p = 1; 
per_frame_85=loop (2, 
per_frame_86=  stab = 0;
per_frame_87=  loop (nstab, //individ. Staebe
per_frame_88=    xang = megabuf(20000+25*stab/nstab); yang = 0.2+megabuf(21000+30*stab/nstab); zang = 0;
per_frame_89=    dia = megabuf(22000+20*stab/nstab) ;
per_frame_90=    c1 = cos(xang); c2 = cos(yang); c3 = cos(zang); 
per_frame_91=    s1 = sin(xang); s2 = sin(yang); s3 = sin(zang);
per_frame_92=    ox = 0; oy = 0;  if (p==1, oz = -slen, oz=slen); ;
per_frame_93=    mx = ox*c3 - oy*s3; my = ox*s3 + oy*c3;    ox = mx; oy = my;
per_frame_94=    mx = ox*c2 + oz*s2; mz = - ox*s2 + oz*c2;  ox = mx; oz = mz;
per_frame_95=    my = oy*c1 - oz*s1; mz = oy*s1 + oz*c1;    oy = my; oz = mz;
per_frame_96=    x0 = ox+dia/2; y0 = oy; z0 = oz+slen+.1;
per_frame_97=z0 += BiVol*(max(0,certain-1.5))/8/(0.2+(x0*x0+y0*y0));
per_frame_98=    xang = 0; yang = 0; zang = 6.283 * stab/nstab; //alle Stebe anordnen
per_frame_99=    ox = x0; oy=y0;  oz=z0;  
per_frame_100=    c1 = cos(xang); c2 = cos(yang); c3 = cos(zang); 
per_frame_101=    s1 = sin(xang); s2 = sin(yang); s3 = sin(zang);
per_frame_102=    mx = ox*c3 - oy*s3; my = ox*s3 + oy*c3;    ox = mx; oy = my;
per_frame_103=    mx = ox*c2 + oz*s2; mz = - ox*s2 + oz*c2;  ox = mx; oz = mz;
per_frame_104=    my = oy*c1 - oz*s1; mz = oy*s1 + oz*c1;    oy = my; oz = mz;
per_frame_105=    base = p*1000+4*stab;
per_frame_106=    gmegabuf (base)=ox;
per_frame_107=    gmegabuf (base+1)=oy;
per_frame_108=    gmegabuf (base+2)=oz;
per_frame_109=stab += 1); 
per_frame_110=p += 1);
per_frame_111=
per_frame_112=
per_frame_113=//delay chain
per_frame_114=n = 100; loop (100, gmegabuf(n)=gmegabuf(n-1); n-=1); vol_ = vol_*0.5 + 0.5*vol; gmegabuf(0) = vol_;
per_frame_115=
per_frame_116=//resampled delay chain starts at 500. 
per_frame_117=n = 0; num = 60/BPM/dt; //Num delay bins auf nstab abbilden
per_frame_118=sca =   num/nstab;
per_frame_119=loop (nstab,
per_frame_120=  m1 = floor (sca*n); fra = sca*n-m1;
per_frame_121=  gmegabuf(500+n) = (1-fra)*gmegabuf(m1) + fra*gmegabuf(m1+1);
per_frame_122=n +=1);
per_frame_123=
per_frame_124=q1 = megabuf(maxind*8+1)/megabuf(maxind*8+3);
per_frame_125=q2 = index2%2;
per_frame_126=q3 = min(vol,3);
per_frame_127=q4 = is_beat;
per_frame_128=trel1 += BPM/60*dt;
per_frame_129=q11 = trel1;
per_frame_130=
per_frame_131=reg10 = nstab; 
per_frame_132=reg11 = sdia; //Dicke Stab
per_frame_133=q31 = aspectx;
per_frame_134=q32 = aspecty;
per_frame_135=q5 = bcount*0.02;
per_frame_136=monitor = certain;
per_frame_137=monitor = bpm;
per_frame_138=
per_frame_139=monitor = avg;
per_pixel_1=dx = 0; dy = 0; zoom = 1.1; rot = 0.;
warp_1=`shader_body {
warp_2=`
warp_3=`ret.r = GetBlur3(uv).r*0.4;
warp_4=`//ret.r = GetPixel(uv+float2(0,0.0)).r*0.;
warp_5=`}
comp_1=`#define sat saturate
comp_2=`sampler sampler_pw_noise_lq;;
comp_3=`float2 dz, uv0, uv1,uv2, uv3, uv4;
comp_4=`float3 rs, rs2, rs0, gnd, gnd0;
comp_5=`static const float3 t = float3(q20,q23,q26), s = float3(q22,q25,q28);
comp_6=`static const float3 ts = cross(t,s);
comp_7=`static const float2 hor = texsize.zw*float2(2,0), ver = texsize.zw*float2(0,2);
comp_8=`static const float3 centre = float3(q7,q8,q9);
comp_9=`static const float belo = q27<0;
comp_10=`float3 screen;
comp_11=`
comp_12=`float3 col (float c) {return pow (c,1+1.5*roam_sin);}
comp_13=`
comp_14=`float2 noise3 (float2 uvi) {
comp_15=`  return (tex2D(sampler_noise_hq,uvi)
comp_16=`         +tex2D(sampler_noise_hq,uvi*2)/2  
comp_17=`         +tex2D(sampler_noise_hq,uvi*4)/4); }
comp_18=`
comp_19=`
comp_20=`float3 project () {float z; 
comp_21=`  z = 1/mul(ts,screen) ; 
comp_22=`  return float3((mul(float2x3(t,s),cross(ts,cross(centre,screen)))*z),-z);}
comp_23=`
comp_24=`shader_body {
comp_25=`uv += texsize.zw/2; uv0 = uv;
comp_26=`float k1 = 10/q9;
comp_27=`dz.x = 2.0*GetBlur1(uv+hor*k1).g-2.0*GetBlur1(uv-hor*k1).g;
comp_28=`dz.y = 2.0*GetBlur1(uv+ver*k1).g-2.0*GetBlur1(uv-ver*k1).g;
comp_29=`dz *= GetBlur1(uv).g > 0.08;
comp_30=`uv += dz*0.08;
comp_31=`
comp_32=`screen = float3 ((uv-0.5)*aspect.xy+dz*.1,0.9);
comp_33=`rs0 = project()/12 ;
comp_34=`rs = rs0;
comp_35=`uv2 = float2 (0.3*length (rs.xy), atan2 (rs.x,rs.y)/M_PI/4)/2;
comp_36=`uv3 = float2 (1.3+.03/length (rs.xy), atan2 (rs.x,rs.y)/M_PI/2);
comp_37=`gnd = (tex2D(sampler_pw_noise_lq,uv2).r+1)/2; 
comp_38=`gnd *= sat(2*gnd-length(rs.xy)*5);
comp_39=`
comp_40=`float gmask = sat (1-4*gnd);
comp_41=`float stars = 0; int n = 1; float smask = 0;
comp_42=`uv4 = uv2*float2(0.05,0.5) + float2(-time*0.01,0);
comp_43=`smask = (tex2D (sampler_pw_noise_lq,uv4))-.7;
comp_44=`stars = saturate(.1/length(abs(frac(uv4*256)-.5))*smask)/(0.2+4*uv2.x) / (0.5+uv2.x) * sat(length(rs.xy)-0.2);
comp_45=`
comp_46=`ret += (1-uv.y)*float3(0.0,0.0,0.25)*gmask;
comp_47=`//ret += pow(noise3(uv*float2(.1,0.4)+float2(time*0.02,0)).r*(1-uv.y),2)*gmask*0.07;
comp_48=`ret += gnd/6*float3(1,1,2); //ret *= (.5+lum(ret));
comp_49=`ret += gmask * sat(stars*stars)*0.7;
comp_50=`
comp_51=`// Dioden
comp_52=`uv4 = uv;
comp_53=`float3 dio = max(2*max(GetPixel(uv4).r,GetBlur1(uv4).r),GetBlur3(uv4).r*3);
comp_54=`ret += col(dio*q3);
comp_55=`
comp_56=`// Spiegelung
comp_57=`float2 uvm = uv-(gnd-0.5)*0.02;
comp_58=`float3 mirr = (GetPixel(uvm).b +GetBlur2(uvm).b*4);
comp_59=`ret += col(mirr*gnd) * !belo;
comp_60=`
comp_61=`float3 beam = 0;
comp_62=`for (int n = 1; n <12; n++) {beam += lum(GetBlur2((uv0-0.5)*(1-1.0*n/12) + 0.5))*(1-1.0*n/12);}
comp_63=`//ret += col(beam.r + beam.b*gnd)*.2*q3;
comp_64=`//ret += saturate(0.002/pow(length (sin(73*uv2.xy+gnd*0.1))-0.7,2))*gnd;
comp_65=`uv3 =float2 (1-uv.x,2-uv.y);
comp_66=`float3 shi = sat (4*sin (3*time+14*atan2(uv3.x,uv3.y))-2)*roam_sin;
comp_67=`
comp_68=`//Glas
comp_69=`uv4 = uv0;
comp_70=`ret += pow(GetBlur1(uv4+dz*0.23).g,1)*(1+roam_cos)/2 ;
comp_71=`//ret = GetPixel(uv);
comp_72=`
comp_73=`ret = 1-exp(-ret*2+0.02);
comp_74=`}
comp_75=`
comp_76=`//-------------------------------------------
comp_77=`//Written by martin
comp_78=`
