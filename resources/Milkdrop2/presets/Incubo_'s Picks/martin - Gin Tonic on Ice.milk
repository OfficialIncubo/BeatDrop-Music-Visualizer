MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=4.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=2.579
fWaveSmoothing=0.000
fWaveParam=-0.000
fModWaveAlphaStart=0.400
fModWaveAlphaEnd=1.600
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.100
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.200
ib_size=0.150
ib_r=0.300
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=2.500
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=0.800
b3x=0.800
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.07408
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=0.500
wavecode_0_b=1.000
wavecode_0_a=0.800
wave_0_per_frame1=t1 = 0; reg33=0; reg40 = 0;
wave_0_per_frame2=t3=sin(q5); t4=cos(q5);
wave_0_per_point1=ni = 256;
wave_0_per_point2=o=0;
wave_0_per_point3=g=ni*sin(time*0.23);
wave_0_per_point4=i = max(0,(t1+g)%ni);
wave_0_per_point5=i2 =max(0,(ni-t1-1+g)%ni);
wave_0_per_point6=rx1 = gmegabuf ((i+o)%ni*8+5);
wave_0_per_point7=rx2 = gmegabuf ((i2+o)%ni*8+5);
wave_0_per_point8=ry1 = gmegabuf (i*8+6);
wave_0_per_point9=ry2 = gmegabuf (i2*8+6);
wave_0_per_point10=
wave_0_per_point11=x0 = (rx1-rx2);
wave_0_per_point12=y0 = (ry1+ry2);
wave_0_per_point13=
wave_0_per_point14=x1 = x0+sample*2-.5;
wave_0_per_point15=y1 = max(-10,y0);
wave_0_per_point16=x= x1+.5;
wave_0_per_point17=y= y1+.5;
wave_0_per_point18=
wave_0_per_point19=s=sample*13+reg50;
wave_0_per_point20=r = 0.6 + 0.4*sin(s);
wave_0_per_point21=g = 0.6 + 0.4*sin(s+time*.17);
wave_0_per_point22=b = 0.6 + 0.4*sin(s+time*.23);
wave_0_per_point23=t1 += 1;
wave_0_per_point24=a = max(0.0,min(1,mid_att*2-1))*0.75;
wave_0_per_point25=
wavecode_2_enabled=1
wavecode_2_samples=15
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=0.89152
wavecode_2_smoothing=0.20000
wavecode_2_r=1.000
wavecode_2_g=0.300
wavecode_2_b=1.000
wavecode_2_a=0.800
wave_2_per_point1=x=rand(1); y= rand(1);
wave_2_per_point2=
wave_2_per_point3=r=0.6+0.3*sin(q6);
wave_2_per_point4=g=0.6+0.3*sin(q6*1.3);
wave_2_per_point5=b=0.6+0.3*sin(q6*1.7);
wave_2_per_point6=
wave_2_per_point7=a = max(0,sin(q7*.37));
per_frame_init_1=n = 0; loop (10000, megabuf(n)=gmegabuf(n)=0; n +=1; );
per_frame_init_2=
per_frame_init_3=MINBPM = 60; MAXBPM = 190; num_res = 256; 
per_frame_init_4=i = 0;
per_frame_init_5=loop (num_res, megabuf(i*8) = minbpm * pow(maxbpm/minbpm,i/(num_res-1)); i += 1;);
per_frame_init_6=
per_frame_init_7=r1=r2=r3=0; r3=rand(1)>0.5;s3=r3;idx=-5; t1=rand(100); t2=rand(100); 
per_frame_init_8=reg50=rand(10); yo0=0.5-.3*rand(1); yofs_=yo0;
per_frame_init_9=fov = rand(1)*0.3+.45;
per_frame_1=dt = min (1/fps,0.1); dec_m = 1 - 4*dt; dec_s = 1 - dt;
per_frame_2=vol =  (2*bass+mid+treb)/4 ;
per_frame_3=vol_ = vol_*dec_m + (1-dec_m)*vol; exc = vol-vol_;
per_frame_4=vol__*vol__*dec_m + (1-dec_m)*vol_;
per_frame_5=beat = (vol>vol2) && (time-t0>.5);
per_frame_6=if (beat, vol2=vol*5;t0=time,0); vol2 *= dec_s;idx += beat;
per_frame_7=
per_frame_8=excite = atan (exc*2)/1.6;
per_frame_9=index=0; ratio = log(maxbpm/minbpm); 
per_frame_10=loop (num_res,
per_frame_11=  n = index*8;
per_frame_12=  omega      =   megabuf(n) * 6.2832/60;
per_frame_13=  megabuf (n+1) *= 1-.5*dt; //damping
per_frame_14=  ECS = int (8*omega*dt)+1; 
per_frame_15=  loop (ECS,
per_frame_16=    megabuf (n+1) += (excite - sqr(omega)*megabuf(n + 2)) * dt/ECS;
per_frame_17=    megabuf (n+2) += megabuf(n+1) * dt/ECS);
per_frame_18=  bc  = megabuf(n+1);  
per_frame_19=  bs = megabuf(n+2)*omega; //2pi/60
per_frame_20=  quad     = sqrt (bc*bc+bs*bs) ;
per_frame_21=  megabuf (n+3) = megabuf(n+3) *dec_s +  quad* (1-dec_s);
per_frame_22=  megabuf (n+4) = megabuf(n+3);  megabuf (n+5) = bc;  megabuf (n+6) = bs ;
per_frame_23=  index += 1;);
per_frame_24=
per_frame_25=n = 0; maxind = 0; scale = .14;
per_frame_26=loop (num_res,
per_frame_27=  if (megabuf(n+3) > megabuf(maxind+3), maxind = n, 0);
per_frame_28=  gmegabuf(n+5) = megabuf(n+5) * scale;
per_frame_29=  gmegabuf(n+6) = megabuf(n+6) * scale;
per_frame_30=n+=8;);
per_frame_31=
per_frame_32=if ((idx>0) && beat && (idx%4==0), //aendere was
per_frame_33=  r3 = if (rand(1)>0.4,0,1); //Glanz
per_frame_34=  if (rand(1)>0.3, //ansonsten: Standard
per_frame_35=    if (rand(1)>0.5, //Auswahl
per_frame_36=      r1 = -(.1+rand(1) * .3); r2=0,
per_frame_37=      r2 =  rand(1) * .5; r1=0);
per_frame_38=,  r1=r2=0;) ,0);
per_frame_39=
per_frame_40=s1 = s1*dec_s + (1-dec_s)*r1;
per_frame_41=s2 = s2*dec_s + (1-dec_s)*r2;
per_frame_42=s3 = s3*dec_s + (1-dec_s)*r3;
per_frame_43=q1 = s1;
per_frame_44=q2 = s2;
per_frame_45=q6=t1; q7=t2;
per_frame_46=rot = .0; warp = 0; sy=sx=1; dx=0;dy=0.0055;
per_frame_47=
per_frame_48=yofs = if (q2>0.05,0.,yo0);
per_frame_49=yofs_ = yofs_*dec_s + (1-dec_s)*yofs;
per_frame_50=q4=yofs_; //Fluchtpunkt !
per_frame_51=
per_frame_52=t1 += (3+mid_att)*dt*.1; t2 += (3+bass_att)*dt*.1;
per_frame_53=q20 = 0.2* max(0,sin (t2*.37));
per_frame_54=q21 = 0.2* max(0,sin (t1*.23));
per_frame_55=
per_frame_56=q25 = fov*(1-.5*q2);
per_frame_57=q26 = 1-s3*.3;
per_frame_58=q32 = aspecty;
per_frame_59=monitor = s3;
per_pixel_1=zoom=1 + q2*0.03 + abs(x-.5)*q1;
warp_1=`shader_body
warp_2=`{
warp_3=`uv = (uv-uv_orig)*(1+abs(lum(GetBlur2(uv)-GetBlur1(uv)))*-16) + uv_orig;
warp_4=`int f2 = frame%2;
warp_5=`uv.x += (f2-.5)*texsize.z;
warp_6=`ret = tex2D (sampler_fw_main, uv);
warp_7=`
warp_8=`ret -= 0.006 * f2;
warp_9=`//ret -= saturate(uv.y-.5)*0.05;
warp_10=`
warp_11=`
warp_12=`}
comp_1=`#define GP GetPixel
comp_2=`static float2 hor = float2 (texsize.z,0);
comp_3=`static float2 ver = float2 (0, texsize.w);
comp_4=`static float2x2 rot45 = float2x2(1,1,-1,1)*sqrt(0.5);
comp_5=`static float2 center = float2(.5,q4);
comp_6=`float2 uv1,uv2,uv3,uv6,dz,dz0,dz1;
comp_7=`float3 noise, ret1, neu, mus;
comp_8=`
comp_9=`shader_body {
comp_10=`uv6 = (uv-0.5)* 1.5*(1+-1*pow(uv.y-.5,1.5)) + .5;
comp_11=`uv = lerp(uv,uv6,0);
comp_12=`uv1 = (uv-center); 
comp_13=`
comp_14=`ret1 = pow(saturate(1-1*uv.y),2)*float3(0,q20,q21);
comp_15=`int anz = 3;
comp_16=`int n = 0;
comp_17=`dz=0; dz1=0;
comp_18=`while (n < anz) {
comp_19=`  float dist = (1-frac(1.0/anz*n))*.9; 
comp_20=`  float inten =  saturate(1-dist*.75);
comp_21=`  uv3 = q25*anz*(uv1+float2(0,q2*.25-0.1))*dist + center;
comp_22=`  float mask = saturate(4-8*max(abs(uv3.x-.5),abs(uv3.y-.5)));
comp_23=`  dz0.x = lum(GP(uv3+hor))- lum(GP (uv3-hor))*q26;
comp_24=`  dz0.y = lum(GP(uv3+ver))- lum(GP (uv3-ver))*q26;
comp_25=`  dz += inten*mask*dz0;
comp_26=`  dz0.x = (lum(GP(uv3+hor))- lum(GP (uv3-hor)));
comp_27=`  dz0.y = (lum(GP(uv3+ver))- lum(GP (uv3-ver)));
comp_28=`  dz1 += inten*mask*dz0;
comp_29=`  neu = max(GP(uv3+dz*.1),GetBlur3(uv3)*.70*rand_preset.y);
comp_30=`  ret1 = max(ret1,neu*mask*inten);
comp_31=`n++;}
comp_32=`
comp_33=`uv1= mul((uv-.5)*aspect.xy,rot45);
comp_34=`dz = mul(dz*aspect.xy ,rot45);
comp_35=`uv6 = sin(10*uv1+dz*16 + float2(time*.2,0));
comp_36=`mus = 1/length(uv6) * (1+4*length(dz1)*sqrt(treb_att)*(1+4*GetBlur2(frac((0.6-uv)*0.25+.5))));
comp_37=`
comp_38=`ret = sqrt(ret1)*(-.1+rand_preset.z*.3+mus*.5);
comp_39=`ret = 1-exp(-ret*(2-1.99*rad*rand_preset.y));
comp_40=`//ret = GetPixel(uv);
comp_41=`}
