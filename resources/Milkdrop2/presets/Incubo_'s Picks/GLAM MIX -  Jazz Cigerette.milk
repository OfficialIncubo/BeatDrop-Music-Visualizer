MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=2.835
fWaveSmoothing=0.540
fWaveParam=0.380
fModWaveAlphaStart=0.810
fModWaveAlphaEnd=1.400
fWarpAnimSpeed=0.010
fWarpScale=100.000
fZoomExponent=0.24298
fShader=0.000
zoom=0.99010
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=1.00000
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=1.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.300
b1x=0.000
b2x=0.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=256
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=0.10893
wavecode_0_smoothing=0.50000
wavecode_0_r=0.500
wavecode_0_g=0.300
wavecode_0_b=1.000
wavecode_0_a=0.070
wave_0_per_point1=z=if(int(rand(2))%2,-1,1);
wave_0_per_point2=v=(value1+value2)*z;
wave_0_per_point3=//a=1/abs(value1-value2)*.01*v;
wave_0_per_point4=c=((value1-value2)+v);//*q1;
wave_0_per_point5=x=.5-c;
wave_0_per_point6=y=sample;
wave_0_per_point7=x=(x-.5)*q3/q4+.5;
wave_0_per_point8=y=(y-.5)*q4/q3+.5;
wave_0_per_point9=pi23=asin(-1)*4*.333333333;
wave_0_per_point10= r         = (sin(sample          +time)+1)*0.5;
wave_0_per_point11= g         = (sin(sample   -1*Pi23+time)+1)*0.5;
wave_0_per_point12= b         = (sin(sample   -2*Pi23+time)+1)*0.5;
shapecode_0_enabled=1
shapecode_0_sides=16
shapecode_0_additive=0
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=3
shapecode_0_x=0.730
shapecode_0_y=0.500
shapecode_0_rad=0.29466
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.87511
shapecode_0_r=0.700
shapecode_0_g=0.700
shapecode_0_b=1.000
shapecode_0_a=1.000
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shape_0_per_frame1=trig = q25;
shape_0_per_frame2=a = trig*.8; a2 = 0;
shape_0_per_frame3=
shape_0_per_frame4=x0 = x0 *bnot(trig) + trig*rand(100)/100;
shape_0_per_frame5=y0 = y0 *bnot(trig) + trig*rand(100)/100;
shape_0_per_frame6=tex_ang = rand(20);
shape_0_per_frame7=rad = .1+rand(10)/8;
shape_0_per_frame8=
shape_0_per_frame9=x = x0; y = y0;
shape_0_per_frame10=r = .7+.3*sin(time/12);
shape_0_per_frame11=b = .7+.3*sin(time/15);
shape_0_per_frame12=g = .7+.3*sin(time/8);
shape_0_per_frame13=r2 = r; b2 = b; g2 = g;
shapecode_1_enabled=1
shapecode_1_sides=36
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=1
shapecode_1_num_inst=4
shapecode_1_x=0.300
shapecode_1_y=0.500
shapecode_1_rad=0.05429
shapecode_1_ang=1.25664
shapecode_1_tex_ang=0.37699
shapecode_1_tex_zoom=1.02841
shapecode_1_r=1.000
shapecode_1_g=0.700
shapecode_1_b=0.500
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.590
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=x = q31; y = q32;
shape_1_per_frame2=rad = .06;
shape_1_per_frame3=tex_ang = time;
shape_1_per_frame4=a = q30;
shapecode_2_enabled=1
shapecode_2_sides=32
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=33
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=0.000
shapecode_2_g=0.500
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.500
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shape_2_per_frame1=trans = rand(int(q30))/15+instance-instance;
shape_2_per_frame2=trans2 = rand(int(q30))/15+instance-instance;
shape_2_per_frame3=trans3 = rand(int(q30))/15+instance-instance;
shape_2_per_frame4=a = trans;
shape_2_per_frame5=//a2 = trans2;
shape_2_per_frame6=//border_a = trans3;
shape_2_per_frame7=
shape_2_per_frame8=x = .5 + rand(15)*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_2_per_frame9=y = .5 + rand(15)*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_2_per_frame10=rad = .09 + rand(int(q30))/15+instance-instance;
shape_2_per_frame11=r=rand(q30)*.1+instance-instance;
shape_2_per_frame12=g=rand(q30)*.1+instance-instance;
shape_2_per_frame13=b=rand(q30)*.1+instance-instance;
shape_2_per_frame14=r2=rand(q30)*.1+instance-instance;
shape_2_per_frame15=g2=rand(q30)*.1+instance-instance;
shape_2_per_frame16=b2=rand(q30)*.1+instance-instance;
shape_2_per_frame17=border_r=rand(q30)*.1+instance-instance;
shape_2_per_frame18=border_g=rand(q30)*.1+instance-instance;
shape_2_per_frame19=border_b=rand(q30)*.1+instance-instance;
shapecode_3_enabled=1
shapecode_3_sides=32
shapecode_3_additive=1
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=7
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.500
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.500
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=trans = rand(int(q30))/15+instance-instance;
shape_3_per_frame2=trans2 = rand(int(q30))/15+instance-instance;
shape_3_per_frame3=trans3 = rand(int(q30))/15+instance-instance;
shape_3_per_frame4=a = trans;
shape_3_per_frame5=//a2 = trans2;
shape_3_per_frame6=//border_a = trans3;
shape_3_per_frame7=
shape_3_per_frame8=x = .5 + rand(15)*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_3_per_frame9=y = .5 + rand(15)*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;
shape_3_per_frame10=rad = .09 + rand(int(q30))/15+instance-instance;
shape_3_per_frame11=r=rand(q30)*.1+instance-instance;
shape_3_per_frame12=g=rand(q30)*.1+instance-instance;
shape_3_per_frame13=b=rand(q30)*.1+instance-instance;
shape_3_per_frame14=r2=rand(q30)*.1+instance-instance;
shape_3_per_frame15=g2=rand(q30)*.1+instance-instance;
shape_3_per_frame16=b2=rand(q30)*.1+instance-instance;
shape_3_per_frame17=border_r=rand(q30)*.1+instance-instance;
shape_3_per_frame18=border_g=rand(q30)*.1+instance-instance;
shape_3_per_frame19=border_b=rand(q30)*.1+instance-instance;
shape_3_per_frame20=
per_frame_init_1=x1 = 0.9;
per_frame_init_2=y1 = 0.5;
per_frame_init_3=
per_frame_init_4=x2 = 0.5; y2 = 0.5;
per_frame_init_5=x3 = 0.5; y3 = 0.5;
per_frame_init_6=x4 = 0.5; y4 = 0.5;
per_frame_1=//spiral collide frame
per_frame_2=t = t + 2.5/fps;
per_frame_3=t = if(above(t,2),t-2,t);
per_frame_4=q22 = -t;
per_frame_5=// Flexis dampened sound response functions
per_frame_6=db = db*0.98 + bass_att*0.2; // dampener
per_frame_7=bb = bb + db*0.1; // accumulation, replace time expressions with this ;)
per_frame_8=dt = dt*0.98 + treb_att*0.2;
per_frame_9=tt = tt + dt*0.1;
per_frame_10=dm = dm*0.98 + mid_att*0.2;
per_frame_11=mm = mm + dm*0.1;
per_frame_12=//***** [q11-q18] variables for Flexis caleidoscope shader code *****
per_frame_13=// change
per_frame_14=q13 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x
per_frame_15=q14 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y
per_frame_16=w = (bb-tt)*0.1;                   // angle
per_frame_17=q16 = 0.8 - (db-dt)*0.04;         // size
per_frame_18=//don't change
per_frame_19=q11 = sin(w);
per_frame_20=q12 = cos(w);
per_frame_21=q17 = sin(-w);
per_frame_22=q18 = cos(-w);
per_frame_23=q15 = 1/q16;
per_frame_24=zoom =1;// 0.999;
per_frame_25=warp = 0;
per_frame_26=
per_frame_27=
per_frame_28=// a
per_frame_29=scale = 8;
per_frame_30=angle = -time*0.2;
per_frame_31=
per_frame_32=q1 = scale*cos(angle); // the real part
per_frame_33=q2 = scale*sin(angle); // the imaginary part
per_frame_34=
per_frame_35=// b
per_frame_36=
per_frame_37=q3 = 0; // the real part
per_frame_38=q4 = 0.3; // the imaginary part
per_frame_39=
per_frame_40=// c
per_frame_41=scale = 0.8;
per_frame_42=angle = time*0.2;
per_frame_43=
per_frame_44=q5 = scale*cos(angle); // the real part
per_frame_45=q6 = scale*sin(angle); // the imaginary part
per_frame_46=
per_frame_47=// d
per_frame_48=q7 = -0.25; // the real part
per_frame_49=q8 = 0.2; // the imaginary part
per_frame_50=
per_frame_51=q11 = 1/asin(1);
warp_1=`float2 uv0, uv1;
warp_2=`float d;
warp_3=`static const float2 par = float2 (q1,q2);
warp_4=`
warp_5=`shader_body
warp_6=`{
warp_7=`uv0 = 5*uv;
warp_8=`uv1 = uv0;
warp_9=`d= length(uv1);
warp_10=`
warp_11=`for ( int n=0; (n <10) && (n<14*d) ; n++ )
warp_12=`{
warp_13=`uv1 += sin(uv1.yx+par.yx) + uv0 - par;
warp_14=`d=frac(.1*length (uv1));
warp_15=`}
warp_16=`
warp_17=`ret= d*float3 (1, 1, 4);
warp_18=`}
comp_1=`shader_body
comp_2=`{
comp_3=`    float2 uv2;
comp_4=`
comp_5=`    float4 c = float4(1,0.4,0.15,0.1);
comp_6=`
comp_7=`    uv2 = uv + float2(1,0)*texsize.zw;
comp_8=`    float gx1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_9=`    uv2 = uv + float2(-1,0)*texsize.zw;
comp_10=`    float gx2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_11=`
comp_12=`    uv2 = uv + float2(0,1)*texsize.zw;
comp_13=`    float gy1 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_14=`    uv2 = uv + float2(0,-1)*texsize.zw;
comp_15=`    float gy2 = GetPixel(uv2)*c.x + GetBlur1(uv2)*c.y + GetBlur2(uv2)*c.z + GetBlur3(uv2)*c.w;
comp_16=`
comp_17=`    float3 g = normalize(float3(gx1-gx2, gy1-gy2, 0.14));
comp_18=`
comp_19=`    ret = 0.5 + 0.5*g;
comp_20=`    ret *= saturate(length(ret.xy-0.5)*5);
comp_21=`    ret = ret.xxy;
comp_22=`    ret += 1.15;
comp_23=`    ret *= lerp(ret,ret*(GetBlur3(uv)-GetBlur1(uv)*treb_att),pow(hue_shader.xzy,bass_att));
comp_24=`    ret *= ret;
comp_25=`
comp_26=`    //ret *= 1.5; //old gamma effect    
comp_27=`//MilkDrop3 SoftColor Mode:
comp_28=`ret += float3(-0.2,-0.0,0.3);
comp_29=`//MilkDrop3 Brightness Mode:
comp_30=`ret *= 0.8;
comp_31=`//MilkDrop3 Color Mode:
comp_32=`ret /= float3(0.4,-1.7,1.3);
comp_33=`}
