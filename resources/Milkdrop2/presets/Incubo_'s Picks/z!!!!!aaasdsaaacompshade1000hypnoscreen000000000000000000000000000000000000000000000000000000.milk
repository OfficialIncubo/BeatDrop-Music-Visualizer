MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=1.000
fDecay=0.970
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=3
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=0.000
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=1.000
wave_y=1.000
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=3.000
nMotionVectorsY=2.000
mv_dx=0.020
mv_dy=-0.020
mv_l=0.150
mv_r=0.490
mv_g=0.480
mv_b=0.300
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=16
wavecode_0_sep=60
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=meanbass = 0.01*(meanbass*99+bass_att);
wave_0_per_point2=meantreb = 0.01*(meantreb*99+treb_att);
wave_0_per_point3=meanmid = 0.01*(meanmid*99+mid_att);
wave_0_per_point4=bassdiff = (bass_att - meanbass)*15;
wave_0_per_point5=trebdiff = (treb_att - meantreb)*15;
wave_0_per_point6=middiff = (mid_att - meanmid)*15;
wave_0_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_0_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_0_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_0_per_point10=baprg=baprg+ba*.3;
wave_0_per_point11=trprg=trprg+tr*.2;
wave_0_per_point12=miprg=miprg+tr*.2;
wave_0_per_point13=
wave_0_per_point14=
wave_0_per_point15=dim =0.65+.3*sin(miprg); //Dancer dimensions
wave_0_per_point16=xpos=0;//+.3*sin(baprg);//Dancer x position variation
wave_0_per_point17=ypos=0;//+.2*sin(trprg);//Dancer y position variation
wave_0_per_point18=
wave_0_per_point19=
wave_0_per_point20=//Position Stabilization
wave_0_per_point21=xpos=xpos+(1-dim)/2;
wave_0_per_point22=ypos=ypos+(1-dim)/2;
wave_0_per_point23=
wave_0_per_point24=meanbass = 0.01*(meanbass*99+bass);
wave_0_per_point25=meantreb = 0.01*(meantreb*99+treb);
wave_0_per_point26=meanmid = 0.01*(meanmid*99+mid);
wave_0_per_point27=bassdiff = (bass - meanbass)*15;
wave_0_per_point28=trebdiff = (treb - meantreb)*15;
wave_0_per_point29=middiff = (mid - meanmid)*15;
wave_0_per_point30=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_0_per_point31=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_0_per_point32=mi = min(above(middiff,0)*middiff*.005,.11);
wave_0_per_point33=
wave_0_per_point34=mi2_prg = mi2_prg+mi;
wave_0_per_point35=gam = abs(gam-above(mi2_prg,5));
wave_0_per_point36=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_0_per_point37=
wave_0_per_point38=
wave_0_per_point39=test=0+0.2*sin(time); tes2=0+0.2*cos(time); qw=1+test; wq=1+tes2; 
wave_0_per_point40=vz=0.1/(value1-value2); vc=abs(vz)*wq; vb=abs(vc)/0.001;
wave_0_per_point41=
wave_0_per_point42=
wave_0_per_point43=s = sample *section; section=0;
wave_0_per_point44=//legs
wave_0_per_point45=
wave_0_per_point46=section +=1; isec=equal(int(s),section);
wave_0_per_point47=
wave_0_per_point48=x= if(isec,.492+((1/vc)*wq)*qw,.487+((1/vc)*qw)*qw)-((ba-tr)*.15)*gam;  //l foot
wave_0_per_point49=y= if(isec,.182-((ba+tr)*.7)*gam,.182-((ba-tr)*.72)*gam);
wave_0_per_point50=r= if(isec,1,r);
wave_0_per_point51=g= if(isec,0,g);
wave_0_per_point52=b= if(isec,0,b);
wave_0_per_point53=a= if(isec,1,a);
wave_0_per_point54=
wave_0_per_point55=section +=1; isec=equal(int(s),section);
wave_0_per_point56=
wave_0_per_point57=x= if(isec,.52+sin(ba*100-vc)*.020*((1/vc)*wq)*wq,x); //inside leg
wave_0_per_point58=y= if(isec,.43+0.02*wq,y);
wave_0_per_point59=r= if(isec,0,r);
wave_0_per_point60=g= if(isec,1,g);
wave_0_per_point61=b= if(isec,0,b);
wave_0_per_point62=a= if(isec,1,a);
wave_0_per_point63=
wave_0_per_point64=
wave_0_per_point65=section +=1; isec=equal(int(s),section);
wave_0_per_point66=
wave_0_per_point67=x= if(isec,(.61+(1/(vc+bass_att))*(mid_att-qw))*qw,x); //r leg
wave_0_per_point68=y= if(isec,.182-((ba)*.25)*(1-gam),y);
wave_0_per_point69=r= if(isec,0,r);
wave_0_per_point70=g= if(isec,1,g);
wave_0_per_point71=b= if(isec,1,b);
wave_0_per_point72=a= if(isec,0,a);
wave_0_per_point73=
wave_0_per_point74=
wave_0_per_point75=section +=1; isec=equal(int(s),section);
wave_0_per_point76=
wave_0_per_point77=x= if(isec,.52+sin(ba*100+vc)*.018,x); //waist
wave_0_per_point78=y= if(isec,.43,y);
wave_0_per_point79=r= if(isec,1,r);
wave_0_per_point80=g= if(isec,0,g);
wave_0_per_point81=b= if(isec,1,b);
wave_0_per_point82=a= if(isec,1,a);
wave_0_per_point83=
wave_0_per_point84=//Corpo
wave_0_per_point85=
wave_0_per_point86=section +=1; isec=equal(int(s),section);
wave_0_per_point87=
wave_0_per_point88=x= if(isec,.531-sin(ba*100-vc)*.035,x); //spine
wave_0_per_point89=y= if(isec,.56,y);
wave_0_per_point90=r= if(isec,0,r);
wave_0_per_point91=g= if(isec,1,g);
wave_0_per_point92=b= if(isec,1,b);
wave_0_per_point93=a= if(isec,1,a);
wave_0_per_point94=
wave_0_per_point95=
wave_0_per_point96=//Braccia
wave_0_per_point97=
wave_0_per_point98=section +=1; isec=equal(int(s),section);
wave_0_per_point99=
wave_0_per_point100=x= if(isec,.45-mi*abs(.39+0.85*wq),x); //screen left arm extension
wave_0_per_point101=y= if(isec,.528+(1/vb)*wq+sin(ba*75-(13*wq))*.042,y); //screen left arm length
wave_0_per_point102=r= if(isec,1,r);
wave_0_per_point103=g= if(isec,0,g);
wave_0_per_point104=b= if(isec,1,b);
wave_0_per_point105=a= if(isec,1,a);
wave_0_per_point106=
wave_0_per_point107=section +=1; isec=equal(int(s),section);
wave_0_per_point108=
wave_0_per_point109=x= if(isec,(.558+(sin(ba*100)*wq)*.033),x); //arm return screen left
wave_0_per_point110=y= if(isec,.586+0.05*(6/vb),y); //collar height
wave_0_per_point111=r= if(isec,1,r);
wave_0_per_point112=g= if(isec,1,g);
wave_0_per_point113=b= if(isec,1,b);
wave_0_per_point114=a= if(isec,1,a);
wave_0_per_point115=
wave_0_per_point116=section +=1; isec=equal(int(s),section);
wave_0_per_point117=
wave_0_per_point118=x= if(isec,(.51+abs(tr*0.4*qw)),x); //screen right arm extension
wave_0_per_point119=y= if(isec,.55-(12/vb)*0.04,y);   //screen right arm length
wave_0_per_point120=r= if(isec,0,r);
wave_0_per_point121=g= if(isec,0,g);
wave_0_per_point122=b= if(isec,0,b);
wave_0_per_point123=a= if(isec,1,a);
wave_0_per_point124=
wave_0_per_point125=section +=1; isec=equal(int(s),section);
wave_0_per_point126=
wave_0_per_point127=x= if(isec,.62+(ba*0.129)*qw,x); //arm entry screen right hand pos
wave_0_per_point128=y= if(isec,(.54-wq*(6/vb)-abs(sin(ba*100)*.015))*wq,y);
wave_0_per_point129=r= if(isec,1,r);
wave_0_per_point130=g= if(isec,0,g);
wave_0_per_point131=b= if(isec,0,b);
wave_0_per_point132=a= if(isec,1,a);
wave_0_per_point133=
wave_0_per_point134=//Testa
wave_0_per_point135=
wave_0_per_point136=section +=1; isec=equal(int(s),section);
wave_0_per_point137=
wave_0_per_point138=x= if(isec,.52+(ba*0.13)*qw,x); //collar
wave_0_per_point139=y= if(isec,.57,y);
wave_0_per_point140=r= if(isec,0,r);
wave_0_per_point141=g= if(isec,1,g);
wave_0_per_point142=b= if(isec,0,b);
wave_0_per_point143=a= if(isec,1,a);
wave_0_per_point144=
wave_0_per_point145=section +=1; isec=equal(int(s),section);
wave_0_per_point146=
wave_0_per_point147=x= if(isec,.51+(ba*.23)*qw,x); // left side temple ear
wave_0_per_point148=y= if(isec,(.591-ba*.13),y);
wave_0_per_point149=r= if(isec,0,r);
wave_0_per_point150=g= if(isec,1,g);
wave_0_per_point151=b= if(isec,1,b);
wave_0_per_point152=a= if(isec,1,a);
wave_0_per_point153=
wave_0_per_point154=
wave_0_per_point155=section +=1; isec=equal(int(s),section);
wave_0_per_point156=
wave_0_per_point157=x= if(isec,.497-(ba*.19)*qw,x); // hairline l
wave_0_per_point158=y= if(isec,.638-(ba*.13)*qw,y);
wave_0_per_point159=r= if(isec,1,r);
wave_0_per_point160=g= if(isec,0,g);
wave_0_per_point161=b= if(isec,1,b);
wave_0_per_point162=a= if(isec,1,a);
wave_0_per_point163=
wave_0_per_point164=section +=1; isec=equal(int(s),section);
wave_0_per_point165=
wave_0_per_point166=x= if(isec,.535-(ba*.21)*qw,x); // hairline r
wave_0_per_point167=y= if(isec,.65+(ba*.13)*qw,y);
wave_0_per_point168=r= if(isec,1,r);
wave_0_per_point169=g= if(isec,0,g);
wave_0_per_point170=b= if(isec,1,b);
wave_0_per_point171=a= if(isec,1,a);
wave_0_per_point172=
wave_0_per_point173=section +=1; isec=equal(int(s),section);
wave_0_per_point174=
wave_0_per_point175=x= if(isec,.55-(ba*.18)*qw,x); // right side temple ear
wave_0_per_point176=y= if(isec,.631,y);
wave_0_per_point177=r= if(isec,0,r);
wave_0_per_point178=g= if(isec,0,g);
wave_0_per_point179=b= if(isec,1,b);
wave_0_per_point180=a= if(isec,1,a);
wave_0_per_point181=
wave_0_per_point182=section +=1; isec=equal(int(s),section);
wave_0_per_point183=
wave_0_per_point184=x= if(isec,.53+(ba*0.13)*qw,x); //right face side chin
wave_0_per_point185=y= if(isec,.591,y);
wave_0_per_point186=r= if(isec,1,r);
wave_0_per_point187=g= if(isec,0,g);
wave_0_per_point188=b= if(isec,1,b);
wave_0_per_point189=a= if(isec,1,a);
wave_0_per_point190=
wave_0_per_point191=//add process post section
wave_0_per_point192=
wave_0_per_point193=x=x-0.5; y=y-0.5; //use polar from here
wave_0_per_point194=x=x*q28; //sign(var)
wave_0_per_point195=
wave_0_per_point196=
wave_0_per_point197=
wave_0_per_point198=x=(x+0.5)*dim+xpos;
wave_0_per_point199=y=(y+0.5)*dim+ypos;
wavecode_1_enabled=1
wavecode_1_samples=16
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=meanbass = 0.01*(meanbass*99+bass_att);
wave_1_per_point2=meantreb = 0.01*(meantreb*99+treb_att);
wave_1_per_point3=meanmid = 0.01*(meanmid*99+mid_att);
wave_1_per_point4=bassdiff = (bass_att - meanbass)*15;
wave_1_per_point5=trebdiff = (treb_att - meantreb)*15;
wave_1_per_point6=middiff = (mid_att - meanmid)*15;
wave_1_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_1_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_1_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_1_per_point10=baprg=baprg+ba*.4;
wave_1_per_point11=trprg=trprg+tr*.1;
wave_1_per_point12=miprg=miprg+tr*.3;
wave_1_per_point13=
wave_1_per_point14=
wave_1_per_point15=dim =.5+.3*sin(baprg); //Dancer dimensions
wave_1_per_point16=xpos=0+.3*sin(trprg);//Dancer x position variation
wave_1_per_point17=ypos=0+.2*sin(miprg);//Dancer y position variation
wave_1_per_point18=
wave_1_per_point19=
wave_1_per_point20=
wave_1_per_point21=//Position Stabilization
wave_1_per_point22=xpos=xpos+(1-dim)/2;
wave_1_per_point23=ypos=ypos+(1-dim)/2;
wave_1_per_point24=
wave_1_per_point25=meanbass = 0.01*(meanbass*99+bass);
wave_1_per_point26=meantreb = 0.01*(meantreb*99+treb);
wave_1_per_point27=meanmid = 0.01*(meanmid*99+mid);
wave_1_per_point28=bassdiff = (bass - meanbass)*15;
wave_1_per_point29=trebdiff = (treb - meantreb)*15;
wave_1_per_point30=middiff = (mid - meanmid)*15;
wave_1_per_point31=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_1_per_point32=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_1_per_point33=mi = min(above(middiff,0)*middiff*.005,.11);
wave_1_per_point34=
wave_1_per_point35=mi2_prg = mi2_prg+mi;
wave_1_per_point36=gam = abs(gam-above(mi2_prg,5));
wave_1_per_point37=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_1_per_point38=
wave_1_per_point39=s = sample *15;
wave_1_per_point40=//Gambe
wave_1_per_point41=x= if(equal(int(s),1),.4,.4);
wave_1_per_point42=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_1_per_point43=
wave_1_per_point44=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_1_per_point45=y= if(equal(int(s),2),.4,y);
wave_1_per_point46=
wave_1_per_point47=x= if(equal(int(s),3),.6,x);
wave_1_per_point48=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_1_per_point49=
wave_1_per_point50=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_1_per_point51=y= if(equal(int(s),4),.4,y);
wave_1_per_point52=
wave_1_per_point53=//Corpo
wave_1_per_point54=x= if(equal(int(s),5),.5,x);
wave_1_per_point55=y= if(equal(int(s),5),.6,y);
wave_1_per_point56=
wave_1_per_point57=//Braccia
wave_1_per_point58=x= if(equal(int(s),6),.4-mi*.23,x);
wave_1_per_point59=y= if(equal(int(s),6),.5+mi,y);
wave_1_per_point60=
wave_1_per_point61=x= if(equal(int(s),7),.5,x);
wave_1_per_point62=y= if(equal(int(s),7),.6,y);
wave_1_per_point63=
wave_1_per_point64=x= if(equal(int(s),8),.6+tr*.23,x);
wave_1_per_point65=y= if(equal(int(s),8),.5+tr,y);
wave_1_per_point66=
wave_1_per_point67=x= if(equal(int(s),9),.5,x);
wave_1_per_point68=y= if(equal(int(s),9),.6,y);
wave_1_per_point69=
wave_1_per_point70=//Testa
wave_1_per_point71=x= if(equal(int(s),10),.5,x);
wave_1_per_point72=y= if(equal(int(s),10),.62,y);
wave_1_per_point73=
wave_1_per_point74=x= if(equal(int(s),11),.47-ba*.23,x);
wave_1_per_point75=y= if(equal(int(s),11),.62,y);
wave_1_per_point76=x= if(equal(int(s),12),.47-ba*.23,x);
wave_1_per_point77=y= if(equal(int(s),12),.67+ba*.23,y);
wave_1_per_point78=
wave_1_per_point79=x= if(equal(int(s),13),.53+ba*.23,x);
wave_1_per_point80=y= if(equal(int(s),13),.67+ba*.23,y);
wave_1_per_point81=
wave_1_per_point82=x= if(equal(int(s),14),.53+ba*.23,x);
wave_1_per_point83=y= if(equal(int(s),14),.62,y);
wave_1_per_point84=
wave_1_per_point85=x= if(equal(int(s),15),.50,x);
wave_1_per_point86=y= if(equal(int(s),15),.62,y);
wave_1_per_point87=
wave_1_per_point88=x=x*dim+xpos;
wave_1_per_point89=y=y*dim+ypos;
wave_1_per_point90=
wave_1_per_point91=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_1_per_point92=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_1_per_point93=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_1_per_point94=
wave_1_per_point95=hm=sample+mi2_prg;
wave_1_per_point96=ht=sample+tr_prg;
wave_1_per_point97=hb=sample+ba_prg;
wave_1_per_point98=
wave_1_per_point99=r=hm;
wave_1_per_point100=g=ht;
wave_1_per_point101=b=hb;
wave_1_per_point102=a=.8;
wavecode_2_enabled=1
wavecode_2_samples=16
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=meanbass = 0.01*(meanbass*99+bass);
wave_2_per_point2=meantreb = 0.01*(meantreb*99+treb);
wave_2_per_point3=meanmid = 0.01*(meanmid*99+mid);
wave_2_per_point4=bassdiff = (bass - meanbass)*15;
wave_2_per_point5=trebdiff = (treb - meantreb)*15;
wave_2_per_point6=middiff = (mid - meanmid)*15;
wave_2_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_2_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_2_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_2_per_point10=baprg=baprg+ba*.1;
wave_2_per_point11=trprg=trprg+tr*.24;
wave_2_per_point12=miprg=miprg+tr*.3;
wave_2_per_point13=
wave_2_per_point14=
wave_2_per_point15=dim =.5+.3*sin(miprg); //Dancer dimensions
wave_2_per_point16=xpos=0+.3*sin(trprg);//Dancer x position variation
wave_2_per_point17=ypos=0+.2*sin(baprg);//Dancer y position variation
wave_2_per_point18=
wave_2_per_point19=
wave_2_per_point20=
wave_2_per_point21=//Position Stabilization
wave_2_per_point22=xpos=xpos+(1-dim)/2;
wave_2_per_point23=ypos=ypos+(1-dim)/2;
wave_2_per_point24=
wave_2_per_point25=meanbass = 0.01*(meanbass*99+bass);
wave_2_per_point26=meantreb = 0.01*(meantreb*99+treb);
wave_2_per_point27=meanmid = 0.01*(meanmid*99+mid);
wave_2_per_point28=bassdiff = (bass - meanbass)*15;
wave_2_per_point29=trebdiff = (treb - meantreb)*15;
wave_2_per_point30=middiff = (mid - meanmid)*15;
wave_2_per_point31=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_2_per_point32=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_2_per_point33=mi = min(above(middiff,0)*middiff*.005,.11);
wave_2_per_point34=
wave_2_per_point35=mi2_prg = mi2_prg+mi;
wave_2_per_point36=gam = abs(gam-above(mi2_prg,5));
wave_2_per_point37=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_2_per_point38=
wave_2_per_point39=s = sample *15;
wave_2_per_point40=//Gambe
wave_2_per_point41=x= if(equal(int(s),1),.4,.4);
wave_2_per_point42=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_2_per_point43=
wave_2_per_point44=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_2_per_point45=y= if(equal(int(s),2),.4,y);
wave_2_per_point46=
wave_2_per_point47=x= if(equal(int(s),3),.6,x);
wave_2_per_point48=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_2_per_point49=
wave_2_per_point50=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_2_per_point51=y= if(equal(int(s),4),.4,y);
wave_2_per_point52=
wave_2_per_point53=//Corpo
wave_2_per_point54=x= if(equal(int(s),5),.5,x);
wave_2_per_point55=y= if(equal(int(s),5),.6,y);
wave_2_per_point56=
wave_2_per_point57=//Braccia
wave_2_per_point58=x= if(equal(int(s),6),.4-mi*.23,x);
wave_2_per_point59=y= if(equal(int(s),6),.5+mi,y);
wave_2_per_point60=
wave_2_per_point61=x= if(equal(int(s),7),.5,x);
wave_2_per_point62=y= if(equal(int(s),7),.6,y);
wave_2_per_point63=
wave_2_per_point64=x= if(equal(int(s),8),.6+tr*.23,x);
wave_2_per_point65=y= if(equal(int(s),8),.5+tr,y);
wave_2_per_point66=
wave_2_per_point67=x= if(equal(int(s),9),.5,x);
wave_2_per_point68=y= if(equal(int(s),9),.6,y);
wave_2_per_point69=
wave_2_per_point70=//Testa
wave_2_per_point71=x= if(equal(int(s),10),.5,x);
wave_2_per_point72=y= if(equal(int(s),10),.62,y);
wave_2_per_point73=
wave_2_per_point74=x= if(equal(int(s),11),.47-ba*.23,x);
wave_2_per_point75=y= if(equal(int(s),11),.62,y);
wave_2_per_point76=x= if(equal(int(s),12),.47-ba*.23,x);
wave_2_per_point77=y= if(equal(int(s),12),.67+ba*.23,y);
wave_2_per_point78=
wave_2_per_point79=x= if(equal(int(s),13),.53+ba*.23,x);
wave_2_per_point80=y= if(equal(int(s),13),.67+ba*.23,y);
wave_2_per_point81=
wave_2_per_point82=x= if(equal(int(s),14),.53+ba*.23,x);
wave_2_per_point83=y= if(equal(int(s),14),.62,y);
wave_2_per_point84=
wave_2_per_point85=x= if(equal(int(s),15),.50,x);
wave_2_per_point86=y= if(equal(int(s),15),.62,y);
wave_2_per_point87=
wave_2_per_point88=x=x*dim+xpos;
wave_2_per_point89=y=y*dim+ypos;
wave_2_per_point90=
wave_2_per_point91=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_2_per_point92=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_2_per_point93=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_2_per_point94=
wave_2_per_point95=hm=sample+mi2_prg;
wave_2_per_point96=ht=sample+tr_prg;
wave_2_per_point97=hb=sample+ba_prg;
wave_2_per_point98=
wave_2_per_point99=r=hm;
wave_2_per_point100=g=ht;
wave_2_per_point101=b=hb;
wave_2_per_point102=a=.8;
wavecode_3_enabled=1
wavecode_3_samples=16
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=
wave_3_per_frame2=rx=at
wave_3_per_point1=meanbass = 0.01*(meanbass*99+bass);
wave_3_per_point2=meantreb = 0.01*(meantreb*99+treb);
wave_3_per_point3=meanmid = 0.01*(meanmid*99+mid);
wave_3_per_point4=bassdiff = (bass - meanbass)*15;
wave_3_per_point5=trebdiff = (treb - meantreb)*15;
wave_3_per_point6=middiff = (mid - meanmid)*15;
wave_3_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_3_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_3_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_3_per_point10=baprg=baprg+ba*.26;
wave_3_per_point11=trprg=trprg+tr*.34;
wave_3_per_point12=miprg=miprg+tr*.125;
wave_3_per_point13=
wave_3_per_point14=
wave_3_per_point15=dim =.5+.4*sin(trprg); //Dancer dimensions
wave_3_per_point16=xpos=0+.3*sin(baprg);//Dancer x position variation
wave_3_per_point17=ypos=0+.2*sin(miprg);//Dancer y position variation
wave_3_per_point18=
wave_3_per_point19=
wave_3_per_point20=
wave_3_per_point21=//Position Stabilization
wave_3_per_point22=xpos=xpos+(1-dim)/2;
wave_3_per_point23=ypos=ypos+(1-dim)/2;
wave_3_per_point24=
wave_3_per_point25=meanbass = 0.01*(meanbass*99+bass);
wave_3_per_point26=meantreb = 0.01*(meantreb*99+treb);
wave_3_per_point27=meanmid = 0.01*(meanmid*99+mid);
wave_3_per_point28=bassdiff = (bass - meanbass)*15;
wave_3_per_point29=trebdiff = (treb - meantreb)*15;
wave_3_per_point30=middiff = (mid - meanmid)*15;
wave_3_per_point31=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_3_per_point32=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_3_per_point33=mi = min(above(middiff,0)*middiff*.005,.11);
wave_3_per_point34=
wave_3_per_point35=mi2_prg = mi2_prg+mi;
wave_3_per_point36=gam = abs(gam-above(mi2_prg,5));
wave_3_per_point37=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_3_per_point38=
wave_3_per_point39=s = sample *15;
wave_3_per_point40=//Gambe
wave_3_per_point41=x= if(equal(int(s),1),.4,.4);
wave_3_per_point42=y= if(equal(int(s),1),.2+((ba+tr)*.5)*gam,.2+((ba+tr)*.5)*gam);
wave_3_per_point43=
wave_3_per_point44=x= if(equal(int(s),2),.5+sin(ba*100)*.03,x);
wave_3_per_point45=y= if(equal(int(s),2),.4,y);
wave_3_per_point46=
wave_3_per_point47=x= if(equal(int(s),3),.6,x);
wave_3_per_point48=y= if(equal(int(s),3),.2+((ba+tr)*.5)*(1-gam),y);
wave_3_per_point49=
wave_3_per_point50=x= if(equal(int(s),4),.5+sin(ba*100)*.03,x);
wave_3_per_point51=y= if(equal(int(s),4),.4,y);
wave_3_per_point52=
wave_3_per_point53=//Corpo
wave_3_per_point54=x= if(equal(int(s),5),.5,x);
wave_3_per_point55=y= if(equal(int(s),5),.6,y);
wave_3_per_point56=
wave_3_per_point57=//Braccia
wave_3_per_point58=x= if(equal(int(s),6),.4-mi*.23,x);
wave_3_per_point59=y= if(equal(int(s),6),.5+mi,y);
wave_3_per_point60=
wave_3_per_point61=x= if(equal(int(s),7),.5,x);
wave_3_per_point62=y= if(equal(int(s),7),.6,y);
wave_3_per_point63=
wave_3_per_point64=x= if(equal(int(s),8),.6+tr*.23,x);
wave_3_per_point65=y= if(equal(int(s),8),.5+tr,y);
wave_3_per_point66=
wave_3_per_point67=x= if(equal(int(s),9),.5,x);
wave_3_per_point68=y= if(equal(int(s),9),.6,y);
wave_3_per_point69=
wave_3_per_point70=//Testa
wave_3_per_point71=x= if(equal(int(s),10),.5,x);
wave_3_per_point72=y= if(equal(int(s),10),.62,y);
wave_3_per_point73=
wave_3_per_point74=x= if(equal(int(s),11),.47-ba*.23,x);
wave_3_per_point75=y= if(equal(int(s),11),.62,y);
wave_3_per_point76=x= if(equal(int(s),12),.47-ba*.23,x);
wave_3_per_point77=y= if(equal(int(s),12),.67+ba*.23,y);
wave_3_per_point78=
wave_3_per_point79=x= if(equal(int(s),13),.53+ba*.23,x);
wave_3_per_point80=y= if(equal(int(s),13),.67+ba*.23,y);
wave_3_per_point81=
wave_3_per_point82=x= if(equal(int(s),14),.53+ba*.23,x);
wave_3_per_point83=y= if(equal(int(s),14),.62,y);
wave_3_per_point84=
wave_3_per_point85=x= if(equal(int(s),15),.50,x);
wave_3_per_point86=y= if(equal(int(s),15),.62,y);
wave_3_per_point87=
wave_3_per_point88=x=x*dim+xpos;
wave_3_per_point89=y=y*dim+ypos;
wave_3_per_point90=
wave_3_per_point91=mi_prg= if(above(mi_prg,5),0,mi_prg+mi*.1);
wave_3_per_point92=ba_prg= if(above(ba_prg,5),0,ba_prg+ba*.1);
wave_3_per_point93=tr_prg= if(above(tr_prg,5),0,tr_prg+tr*.1);
wave_3_per_point94=
wave_3_per_point95=hm=sample+mi2_prg;
wave_3_per_point96=ht=sample+tr_prg;
wave_3_per_point97=hb=sample+ba_prg;
wave_3_per_point98=
wave_3_per_point99=r=hm;
wave_3_per_point100=g=ht;
wave_3_per_point101=b=hb;
wave_3_per_point102=a=.8;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.840
shapecode_0_y=0.740
shapecode_0_rad=0.28999
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.32129
shapecode_0_r=0.100
shapecode_0_g=0.500
shapecode_0_b=0.500
shapecode_0_a=1.000
shapecode_0_r2=0.100
shapecode_0_g2=0.500
shapecode_0_b2=0.400
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=meantreb = 0.01*(meantreb*99+treb);
shape_0_per_frame2=trebdiff = (treb - meantreb)*15;
shape_0_per_frame3=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
shape_0_per_frame4=
shape_0_per_frame5=tr_prg= tr_prg+tr;
shape_0_per_frame6=
shape_0_per_frame7=tex_ang =-tr_prg;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.150
shapecode_1_y=0.730
shapecode_1_rad=0.51133
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.36133
shapecode_1_r=0.600
shapecode_1_g=0.600
shapecode_1_b=0.200
shapecode_1_a=1.000
shapecode_1_r2=0.600
shapecode_1_g2=0.600
shapecode_1_b2=0.210
shapecode_1_a2=0.900
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=meanbass = 0.01*(meanbass*99+bass);
shape_1_per_frame2=bassdiff = (bass - meanbass)*15;
shape_1_per_frame3=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
shape_1_per_frame4=
shape_1_per_frame5=
shape_1_per_frame6=ba_prg= ba_prg+ba;
shape_1_per_frame7=
shape_1_per_frame8=tex_ang =-ba_prg;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=index = 0;
per_frame_init_2=loop (100000,
per_frame_init_3=  megabuf(index) = 0;
per_frame_init_4=  gmegabuf(index) = 0;
per_frame_init_5=  index = index + 1;
per_frame_init_6=);
per_frame_init_7=
per_frame_init_8=flen = 128; shapes = 32; sortbase = 7000;
per_frame_init_9=
per_frame_init_10=reg07 = sortbase;
per_frame_init_11=n = 0;
per_frame_init_12=loop (flen,
per_frame_init_13=  gmegabuf(sortbase+n) = n;
per_frame_init_14=  n = n+1; 
per_frame_init_15=);
per_frame_init_16=
per_frame_1=dec_m = pow (0.8, 30/fps);
per_frame_2=dec_s = pow (0.98, 30/fps);
per_frame_3=
per_frame_4=vol =  pow(bass+treb,1);
per_frame_5=vol_ = vol_*dec_m + (1-dec_m)*vol;
per_frame_6=
per_frame_7=
per_frame_8=//Kreuzkorrelation
per_frame_9=
per_frame_10=//Struktur
per_frame_11=//0: Masse
per_frame_12=//1: Geschw.
per_frame_13=//2: Weg
per_frame_14=//3..7: Frei;
per_frame_15=
per_frame_16=feder = 150;
per_frame_17=damp = 1-dt*0.1;
per_frame_18=
per_frame_19=dt = 1/fps;
per_frame_20=n = 0;
per_frame_21=num = 100;
per_frame_22=
per_frame_23=maxind = 0;
per_frame_24=Masse = 0.2;
per_frame_25=loop (num,
per_frame_26=  Masse *= 1.03;
per_frame_27=  Kraft = (vol-vol_)*16*Masse - feder * gmegabuf(n + 2) ;
per_frame_28=  gmegabuf (n+4) = gmegabuf(n+1); //alte Geschwindigkeit
per_frame_29=  gmegabuf (n+1) += Kraft / Masse * dt;
per_frame_30=  gmegabuf (n+1) *= damp;
per_frame_31=  gmegabuf (n+2) += gmegabuf(n+1) * dt ;
per_frame_32=  gmegabuf (n+3) = gmegabuf(n+3) *dec_s + abs (gmegabuf(n+1))* (1-dec_s)*0.1;
per_frame_33=  if (gmegabuf(n+3) > gmegabuf (maxind+3),maxind = n,0);
per_frame_34=  n += 8;
per_frame_35=);
per_frame_36=push = gmegabuf(maxind+1) * gmegabuf (maxind+4) < 0;
per_frame_37=push *= (gmegabuf (maxind+1) < 0);
per_frame_38=
per_frame_39=
per_frame_40=q32 = aspecty;
per_frame_41=
per_frame_42=q1 = push;
per_frame_43=prog = prog + push;
per_frame_44=q2 = prog % 8;
per_frame_45=//monitor = maxind;
per_frame_46=
per_frame_47=qw=0+0.2*sin(time);
per_frame_48=q27=mid_att+treb-(treb_att*cos(time*0.1)+bass_att*qw);
per_frame_49=q28=sign(q27); 
per_frame_50=
per_frame_51=monitor=q29*10;
per_pixel_1=zoom = .99; rot = 0; warp = 0; dy = -0.004;  dx = 0.002;
warp_1=`float3 mus;
warp_2=`float2 rs, uv1, uv6, uv7, uv8;
warp_3=`float dx,dy;
warp_4=`
warp_5=`shader_body {
warp_6=`uv = uv_orig;
warp_7=`uv1 = (uv-.5) * aspect.xy;
warp_8=`
warp_9=`//BACKGROUND
warp_10=`float z = 16*length(uv1*5)+time;
warp_11=`float2 uvn =normalize(uv1);
warp_12=`rs = clamp(tan(z)*uvn,-5,5)/2;
warp_13=`
warp_14=`//CRYSTAL
warp_15=`float mult = q31*4;
warp_16=`uv7 = sin(uv1*mult);
warp_17=`uv8 = uv7;
warp_18=`float dist = length(uv8);
warp_19=`dist *= (abs(uv1.x) + abs(uv1.y))+ q32;
warp_20=`
warp_21=`float ang2 = atan2 (uv8.y,uv8.x);
warp_22=`ang2 =  1*floor (1* ang2);
warp_23=`float2 dir = .095*uv8+float2 (cos(ang2), sin(ang2));
warp_24=`
warp_25=`z = (1-cos(8*dist));
warp_26=`z *= .200*saturate (lum(z));
warp_27=`
warp_28=`//ADD
warp_29=`float mask = (z <= 1); //momentan beliebig
warp_30=`rs = q28*rs + (1-q28)*rs.yx;
warp_31=`uv += (1-mask)*3*(rs.yx) + .5*mask*z*normalize(z.x);
warp_32=`
warp_33=`//ZENTRALSTRAHL
warp_34=`uv6 = mul (uv1*.8,float2x2(_qb*.150));
warp_35=`mus = .3*abs(0.0225/(sqrt(uv6.x))/uv1.x)*(.5);
warp_36=`
warp_37=`//DOTS
warp_38=`float2 uv2 = 10*uv1+.3*sin(uv1*16+4*float2 (q5,q6));
warp_39=`uv2 *= 3;
warp_40=`float3 dots = q26*saturate(.00065/(length(uv2)));
warp_41=`float3 blur = GetBlur1(frac(uv));
warp_42=`float3 crisp= GetPixel(uv);
warp_43=`float3 diff = (crisp) - .5*blur;
warp_44=`float3 ret1 = crisp + mus + dots;
warp_45=`
warp_46=`float3 mod = tex2D (sampler_noise_lq,50*uv+time*.1)-.25;
warp_47=`mod = .98 - mod*diff;
warp_48=`
warp_49=`ret = (1-mask)*ret1*mod + mask*ret1*mod;
warp_50=`ret *= float3(.89,.96,.965)+.05*tex2D(sampler_noise_lq,uv);
warp_51=`ret *= 2*float3(.92,.835,.84)*lum(uv_orig);
warp_52=`
warp_53=`ret *= .98- .1;
warp_54=`
warp_55=`}
comp_1=`float var1,var2,var3;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`
comp_6=`float var1=sin((time+(bass_att-(mid*.9)/6)));
comp_7=`float var2=sin((time+(mid_att-(treb*.9)/6)));
comp_8=`float var3=cos((time+(treb_att-(bass*.9)/6)));
comp_9=`
comp_10=`float2 uv1 = uv-.5;
comp_11=`
comp_12=`float3 ret1 = tex2D(sampler_main, uv) * (1-rad);
comp_13=`
comp_14=`
comp_15=`float2 hor = float2 (texsize.z,0)*1-.1*var2;
comp_16=`float2 ver = float2 (0,texsize.w)*1-.1*var1;
comp_17=`float dx = GetBlur1 (uv-hor) - GetBlur2 (uv+hor);
comp_18=`float dy = GetBlur2 (uv-ver) - GetBlur1 (uv+ver);
comp_19=`float2 dz = float2 (dx,dy)*1.5+.31*var3;
comp_20=`
comp_21=`uv1 = uv1*0+.3*cos(uv1*2) - dz;;
comp_22=`float dots = saturate(.09/length(uv1));
comp_23=`uv1 = uv1*0+.3*cos(uv1*12) - 9*dz;;
comp_24=`float3 dots2 = saturate(.09/length(uv1));
comp_25=`
comp_26=`
comp_27=`ret = (-ret1) + dots + .0 + 12*dots2*(-0+sqrt(ret1));
comp_28=`}
