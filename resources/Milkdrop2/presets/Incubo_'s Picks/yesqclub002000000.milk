MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=2
PSVERSION_COMP=4
[preset00]
fRating=0.000
fGammaAdj=1.000
fDecay=0.500
fVideoEchoZoom=1.192
fVideoEchoAlpha=0.000
nVideoEchoOrientation=1
nWaveMode=0
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.000
fWaveSmoothing=0.750
fWaveParam=0.000
fModWaveAlphaStart=0.750
fModWaveAlphaEnd=0.950
fWarpAnimSpeed=1.000
fWarpScale=1.000
fZoomExponent=1.00000
fShader=1.000
zoom=1.00000
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=1.00000
sx=0.98030
sy=1.00000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.040
ob_r=1.000
ob_g=0.000
ob_b=1.000
ob_a=1.000
ib_size=0.035
ib_r=1.000
ib_g=0.390
ib_b=0.500
ib_a=1.000
nMotionVectorsX=6.400
nMotionVectorsY=4.800
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.900
mv_g=0.500
mv_b=0.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=1.000
wave_0_init1=is=sample*512; is4=below((is/4)-int(is/4),1/4); is2=below((is/2)-int(is/2),1/2); is3=below(is/3-int(is/3),1/3); 
wave_0_init2=is9=int(is/9-int(is/9)*10); div9=1/is9; div0=0.5-div9; div1=1/div0;
wave_0_per_frame1=samples = 256 + 50*sin(time*.939493949);
wave_0_per_frame2=vol = (bass_att + mid_att + treb_att)*.333333;
wave_0_per_frame3=vol_avg = .1*(vol_avg*9 + vol);
wave_0_per_frame4=vg = vol_avg*.1;
wave_0_per_frame5=t1 = if(above(vg,1.8),1.8,vg);
wave_0_per_point1=is=sample*512;  is4=below((is/4)-int(is/4),1/4); is2=below((is/2)-int(is/2),1/2); is3=below(is/3-int(is/3),1/3);  
wave_0_per_point2=is9=int(10*((is*9)-int(is*9))); div9=is/is9; div0=0.5-div9; div1=1/div0; isy=above(treb*(is/(bass+mid+mid_att)),9/y); //is9=int(((is*.9)-int(is*.9))*10);
wave_0_per_point3=r=is2-is3*sin(mid_att);
wave_0_per_point4=g=is3-is4*cos(mid_att);
wave_0_per_point5=b=is4-is3*cos(bass_att) - is2*sin(treb);
wave_0_per_point6=x=sample; size=size+(2.5*x);
wave_0_per_point7=//y=y+q1;
wave_0_per_point8=//y=y-q2;
wave_0_per_point9=//y=y+((0.1*is4)-(0.1*is9)-(0.1*is3))*0.3;
wave_0_per_point10=y=y-((r+g+b)/9);
wave_0_per_point11=y=y-0.2;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=cenx=-.03-0.015*sin(time/3);  //centrex
wave_2_per_point2=ceny=.017-.025*sin(treb_att/fps);  //centrey
wave_2_per_point3=scal=.6+0.44*cos(time/5);  //scale vertical
wave_2_per_point4=ra=1;      //hrizontal ratio 1:x;
wave_2_per_point5=ver=scal; hor=ver*ra;
wave_2_per_point6=//i=instance;  s9=s9+(.1/(fps+mid_att)); sample=(i+1)/(num_inst+1); 
wave_2_per_point7=sa9=(sample-.5)*9; sa=(sa9-int(sa9)); ti=time-sa; tu=time*sa; 
wave_2_per_point8=in=sample*sin(ti-tu); os=sample*cos(ti-tu);
wave_2_per_point9=x2=.5*x*2-1; y2=0.5*y*2-1;
wave_2_per_point10=x2=cenx+hor*os;
wave_2_per_point11=y2=ceny+ver*in;
wave_2_per_point12=x=0.5*x2+.5;
wave_2_per_point13=y=0.5*y2+.5;
wave_2_per_point14=y=y+.018*sin(os);
wave_2_per_point15=x=x+.008*(1-in);
wave_2_per_point16=
wave_2_per_point17=
wave_2_per_point18=a=1-(0.5*abs(x-.5)+0.5*abs(y-.5));
wave_2_per_point19=ang=ang+.7*ti;
wave_2_per_point20=g=1; b=0;
wave_2_per_point21=r=abs(.2*sin(tu)+.2*sin(ti/5)+.2*cos(ti*mid_att));
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_point1=cenx=-.03+0.015*sin(time/3);  //centrex
wave_3_per_point2=ceny=-.0+.035*cos(time/3);  //centrey
wave_3_per_point3=scal=.7+0.02*cos(time/5);  //scale vertical
wave_3_per_point4=scal=.51+.05*sin(bass_att/fps);  //scale vertical
wave_3_per_point5=ra=1;      //hrizontal ratio 1:x;
wave_3_per_point6=ver=scal; hor=ver*ra;
wave_3_per_point7=//i=instance;  s9=s9+(.1/(fps+mid_att)); sample=(i+1)/(num_inst+1); 
wave_3_per_point8=sa9=(sample-.5)*9; sa=(sa9-int(sa9)); ti=time-sa; tu=time*sa; 
wave_3_per_point9=in=sample*sin(ti-tu); os=sample*cos(ti-tu);
wave_3_per_point10=x2=.5*x*2-1; y2=0.5*y*2-1;
wave_3_per_point11=x2=cenx+hor*os;
wave_3_per_point12=y2=ceny+ver*in;
wave_3_per_point13=x=0.5*x2+.5;
wave_3_per_point14=y=0.5*y2+.5;
wave_3_per_point15=y=y+.018*sin(os);
wave_3_per_point16=x=x+.018*(in);
wave_3_per_point17=ang=ang+.7*ti;
wave_3_per_point18=r=1; b=0;
wave_3_per_point19=
wave_3_per_point20=a=1-(0.5*abs(x-.5)+0.5*abs(y-.5));
wave_3_per_point21=g=abs(.2*sin(tu)+.2*sin(ti/5)+.2*cos(ti*mid_att));
shapecode_0_enabled=1
shapecode_0_sides=3
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=26
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.10000
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.22019
shapecode_0_r=1.000
shapecode_0_g=0.800
shapecode_0_b=0.100
shapecode_0_a=0.600
shapecode_0_r2=1.000
shapecode_0_g2=0.200
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=1.000
shape_0_per_frame1=
shape_0_per_frame2=//alt
shape_0_per_frame3=//t11 = int(rand(int(q30)));
shape_0_per_frame4=//t12 = int(rand(int(q30)));
shape_0_per_frame5=//t13 = int(rand(int(q30)));
shape_0_per_frame6=//a = t11/5+instance-instance;
shape_0_per_frame7=//a2 = t12/5+instance-instance;
shape_0_per_frame8=//border_a = t13/5+instance-instance;
shape_0_per_frame9=//t7=equal(int(rand(2)),1);
shape_0_per_frame10=//x2 = .5 + int(rand(15))*0.01*bass_att*if(t7,1,-1)+instance-instance;
shape_0_per_frame11=//y2 = .5 + int(rand(15))*0.01*bass_att*if(t7,1,-1)+instance-instance;
shape_0_per_frame12=//rad = .09 + t13/15+instance-instance;
shape_0_per_frame13=//r=int(rand(q3))*.1+instance-instance;
shape_0_per_frame14=//g=int(rand(q3))*.1+instance-instance;
shape_0_per_frame15=//b2=t13/7.5+instance-instance;
shape_0_per_frame16=//r2=t12*.1+instance-instance;
shape_0_per_frame17=//g2=int(rand(q3))*.1+instance-instance;
shape_0_per_frame18=//b2=int(rand(q3))*.1+instance-instance;
shape_0_per_frame19=//border_r=int(rand(q3))*.1+instance-instance;
shape_0_per_frame20=//border_g=1-b2;//int(rand(q3))*.1+instance-instance;
shape_0_per_frame21=//border_b=int(rand(q3))*.1+instance-instance;
shape_0_per_frame22=
shape_0_per_frame23=//x=0.5*x2;
shape_0_per_frame24=//y=0.5*y2;
shape_0_per_frame25=//x=x2;
shape_0_per_frame26=//y=y2;
shape_0_per_frame27=t1 = time - int (time);
shape_0_per_frame28=sample = instance/num_inst;
shape_0_per_frame29=t_abs = sample*3;
shape_0_per_frame30=t_rel = sample-time/6;
shape_0_per_frame31=t5=(t_abs-int(t_abs))*11;
shape_0_per_frame32=t9=0.7*sin(((bass_att+bass_att+bass)*1/sides)*0.72);
shape_0_per_frame33=ampl = 2*t_abs/2 ;
shape_0_per_frame34=
shape_0_per_frame35=k1=sin(time/13);
shape_0_per_frame36=k2=sin(time/12);
shape_0_per_frame37=ox = ampl*sin (t_abs*(31+5*k1)) + sin(time/25)*(1-t_abs)*0.35  ;
shape_0_per_frame38=oy = ampl*cos (t_abs*(31+5*k2)*1+.2*sin(time));
shape_0_per_frame39=oz = -1  ;
shape_0_per_frame40=
shape_0_per_frame41=sides=3+int(t5);
shape_0_per_frame42=
shape_0_per_frame43=r = sqr(sin(t_rel*1.14));
shape_0_per_frame44=border_g = sqr(sin(t_rel*1.8));
shape_0_per_frame45=b2 = sqr (cos(t_rel*3.4));
shape_0_per_frame46=
shape_0_per_frame47=//a2=(0.1*(sin(t_rel*3)) + 0.6*q3*below (abs(1-t_abs-t1 ),0.3))*a2;
shape_0_per_frame48=
shape_0_per_frame49=xang = time/9;
shape_0_per_frame50=yang = 0*time/7.2;
shape_0_per_frame51=zang = -time/14.4;
shape_0_per_frame52=fov = 0.5;
shape_0_per_frame53=
shape_0_per_frame54=
shape_0_per_frame55=// Rotation um x,y,z
shape_0_per_frame56=
shape_0_per_frame57=
shape_0_per_frame58=mx = ox*cos(zang) - oy*sin(zang);
shape_0_per_frame59=my = ox*sin(zang) + oy*cos(zang);
shape_0_per_frame60=
shape_0_per_frame61=ox = mx;
shape_0_per_frame62=oy = my*1+t9;
shape_0_per_frame63=mx = ox*cos(yang) + oz*sin(yang);
shape_0_per_frame64=mz = - ox*sin(yang) + oz*cos(yang);
shape_0_per_frame65=ox = mx;
shape_0_per_frame66=oz = mz;
shape_0_per_frame67=my = oy*cos(xang) - oz*sin(xang);
shape_0_per_frame68=mz = oy*sin(xang) + oz*cos(xang);
shape_0_per_frame69=oy = my;
shape_0_per_frame70=oz = mz;
shape_0_per_frame71=
shape_0_per_frame72=oz = oz - (5+(1/t5));
shape_0_per_frame73=x2 = ox*fov/oz +0.5;
shape_0_per_frame74=//x = (x-.25)*0.75 + 0.5;
shape_0_per_frame75=y2 = oy*fov/oz + 0.65;
shape_0_per_frame76=
shape_0_per_frame77=//az=1/mz*.5;
shape_0_per_frame78=//a2z=1/mz*.5;
shape_0_per_frame79=border_a=1-rad*t9;
shape_0_per_frame80=a=border_a;
shape_0_per_frame81=a2=a;
shape_0_per_frame82=jrad=(1/mz*.005)*(1-(0.9/t5));
shape_0_per_frame83=krad=max(t9*0.10,jrad);
shape_0_per_frame84=rad=min(jrad, krad);
shape_0_per_frame85=x=1-x2;
shape_0_per_frame86=
shape_0_per_frame87=//a=1-az;
shape_0_per_frame88=//a2=1-a2z;
shape_0_per_frame89=
shape_0_per_frame90=y=0.5*y2;
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=4
shapecode_1_x=0.090
shapecode_1_y=0.130
shapecode_1_rad=0.29757
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.72730
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=1.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=y=y+.25*instance;
shapecode_2_enabled=0
shapecode_2_sides=20
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=964
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.01000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.26465
shapecode_2_r=0.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.340
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.100
shapecode_2_border_r=0.000
shapecode_2_border_g=0.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_init1=//samples = 256 + 50*sin(time*.939493949);
shape_2_init2=//num_inst = 256 + 50*sin(time*.939493949);
shape_2_init3=//samples = .5 + sin(time*.939493949);
shape_2_init4=num_inst = .5 + sin(time*.939493949);
shape_2_per_frame1=
shape_2_per_frame2=sample = instance/1024;
shape_2_per_frame3=//num_inst = .5 + sin(time*.939493949);
shape_2_per_frame4=tm = q1;
shape_2_per_frame5=sp = sample*6.28*8*6*sin(time)*100;
shape_2_per_frame6=
shape_2_per_frame7=vol = (value1+value2)*.5;
shape_2_per_frame8=it = it*above(sample,0);
shape_2_per_frame9=it = it + 1;
shape_2_per_frame10=//rad = .5 + vol + .01;
shape_2_per_frame11=rad2=1.3;
shape_2_per_frame12=ra = rad2*sin(sample*3.14);
shape_2_per_frame13=ox = ra*sin(sp);
shape_2_per_frame14=oy = sin(sample*3.14-1.57)*rad2;
shape_2_per_frame15=oz = ra*cos(sp);
shape_2_per_frame16=
shape_2_per_frame17=xang = q4;
shape_2_per_frame18=yang = q5;
shape_2_per_frame19=zang = q6;
shape_2_per_frame20=fov = .5;
shape_2_per_frame21=
shape_2_per_frame22=mx = ox*cos(zang) - oy*sin(zang);
shape_2_per_frame23=my = ox*sin(zang) + oy*cos(zang);
shape_2_per_frame24=ox = mx;
shape_2_per_frame25=oy = my;
shape_2_per_frame26=mx = ox*cos(yang) + oz*sin(yang);
shape_2_per_frame27=mz = - ox*sin(yang) + oz*cos(yang);
shape_2_per_frame28=ox = mx;
shape_2_per_frame29=oz = mz;
shape_2_per_frame30=my = oy*cos(xang) - oz*sin(xang);
shape_2_per_frame31=mz = oy*sin(xang) + oz*cos(xang);
shape_2_per_frame32=oy = my;
shape_2_per_frame33=oz = mz;
shape_2_per_frame34=
shape_2_per_frame35=yang = q8;
shape_2_per_frame36=oz = oz + 5;
shape_2_per_frame37=rad=rad*instance*.0041;//3d
shape_2_per_frame38=
shape_2_per_frame39=mx = ox*cos(yang) + oz*sin(yang);
shape_2_per_frame40=mz = - ox*sin(yang) + oz*cos(yang);
shape_2_per_frame41=ox = mx;
shape_2_per_frame42=oz = mz;
shape_2_per_frame43=
shape_2_per_frame44=oz = oz - 5;
shape_2_per_frame45=
shape_2_per_frame46=oz = oz - 2;
shape_2_per_frame47=x = ox*fov/oz + 0.5;
shape_2_per_frame48=x = (x-.5)*0.75 + 0.5;
shape_2_per_frame49=y = oy*fov/oz + 0.5;
shape_2_per_frame50=
shapecode_3_enabled=1
shapecode_3_sides=3
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=1
shapecode_3_num_inst=1024
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.07389
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.62832
shapecode_3_tex_zoom=0.81954
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=0.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_init1=del=-6;
shape_3_per_frame1=is=instance; sample=is/num_inst;
shape_3_per_frame2=
shape_3_per_frame3=pi2=44/7; pig=pi2*sample; pit=pi2*q8; piy=pi2*q2;
shape_3_per_frame4=fri=pit-sample; gri=piy+sample; sri=swi*sin(piy*pit)*.1;
shape_3_per_frame5=tri=piy+pit+pi2*sample;
shape_3_per_frame6=fade=3; //seconds
shape_3_per_frame7=del=q12; del=min(del,1);
shape_3_per_frame8=cenx=-.03+0.01*sin(time/3);  //centrex
shape_3_per_frame9=ceny=.017+.01*cos(time/3);  //centrey
shape_3_per_frame10=scal=.7+0.02*cos(time/5);  //scale vertical
shape_3_per_frame11=ra=1+.2*sri;      //hrizontal ratio 1:x;
shape_3_per_frame12=ver=scal; hor=ver*ra;
shape_3_per_frame13=i=instance;  s9=s9+(.1/(fps+mid_att)); sample=(i+1)/(num_inst+1); sa9=(sample-.5)*9; sa=(sa9-int(sa9)); ti=time-sa; tu=time*sa; 
shape_3_per_frame14=in=sample*sin(ti-tu); os=sample*cos(ti-tu);
shape_3_per_frame15=x2=.5*x*2-1; y2=0.5*y*2-1;
shape_3_per_frame16=x2=x-.5; y2=y-.5;
shape_3_per_frame17=//rad=0.015*sin((1-x2)+.15*sin(1-y2));
shape_3_per_frame18=
shape_3_per_frame19=x2 = x2*x2+x2*y2+.45*cos(gri-pig); y2 = y2*y2-x2*y2+.45*sin(gri*pig);
shape_3_per_frame20=
shape_3_per_frame21=//x2 = x2*x2+x2*y2+.5*cos(gri-pit+pig); y2 = y2*y2-x2*y2+.5*sin(fri-pit+pig);
shape_3_per_frame22=
shape_3_per_frame23=
shape_3_per_frame24=//x2 = x2*x2+x2*y2+.15*sin(fri-piy-sri); y2 = y2*y2-x2*y2+0.15*cos(fri-pit-sri);
shape_3_per_frame25=//x2 = x2*x2+x2*y2+.5*cos(fri+pit)*.25; y2 = y2*y2-x2*y2-.5*sin(gri-pit)*.25;
shape_3_per_frame26=//x2 = x2*x2+x2*y2+.5*sin(gri+pit+fri); y2 = y2*y2-x2*y2+.5*cos(gri+pit+fri);
shape_3_per_frame27=
shape_3_per_frame28=
shape_3_per_frame29=x=if(is,0.5+0.3*sin(pit-piy-tri),0.5);
shape_3_per_frame30=y=if(is,0.5+0.3*cos(pit-piy-tri),0.5);
shape_3_per_frame31=
shape_3_per_frame32=
shape_3_per_frame33=
shape_3_per_frame34=
shape_3_per_frame35=x=if(is,x2+x,x);
shape_3_per_frame36=//y=if(is,y2+y,y);
shape_3_per_frame37=
shape_3_per_frame38=//x2=cenx+hor*os;
shape_3_per_frame39=//y2=ceny+ver*in;
shape_3_per_frame40=//x=0.5*x2+.5;
shape_3_per_frame41=y=0.5*y2+.5;
shape_3_per_frame42=y +=.018*sin(os);
shape_3_per_frame43=//x=x+.018*(1-in);
shape_3_per_frame44=ang=ang+.7*ti;
shape_3_per_frame45=r=abs(.2*sin(tu)+.2*sin(ti/5)+.2*cos(ti*mid_att))*del;
shape_3_per_frame46=g=r/3; b=0;
shape_3_per_frame47=
shape_3_per_frame48=a=1-del; border_a=0;
shape_3_per_frame49=r2=.1-r; g2=g; b2=b;
shape_3_per_frame50=a2=.002*1-del;
shape_3_per_frame51=rad=rad*y2*cos(sri+gri);
shape_3_per_frame52=x=if(below(x,0),x+1,x-int(x));
shape_3_per_frame53=y-if(below(y,0),v+1,y-int(y));
per_frame_1=// I'm not sure whether a motion vector trail length of 0.005 or 0 is better matrix effect
per_frame_2=// Adding the solar filter is nice, with decay at about .95 to decrease the amount of solarization
per_frame_3=// I had the motion vectors amount on max, but my framerate is too low, so I decrease it max it up if you have a better screenard
per_frame_4=warp = 0;
per_frame_5=//wave_mystery = 2;  //uncomment for no yellow wave
per_frame_6=beat = above(bass_att,bass_thresh);
per_frame_7=wave_x = 0.5 + 0.1*sin(0.3*time);
per_frame_8=wave_y = 0.5 + 0.1*cos(0.31*time);
per_frame_9=beatcount = (beatcount + beat);
per_frame_10=b = above(beatcount%4,0);
per_frame_11=b2 = above(beatcount%3,0);
per_frame_12=b3 = above(beatcount%7,0);
per_frame_13=fr = b*(fr+1);
per_frame_14=fr2 = b2*(fr2+1);
per_frame_15=jfr = b3*(jfr+1);
per_frame_16=dir1 = b*dir1 + (1-b)*sin(time*1.7);
per_frame_17=dir2 = b2*dir2 + (1-b2)*sin(time*1.9);
per_frame_18=turn = min(below(fr,60)*fr,1);
per_frame_19=turn2 = min(below(fr2,60)*fr2,1);
per_frame_20=jump = min(below(jfr,30)*jfr,1);
per_frame_21=q1 = turn*1.5*(0.5 + 0.5*sin(3.141*fr/26));
per_frame_22=q3 = above(dir1,0);
per_frame_23=q2 = turn2*1.5*(0.5 + 0.5*sin(3.141*fr2/26))*(1-jump);
per_frame_24=q4 = above(dir2,0);
per_frame_25=q5 = jump*3*(0.5 + 0.5*sin(3.141*jpr/30));
per_frame_26=
per_frame_27=bass_thresh = beat*4 + (1-beat)*((bass_thresh - 1.2)*0.92 + 1.2);
per_frame_28=bass_thresh = if(equal(jfr,29),0,bass_thresh);  //always a beat after a completed jump
per_frame_29=
per_frame_30=
per_frame_31=zoom = (1-beat)*((zoom_old - 1.4)*0.9+1.4) + 0.025*sin(0.46*time)+beat*zoom_old;
per_frame_32=zoom = (1-beat)*zoom + beat*(zoom*0.9-0.4);
per_frame_33=zoom_old = zoom;
per_frame_34=
per_frame_35=//original stuff from multiverse starsomething
per_frame_36=rot = 0.01*sin(1.34*time);
per_frame_37=dx = 0.005*sin(time*0.646);
per_frame_38=dy = 0.005*sin(time*0.314);
per_frame_39=dy = dy + jump*0.2*cos(3.141*jfr/18); //gives the neo jump effect
per_frame_40=cx = 0.5 + 0.05*sin(0.497*time);
per_frame_41=cy = 0.5 +0.05*sin(0.413*time);
per_frame_42=monitor = dy;
per_pixel_1=yt = if(q3,(0.7 - (y)),(0.3 + (y-1)));
per_pixel_2=xt = if(q4,(0.7 - (x)),(0.3 + (x-1)));
per_pixel_3=yt2 = 0.3 + (y-1);
per_pixel_4=zoom = zoom + q1*(yt) + q2*(xt)+ q5*(yt2);
warp_1=`sampler sampler_rand00;
warp_2=`
warp_3=`shader_body
warp_4=`{
warp_5=`    // sample previous frame
warp_6=`    ret = tex2D( sampler_main, uv ).xyz;
warp_7=`    float qtq=max(.13*int(time),min(q4,q5));
warp_8=`
warp_9=` float qtqt=max(.31*int(time*1/6.28),qtq*min(1.2-q4,1.2-q5));
warp_10=`qtqt=((qtqt)*(qtqt)*(3-2*(qtqt)));     
warp_11=`  // darken (decay) over time
warp_12=`    ret *= 0.5+.12*cos(qtq)+.08*sin(qtq); //or try: ret -= 0.004;
warp_13=`ret= tex2d(sampler_rand00,lerp(uv,float2(uv_orig.x*1.2,uv_orig.y),(ret*(q9)*qtqt)));
warp_14=`//tex2d(sampler_rand00,uv_orig);
warp_15=`}
comp_1=`#define sat saturate
comp_2=`static const float2 pix = texsize.zw;
comp_3=`float glow, tmp, lamp, dist, bdist, b2dist, dist_c;
comp_4=`float2 dz, uv1, uv3;
comp_5=`static const float3 CamPos = float3(q4,q5,q6);
comp_6=`static const float myzoom = q7;
comp_7=`static const float3x3 RotMat = float3x3(q20,q21,q22,q23,q24,q25,q26,q27,q28);
comp_8=`static const float3 col_struc =  float3(1,.7,.3) + .2*(rand_preset.xyz-.5);
comp_9=`static float2 center = float2 (q1,q2);
comp_10=`
comp_11=`float3 GetBlurX (float2 uvi, float x) {return lerp (GetPixel(uvi), GetBlur1(uvi), x);}
comp_12=`float GetDist(float2 uvi)   {return 1-GetPixel(uvi).b;}
comp_13=`float GetDistB(float2 uvi)  {return 1-GetBlur1(uvi).b;}
comp_14=`float GetDistB2(float2 uvi) {return 1-GetBlur2(uvi).b;}
comp_15=`
comp_16=`float MinDistB (float2 uvi) {float tmp; float4 nb; //##nicht ideal
comp_17=`  tmp = GetDist(uvi);
comp_18=`  tmp = min(tmp,GetDistB2(uvi)*1) ;
comp_19=`  return tmp;}
comp_20=`
comp_21=`shader_body {
comp_22=`uv = (uv-.5)*.9 + .5;
comp_23=`uv1 = (uv-center)*aspect.xy;
comp_24=`
comp_25=`dist = MinDistB(uv);
comp_26=`bdist = lerp(dist,GetDistB(uv),.2);
comp_27=`dist_c = clamp(GetDistB2 (center),.1,.4); //center distance
comp_28=`
comp_29=`float3 uv2 = mul(float3((uv-.5)*MinDistB(uv),MinDistB(uv))/myzoom,RotMat)+CamPos;
comp_30=`glow = pow (sat(tex2D (sampler_noise_hq,.02*uv2).r-.6)*2,2);
comp_31=`//uv += .003*glow*(tex2D (sampler_noise_mq,uv*2+float2(0,time/4).xy-.5));
comp_32=`
comp_33=`float focus = sat(abs(GetDistB2(uv)-dist_c)*1+.2);
comp_34=`float struc = GetBlurX(uv,focus).r;
comp_35=`
comp_36=`glow = sat(1-exp(-(GetBlur1(uv).r))-.2);
comp_37=`q18 = 1;
comp_38=`ret = pow(struc,1) * (.2+(1-focus) *lerp(dist,1-dist,q18)) * (1+.5*sin(uv2));
comp_39=`ret = lerp(ret, float3(0,1,glow*3), glow);
comp_40=`
comp_41=`//distant light
comp_42=`ret += pow(1-GetBlurX(uv,.8).b,3)*(.5+.5*slow_roam_cos) *q19;
comp_43=`
comp_44=`//Lamp
comp_45=`uv3 = uv1; 
comp_46=`lamp = saturate(1-4*length(uv3))*(struc)*saturate(1-2*bdist)*1.8;
comp_47=`//ret += (1-lum(ret))*lamp;
comp_48=`ret = 1-exp((-2)*ret);
comp_49=`//ret = GetPixel(uv).r;
comp_50=`}
comp_51=`
comp_52=`//-------------------------------------------
comp_53=`//Written by martin
comp_54=`
