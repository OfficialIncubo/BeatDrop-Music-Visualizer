MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=1.000
fGammaAdj=1.000
fDecay=0.970
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=3
bAdditiveWaves=0
bWaveDots=1
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=0.010
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=0.000
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=1.000
wave_y=1.000
ob_size=0.010
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=3.000
nMotionVectorsY=2.000
mv_dx=0.020
mv_dy=-0.020
mv_l=0.150
mv_r=0.490
mv_g=0.480
mv_b=0.300
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=16
wavecode_0_sep=70
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=0
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_per_point1=meanbass = 0.01*(meanbass*99+bass_att);
wave_0_per_point2=meantreb = 0.01*(meantreb*99+treb_att);
wave_0_per_point3=meanmid = 0.01*(meanmid*99+mid_att);
wave_0_per_point4=bassdiff = (bass_att - meanbass)*15;
wave_0_per_point5=trebdiff = (treb_att - meantreb)*15;
wave_0_per_point6=middiff = (mid_att - meanmid)*15;
wave_0_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_0_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_0_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_0_per_point10=baprg=baprg+ba*.3;
wave_0_per_point11=trprg=trprg+tr*.2;
wave_0_per_point12=miprg=miprg+tr*.2;
wave_0_per_point13=
wave_0_per_point14=
wave_0_per_point15=dim =0.65+.3*sin(miprg); //Dancer dimensions
wave_0_per_point16=xpos=0;//+.3*sin(baprg);//Dancer x position variation
wave_0_per_point17=ypos=0;//+.2*sin(trprg);//Dancer y position variation
wave_0_per_point18=
wave_0_per_point19=
wave_0_per_point20=//Position Stabilization
wave_0_per_point21=xpos=xpos+(1-dim)/2;
wave_0_per_point22=ypos=ypos+(1-dim)/2;
wave_0_per_point23=
wave_0_per_point24=meanbass = 0.01*(meanbass*99+bass);
wave_0_per_point25=meantreb = 0.01*(meantreb*99+treb);
wave_0_per_point26=meanmid = 0.01*(meanmid*99+mid);
wave_0_per_point27=bassdiff = (bass - meanbass)*15;
wave_0_per_point28=trebdiff = (treb - meantreb)*15;
wave_0_per_point29=middiff = (mid - meanmid)*15;
wave_0_per_point30=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_0_per_point31=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_0_per_point32=mi = min(above(middiff,0)*middiff*.005,.11);
wave_0_per_point33=
wave_0_per_point34=mi2_prg = mi2_prg+mi;
wave_0_per_point35=gam = abs(gam-above(mi2_prg,5));
wave_0_per_point36=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_0_per_point37=
wave_0_per_point38=
wave_0_per_point39=test=0+0.2*sin(time); tes2=0+0.2*cos(time); qw=1+test; wq=1+tes2; 
wave_0_per_point40=//fg +=if(above(0.05,fg),-gr,if(above(fg,50),-gr,gr));
wave_0_per_point41=vz=0.1/(value1-value2); vc=abs(vz)*wq; vb=abs(vc)/0.001;
wave_0_per_point42=zxsimspe=int(60/(fps/3)); grnd=int(rand(zxsimspe)); gr=1/grnd; gr +=0.1*gr; gr +=0.02*gr;
wave_0_per_point43=gr +=0.001*gr; gr +=0.0002*gr; gr +=0.00001*gr; gr +=0.000002*gr; gr +=0.0000001*gr; 
wave_0_per_point44= gr +=0.00000002*gr; gr +=0.000000001*gr; gr +=0.00000000002*gr;
wave_0_per_point45=fg =1/gr+fg; 
wave_0_per_point46=larm=(abs(0.09+0.3*wq)*0.2)*wq-(abs(0.09+0.3*qw)*0.2)*qw +((fg/vb)*wq); 
wave_0_per_point47=ralm=(abs(0.09+0.3*qw)*0.2)*qw-(abs(0.09-0.3*qw)*0.2)*qw +((fg/vb)*qw); 
wave_0_per_point48=
wave_0_per_point49=s = sample *section; section=0;
wave_0_per_point50=//legs
wave_0_per_point51=
wave_0_per_point52=section +=1; isec=equal(int(s),section);
wave_0_per_point53=
wave_0_per_point54=x= if(isec,.492-((ba)*.125)*(gam)+(tr*0.12*wq),.487);  //l foot   +((1/vc)*wq)*qw    +((1/vc)*qw)*qw)-(abs(ba-tr)*.15)*gam
wave_0_per_point55=y= if(isec,.192-((ba)*.15)*(gam)+(tr*0.12*qw)+larm,.188);   //-((ba+tr)*.7)*gam    -((ba-tr)*.72)*gam
wave_0_per_point56=r= if(isec,1,r);
wave_0_per_point57=g= if(isec,0,g);
wave_0_per_point58=b= if(isec,0,b);
wave_0_per_point59=a= if(isec,1,a);
wave_0_per_point60=
wave_0_per_point61=section +=1; isec=equal(int(s),section);
wave_0_per_point62=
wave_0_per_point63=x= if(isec,.523+(tr*0.12*qw),x); //inside leg +sin(ba*100-vc)*.020*((1/vc)*wq)*wq
wave_0_per_point64=y= if(isec,.454+((ba)*.15)*(gam)+(tr*0.12*wq)+larm*0.3,y);   //    +0.02*wq*gam    *(gr-gam)
wave_0_per_point65=r= if(isec,0,r);
wave_0_per_point66=g= if(isec,1,g);
wave_0_per_point67=b= if(isec,0,b);
wave_0_per_point68=a= if(isec,1,a);
wave_0_per_point69=
wave_0_per_point70=
wave_0_per_point71=section +=1; isec=equal(int(s),section);
wave_0_per_point72=
wave_0_per_point73=x= if(isec,.59-((ba)*.15)*(gam)+(tr*0.12*qw),x); //r leg    +(g/(vc+bass_att))*(mid_att-qw)*0.5)*qw,x);
wave_0_per_point74=y= if(isec,.182-((ba)*.125)*(gam)+(tr*0.12*wq)-ralm,y);   //-((ba)*.25)*(gam)
wave_0_per_point75=r= if(isec,0,r);
wave_0_per_point76=g= if(isec,1,g);
wave_0_per_point77=b= if(isec,1,b);
wave_0_per_point78=a= if(isec,0,a);
wave_0_per_point79=
wave_0_per_point80=
wave_0_per_point81=section +=1; isec=equal(int(s),section);
wave_0_per_point82=
wave_0_per_point83=x= if(isec,.52+(tr*0.16*qw),x+(tr*0.012*wq)); //waist   +sin(ba*100+vc)*.018
wave_0_per_point84=y= if(isec,.453,y);   //
wave_0_per_point85=r= if(isec,1,r);
wave_0_per_point86=g= if(isec,0,g);
wave_0_per_point87=b= if(isec,1,b);
wave_0_per_point88=a= if(isec,1,a);
wave_0_per_point89=
wave_0_per_point90=//Corpo
wave_0_per_point91=
wave_0_per_point92=section +=1; isec=equal(int(s),section);
wave_0_per_point93=
wave_0_per_point94=x= if(isec,.531-sin(ba*100-vc)*.035,x); //spine
wave_0_per_point95=y= if(isec,.56,y);
wave_0_per_point96=r= if(isec,0,r);
wave_0_per_point97=g= if(isec,1,g);
wave_0_per_point98=b= if(isec,1,b);
wave_0_per_point99=a= if(isec,1,a);
wave_0_per_point100=
wave_0_per_point101=
wave_0_per_point102=//Braccia
wave_0_per_point103=
wave_0_per_point104=section +=1; isec=equal(int(s),section);
wave_0_per_point105=
wave_0_per_point106=x= if(isec,(.45-mi*abs(.39+0.85*wq)+fg*(cos(ba*100)*wq)*.00033),x); //screen left arm extension    -mi*abs(.39+0.85*wq)
wave_0_per_point107=y= if(isec,.528+(1/vb)*wq+sin(ba*75-(13*wq))*.042,y); //screen left arm length   +(1/vb)*wq+sin(ba*75-(13*wq))*.042
wave_0_per_point108=r= if(isec,1,r);
wave_0_per_point109=g= if(isec,0,g);
wave_0_per_point110=b= if(isec,1,b);
wave_0_per_point111=a= if(isec,1,a);
wave_0_per_point112=
wave_0_per_point113=section +=1; isec=equal(int(s),section);
wave_0_per_point114=
wave_0_per_point115=x= if(isec,(.558+(sin(ba*100)*wq)*.033),x-(sin((ba*100)*gr)*.003)); //arm return screen left
wave_0_per_point116=y= if(isec,.586+0.05*(6/vb),y); //collar height
wave_0_per_point117=r= if(isec,1,r);
wave_0_per_point118=g= if(isec,1,g);
wave_0_per_point119=b= if(isec,1,b);
wave_0_per_point120=a= if(isec,1,a);
wave_0_per_point121=
wave_0_per_point122=section +=1; isec=equal(int(s),section);
wave_0_per_point123=
wave_0_per_point124=x= if(isec,(.51+abs(tr*0.4*qw))+(ba*.13)*wq +abs(tr*0.4*wq),x); //screen right arm extension
wave_0_per_point125=y= if(isec,.55 +(12/vb)*0.22,y);   //screen right arm length
wave_0_per_point126=r= if(isec,0,r);
wave_0_per_point127=g= if(isec,0,g);
wave_0_per_point128=b= if(isec,0,b);
wave_0_per_point129=a= if(isec,1,a);
wave_0_per_point130=
wave_0_per_point131=section +=1; isec=equal(int(s),section);
wave_0_per_point132=
wave_0_per_point133=x= if(isec,.62+abs(tr*0.4*wq),x+abs(tr*0.004*wq)); //arm entry screen right hand pos   +(ba*0.259)*qw +(12/(vb/gr))*wq
wave_0_per_point134=y= if(isec,.55+(abs(0.09+0.3*wq)*0.2)*wq-(abs(0.09+0.3*qw)*0.2)*qw +((fg/vb)*wq),y);   //   
wave_0_per_point135=r= if(isec,1,r);
wave_0_per_point136=g= if(isec,0,g);
wave_0_per_point137=b= if(isec,0,b);
wave_0_per_point138=a= if(isec,1,a);
wave_0_per_point139=
wave_0_per_point140=//Testa
wave_0_per_point141=
wave_0_per_point142=section +=1; isec=equal(int(s),section);
wave_0_per_point143=
wave_0_per_point144=x= if(isec,.52,x); //collar  +(sin(ba*100)*wq)*.033)
wave_0_per_point145=y= if(isec,.57,y);  //
wave_0_per_point146=r= if(isec,0,r);
wave_0_per_point147=g= if(isec,1,g);
wave_0_per_point148=b= if(isec,0,b);
wave_0_per_point149=a= if(isec,1,a);
wave_0_per_point150=
wave_0_per_point151=section +=1; isec=equal(int(s),section);
wave_0_per_point152=
wave_0_per_point153=x= if(isec,.51+(ba*.23)*qw,x); // left side temple ear
wave_0_per_point154=y= if(isec,(.591-ba*.13),y);
wave_0_per_point155=r= if(isec,0,r);
wave_0_per_point156=g= if(isec,1,g);
wave_0_per_point157=b= if(isec,1,b);
wave_0_per_point158=a= if(isec,1,a);
wave_0_per_point159=
wave_0_per_point160=
wave_0_per_point161=section +=1; isec=equal(int(s),section);
wave_0_per_point162=
wave_0_per_point163=x= if(isec,.497-(ba*.19)*qw,x); // hairline l
wave_0_per_point164=y= if(isec,.638-(ba*.13)*qw,y);
wave_0_per_point165=r= if(isec,1,r);
wave_0_per_point166=g= if(isec,0,g);
wave_0_per_point167=b= if(isec,1,b);
wave_0_per_point168=a= if(isec,1,a);
wave_0_per_point169=
wave_0_per_point170=section +=1; isec=equal(int(s),section);
wave_0_per_point171=
wave_0_per_point172=x= if(isec,.535-(ba*.21)*qw,x); // hairline r
wave_0_per_point173=y= if(isec, 0.65+(ba*.13)*qw,y); //  .65+(ba*.13)*qw
wave_0_per_point174=r= if(isec,1,r);
wave_0_per_point175=g= if(isec,0,g);
wave_0_per_point176=b= if(isec,1,b);
wave_0_per_point177=a= if(isec,1,a);
wave_0_per_point178=
wave_0_per_point179=section +=1; isec=equal(int(s),section);
wave_0_per_point180=
wave_0_per_point181=x= if(isec,.55-(ba*.18)*qw,x); // right side temple ear
wave_0_per_point182=y= if(isec,.631,y);
wave_0_per_point183=r= if(isec,0,r);
wave_0_per_point184=g= if(isec,0,g);
wave_0_per_point185=b= if(isec,1,b);
wave_0_per_point186=a= if(isec,1,a);
wave_0_per_point187=
wave_0_per_point188=section +=1; isec=equal(int(s),section);
wave_0_per_point189=
wave_0_per_point190=x= if(isec,.53+(ba*0.13)*qw,x); //right face side chin
wave_0_per_point191=y= if(isec,.591,y);
wave_0_per_point192=r= if(isec,1,r);
wave_0_per_point193=g= if(isec,0,g);
wave_0_per_point194=b= if(isec,1,b);
wave_0_per_point195=a= if(isec,1,a);
wave_0_per_point196=
wave_0_per_point197=//add process post section
wave_0_per_point198=
wave_0_per_point199=x=x-0.5; y=y-0.5; //use polar from here
wave_0_per_point200=x=x*q28; //sign(var)
wave_0_per_point201=
wave_0_per_point202=
wave_0_per_point203=
wave_0_per_point204=x=(x+0.5)*dim+xpos;
wave_0_per_point205=y=(y+0.5)*dim+ypos;
wavecode_1_enabled=1
wavecode_1_samples=16
wavecode_1_sep=63
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_point1=meanbass = 0.01*(meanbass*99+bass_att);
wave_1_per_point2=meantreb = 0.01*(meantreb*99+treb_att*value2);
wave_1_per_point3=meanmid = 0.01*(meanmid*99+mid_att);
wave_1_per_point4=bassdiff = (bass_att - meanbass)*15;
wave_1_per_point5=trebdiff = (treb_att - meantreb)*15;
wave_1_per_point6=middiff = (mid_att - meanmid)*15;
wave_1_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_1_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_1_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_1_per_point10=baprg=baprg+ba*.3;
wave_1_per_point11=trprg=trprg+tr*.4;
wave_1_per_point12=miprg=miprg+tr*.3;
wave_1_per_point13=
wave_1_per_point14=
wave_1_per_point15=dim =0.65+.3*sin(miprg); //Dancer dimensions
wave_1_per_point16=xpos=0+.2*sin(baprg);//Dancer x position variation
wave_1_per_point17=ypos=0+.02*sin(trprg);//Dancer y position variation
wave_1_per_point18=
wave_1_per_point19=
wave_1_per_point20=//Position Stabilization
wave_1_per_point21=xpos=xpos+(1-dim)/2;
wave_1_per_point22=ypos=ypos+(1-dim)/2;
wave_1_per_point23=
wave_1_per_point24=meanbass = 0.01*(meanbass*99+bass);
wave_1_per_point25=meantreb = 0.01*(meantreb*99+treb);
wave_1_per_point26=meanmid = 0.01*(meanmid*99+mid);
wave_1_per_point27=bassdiff = (bass - meanbass)*15;
wave_1_per_point28=trebdiff = (treb - meantreb)*15;
wave_1_per_point29=middiff = (mid - meanmid)*15;
wave_1_per_point30=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_1_per_point31=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_1_per_point32=mi = min(above(middiff,0)*middiff*.005,.11);
wave_1_per_point33=
wave_1_per_point34=mi2_prg = mi2_prg+mi;
wave_1_per_point35=gam = abs(gam-above(mi2_prg,5));
wave_1_per_point36=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_1_per_point37=
wave_1_per_point38=
wave_1_per_point39=test=0+0.2*sin(time); tes2=0+0.2*cos(time); qw=1+test; wq=1+tes2; 
wave_1_per_point40=fg +=if(above(0.05,fg),-gr,if(above(fg,50),-gr,gr));
wave_1_per_point41=vz=0.1/(value1-value2); vc=abs(vz)*wq; vb=abs(vc)/0.001;
wave_1_per_point42=zxsimspe=int(60/(fps/3)); grnd=int(rand(zxsimspe)); gr=1/grnd; gr +=0.1*gr; gr +=0.02*gr;
wave_1_per_point43=gr +=0.001*gr; gr +=0.0002*gr; gr +=0.00001*gr; gr +=0.000002*gr; gr +=0.0000001*gr; 
wave_1_per_point44=gr +=0.00000002*gr; gr +=0.000000001*gr; gr +=0.00000000002*gr;
wave_1_per_point45=fg =1/gr+fg; 
wave_1_per_point46=larm=(abs(0.09+0.3*wq)*0.2)*wq-(abs(0.09+0.3*qw)*0.2)*qw +((fg/vb)*wq); 
wave_1_per_point47=ralm=(abs(0.09+0.3*qw)*0.2)*qw-(abs(0.09-0.3*qw)*0.2)*qw +((fg/vb)*qw); 
wave_1_per_point48=
wave_1_per_point49=s = sample *section; section=0;
wave_1_per_point50=//legs
wave_1_per_point51=
wave_1_per_point52=section +=1; isec=equal(int(s),section);
wave_1_per_point53=
wave_1_per_point54=x= if(isec,.492-((ba)*.125)*(gam)+(tr*0.12*wq),.487);  //l foot   +((1/vc)*wq)*qw    +((1/vc)*qw)*qw)-(abs(ba-tr)*.15)*gam
wave_1_per_point55=y= if(isec,.192-((ba)*.15)*(gam)+(tr*0.12*qw)+larm,.188);   //-((ba+tr)*.7)*gam    -((ba-tr)*.72)*gam
wave_1_per_point56=r= if(isec,1,r);
wave_1_per_point57=g= if(isec,0,g);
wave_1_per_point58=b= if(isec,0,b);
wave_1_per_point59=a= if(isec,1,a);
wave_1_per_point60=
wave_1_per_point61=section +=1; isec=equal(int(s),section);
wave_1_per_point62=
wave_1_per_point63=x= if(isec,.523+(tr*0.12*qw),x); //inside leg +sin(ba*100-vc)*.020*((1/vc)*wq)*wq
wave_1_per_point64=y= if(isec,.454+((ba)*.15)*(gam)+(tr*0.12*wq)+larm*0.3,y);   //    +0.02*wq*gam    *(gr-gam)
wave_1_per_point65=r= if(isec,0,r);
wave_1_per_point66=g= if(isec,1,g);
wave_1_per_point67=b= if(isec,0,b);
wave_1_per_point68=a= if(isec,1,a);
wave_1_per_point69=
wave_1_per_point70=
wave_1_per_point71=section +=1; isec=equal(int(s),section);
wave_1_per_point72=
wave_1_per_point73=x= if(isec,.59-((ba)*.15)*(gam)+(tr*0.12*qw),x); //r leg    +(g/(vc+bass_att))*(mid_att-qw)*0.5)*qw,x);
wave_1_per_point74=y= if(isec,.182-((ba)*.125)*(gam)+(tr*0.12*wq)-ralm,y);   //-((ba)*.25)*(gam)
wave_1_per_point75=r= if(isec,0,r);
wave_1_per_point76=g= if(isec,1,g);
wave_1_per_point77=b= if(isec,1,b);
wave_1_per_point78=a= if(isec,0,a);
wave_1_per_point79=
wave_1_per_point80=
wave_1_per_point81=section +=1; isec=equal(int(s),section);
wave_1_per_point82=
wave_1_per_point83=x= if(isec,.52+(tr*0.16*qw),x+(tr*0.012*wq)); //waist   +sin(ba*100+vc)*.018
wave_1_per_point84=y= if(isec,.453,y);   //
wave_1_per_point85=r= if(isec,1,r);
wave_1_per_point86=g= if(isec,0,g);
wave_1_per_point87=b= if(isec,1,b);
wave_1_per_point88=a= if(isec,1,a);
wave_1_per_point89=
wave_1_per_point90=//Corpo
wave_1_per_point91=
wave_1_per_point92=section +=1; isec=equal(int(s),section);
wave_1_per_point93=
wave_1_per_point94=x= if(isec,.531-sin(ba*100-vc)*.035,x); //spine
wave_1_per_point95=y= if(isec,.56,y);
wave_1_per_point96=r= if(isec,0,r);
wave_1_per_point97=g= if(isec,1,g);
wave_1_per_point98=b= if(isec,1,b);
wave_1_per_point99=a= if(isec,1,a);
wave_1_per_point100=
wave_1_per_point101=
wave_1_per_point102=//Braccia
wave_1_per_point103=
wave_1_per_point104=section +=1; isec=equal(int(s),section);
wave_1_per_point105=
wave_1_per_point106=x= if(isec,(.45-mi*abs(.39+0.85*wq)+fg*(cos(ba*100)*wq)*.00033),x); //screen left arm extension    -mi*abs(.39+0.85*wq)
wave_1_per_point107=y= if(isec,.528+(1/vb)*wq+sin(ba*75-(13*wq))*.042,y); //screen left arm length   +(1/vb)*wq+sin(ba*75-(13*wq))*.042
wave_1_per_point108=r= if(isec,1,r);
wave_1_per_point109=g= if(isec,0,g);
wave_1_per_point110=b= if(isec,1,b);
wave_1_per_point111=a= if(isec,1,a);
wave_1_per_point112=
wave_1_per_point113=section +=1; isec=equal(int(s),section);
wave_1_per_point114=
wave_1_per_point115=x= if(isec,(.558+(sin(ba*100)*wq)*.033),x-(sin((ba*100)*gr)*.003)); //arm return screen left
wave_1_per_point116=y= if(isec,.586+0.05*(6/vb),y); //collar height
wave_1_per_point117=r= if(isec,1,r);
wave_1_per_point118=g= if(isec,1,g);
wave_1_per_point119=b= if(isec,1,b);
wave_1_per_point120=a= if(isec,1,a);
wave_1_per_point121=
wave_1_per_point122=section +=1; isec=equal(int(s),section);
wave_1_per_point123=
wave_1_per_point124=x= if(isec,(.51+abs(tr*0.4*qw))+(ba*.13)*wq +abs(tr*0.4*wq),x); //screen right arm extension
wave_1_per_point125=y= if(isec,.55 +(12/vb)*0.22,y);   //screen right arm length
wave_1_per_point126=r= if(isec,0,r);
wave_1_per_point127=g= if(isec,0,g);
wave_1_per_point128=b= if(isec,0,b);
wave_1_per_point129=a= if(isec,1,a);
wave_1_per_point130=
wave_1_per_point131=section +=1; isec=equal(int(s),section);
wave_1_per_point132=
wave_1_per_point133=x= if(isec,.62+abs(tr*0.4*wq),x+abs(tr*0.004*wq)); //arm entry screen right hand pos   +(ba*0.259)*qw +(12/(vb/gr))*wq
wave_1_per_point134=y= if(isec,.55+(abs(0.09+0.3*wq)*0.2)*wq-(abs(0.09+0.3*qw)*0.2)*qw +((fg/vb)*wq),y);   //   
wave_1_per_point135=r= if(isec,1,r);
wave_1_per_point136=g= if(isec,0,g);
wave_1_per_point137=b= if(isec,0,b);
wave_1_per_point138=a= if(isec,1,a);
wave_1_per_point139=
wave_1_per_point140=//Testa
wave_1_per_point141=
wave_1_per_point142=section +=1; isec=equal(int(s),section);
wave_1_per_point143=
wave_1_per_point144=x= if(isec,.52,x); //collar  +(sin(ba*100)*wq)*.033)
wave_1_per_point145=y= if(isec,.57,y);  //
wave_1_per_point146=r= if(isec,0,r);
wave_1_per_point147=g= if(isec,1,g);
wave_1_per_point148=b= if(isec,0,b);
wave_1_per_point149=a= if(isec,1,a);
wave_1_per_point150=
wave_1_per_point151=section +=1; isec=equal(int(s),section);
wave_1_per_point152=
wave_1_per_point153=x= if(isec,.51+(ba*.23)*qw,x); // left side temple ear
wave_1_per_point154=y= if(isec,(.591-ba*.13),y);
wave_1_per_point155=r= if(isec,0,r);
wave_1_per_point156=g= if(isec,1,g);
wave_1_per_point157=b= if(isec,1,b);
wave_1_per_point158=a= if(isec,1,a);
wave_1_per_point159=
wave_1_per_point160=
wave_1_per_point161=section +=1; isec=equal(int(s),section);
wave_1_per_point162=
wave_1_per_point163=x= if(isec,.497-(ba*.19)*qw,x); // hairline l
wave_1_per_point164=y= if(isec,.638-(ba*.13)*qw,y);
wave_1_per_point165=r= if(isec,1,r);
wave_1_per_point166=g= if(isec,0,g);
wave_1_per_point167=b= if(isec,1,b);
wave_1_per_point168=a= if(isec,1,a);
wave_1_per_point169=
wave_1_per_point170=section +=1; isec=equal(int(s),section);
wave_1_per_point171=
wave_1_per_point172=x= if(isec,.535-(ba*.21)*qw,x); // hairline r
wave_1_per_point173=y= if(isec, 0.65+(ba*.13)*qw,y); //  .65+(ba*.13)*qw
wave_1_per_point174=r= if(isec,1,r);
wave_1_per_point175=g= if(isec,0,g);
wave_1_per_point176=b= if(isec,1,b);
wave_1_per_point177=a= if(isec,1,a);
wave_1_per_point178=
wave_1_per_point179=section +=1; isec=equal(int(s),section);
wave_1_per_point180=
wave_1_per_point181=x= if(isec,.55-(ba*.18)*qw,x); // right side temple ear
wave_1_per_point182=y= if(isec,.631,y);
wave_1_per_point183=r= if(isec,0,r);
wave_1_per_point184=g= if(isec,0,g);
wave_1_per_point185=b= if(isec,1,b);
wave_1_per_point186=a= if(isec,1,a);
wave_1_per_point187=
wave_1_per_point188=section +=1; isec=equal(int(s),section);
wave_1_per_point189=
wave_1_per_point190=x= if(isec,.53+(ba*0.13)*qw,x); //right face side chin
wave_1_per_point191=y= if(isec,.591,y);
wave_1_per_point192=r= if(isec,1,r);
wave_1_per_point193=g= if(isec,0,g);
wave_1_per_point194=b= if(isec,1,b);
wave_1_per_point195=a= if(isec,1,a);
wave_1_per_point196=
wave_1_per_point197=//add process post section
wave_1_per_point198=
wave_1_per_point199=x=x-0.5; y=y-0.5; //use polar from here
wave_1_per_point200=x=x*q28; //sign(var)
wave_1_per_point201=
wave_1_per_point202=
wave_1_per_point203=
wave_1_per_point204=x=(x+0.5)*dim+xpos;
wave_1_per_point205=y=(y+0.5)*dim+ypos;
wavecode_2_enabled=1
wavecode_2_samples=16
wavecode_2_sep=100
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_point1=meanbass = 0.01*(meanbass*99+bass_att);
wave_2_per_point2=meantreb = 0.01*(meantreb*99+treb_att*value1);
wave_2_per_point3=meanmid = 0.01*(meanmid*99+mid_att);
wave_2_per_point4=bassdiff = (bass_att - meanbass)*15;
wave_2_per_point5=trebdiff = (treb_att - meantreb)*15;
wave_2_per_point6=middiff = (mid_att - meanmid)*15;
wave_2_per_point7=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_2_per_point8=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_2_per_point9=mi = min(above(middiff,0)*middiff*.005,.11);
wave_2_per_point10=baprg=baprg+ba*.4;
wave_2_per_point11=trprg=trprg+tr*.3;
wave_2_per_point12=miprg=miprg+tr*.2;
wave_2_per_point13=
wave_2_per_point14=
wave_2_per_point15=dim =0.65+.3*sin(miprg); //Dancer dimensions
wave_2_per_point16=xpos=0+.2*sin(baprg);//Dancer x position variation
wave_2_per_point17=ypos=0+.02*sin(trprg);//Dancer y position variation
wave_2_per_point18=
wave_2_per_point19=
wave_2_per_point20=//Position Stabilization
wave_2_per_point21=xpos=xpos+(1-dim)/2;
wave_2_per_point22=ypos=ypos+(1-dim)/2;
wave_2_per_point23=
wave_2_per_point24=meanbass = 0.01*(meanbass*99+bass);
wave_2_per_point25=meantreb = 0.01*(meantreb*99+treb);
wave_2_per_point26=meanmid = 0.01*(meanmid*99+mid);
wave_2_per_point27=bassdiff = (bass - meanbass)*15;
wave_2_per_point28=trebdiff = (treb - meantreb)*15;
wave_2_per_point29=middiff = (mid - meanmid)*15;
wave_2_per_point30=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_2_per_point31=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_2_per_point32=mi = min(above(middiff,0)*middiff*.005,.11);
wave_2_per_point33=
wave_2_per_point34=mi2_prg = mi2_prg+mi;
wave_2_per_point35=gam = abs(gam-above(mi2_prg,5));
wave_2_per_point36=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_2_per_point37=
wave_2_per_point38=
wave_2_per_point39=test=0+0.2*sin(time); tes2=0+0.2*cos(time); qw=1+test; wq=1+tes2; 
wave_2_per_point40=fg +=if(above(0.05,fg),-gr,if(above(fg,50),-gr,gr));
wave_2_per_point41=vz=0.1/(value1-value2); vc=abs(vz)*wq; vb=abs(vc)/0.001;
wave_2_per_point42=zxsimspe=int(60/(fps/3)); grnd=int(rand(zxsimspe)); gr=1/grnd; gr +=0.1*gr; gr +=0.02*gr;
wave_2_per_point43=gr +=0.001*gr; gr +=0.0002*gr; gr +=0.00001*gr; gr +=0.000002*gr; gr +=0.0000001*gr; 
wave_2_per_point44=gr +=0.00000002*gr; gr +=0.000000001*gr; gr +=0.00000000002*gr;
wave_2_per_point45=fg =1/gr+fg; 
wave_2_per_point46=larm=(abs(0.09+0.3*wq)*0.2)*wq-(abs(0.09+0.3*qw)*0.2)*qw +((fg/vb)*wq); 
wave_2_per_point47=ralm=(abs(0.09+0.3*qw)*0.2)*qw-(abs(0.09-0.3*qw)*0.2)*qw +((fg/vb)*qw); 
wave_2_per_point48=
wave_2_per_point49=s = sample *section; section=0;
wave_2_per_point50=//legs
wave_2_per_point51=
wave_2_per_point52=section +=1; isec=equal(int(s),section);
wave_2_per_point53=
wave_2_per_point54=x= if(isec,.492-((ba)*.125)*(gam)+(tr*0.12*wq),.487);  //l foot   +((1/vc)*wq)*qw    +((1/vc)*qw)*qw)-(abs(ba-tr)*.15)*gam
wave_2_per_point55=y= if(isec,.192-((ba)*.15)*(gam)+(tr*0.12*qw)+larm,.188);   //-((ba+tr)*.7)*gam    -((ba-tr)*.72)*gam
wave_2_per_point56=r= if(isec,1,r);
wave_2_per_point57=g= if(isec,0,g);
wave_2_per_point58=b= if(isec,0,b);
wave_2_per_point59=a= if(isec,1,a);
wave_2_per_point60=
wave_2_per_point61=section +=1; isec=equal(int(s),section);
wave_2_per_point62=
wave_2_per_point63=x= if(isec,.523+(tr*0.12*qw),x); //inside leg +sin(ba*100-vc)*.020*((1/vc)*wq)*wq
wave_2_per_point64=y= if(isec,.454+((ba)*.15)*(gam)+(tr*0.12*wq)+larm*0.3,y);   //    +0.02*wq*gam    *(gr-gam)
wave_2_per_point65=r= if(isec,0,r);
wave_2_per_point66=g= if(isec,1,g);
wave_2_per_point67=b= if(isec,0,b);
wave_2_per_point68=a= if(isec,1,a);
wave_2_per_point69=
wave_2_per_point70=
wave_2_per_point71=section +=1; isec=equal(int(s),section);
wave_2_per_point72=
wave_2_per_point73=x= if(isec,.59-((ba)*.15)*(gam)+(tr*0.12*qw),x); //r leg    +(g/(vc+bass_att))*(mid_att-qw)*0.5)*qw,x);
wave_2_per_point74=y= if(isec,.182-((ba)*.125)*(gam)+(tr*0.12*wq)-ralm,y);   //-((ba)*.25)*(gam)
wave_2_per_point75=r= if(isec,0,r);
wave_2_per_point76=g= if(isec,1,g);
wave_2_per_point77=b= if(isec,1,b);
wave_2_per_point78=a= if(isec,0,a);
wave_2_per_point79=
wave_2_per_point80=
wave_2_per_point81=section +=1; isec=equal(int(s),section);
wave_2_per_point82=
wave_2_per_point83=x= if(isec,.52+(tr*0.16*qw),x+(tr*0.012*wq)); //waist   +sin(ba*100+vc)*.018
wave_2_per_point84=y= if(isec,.453,y);   //
wave_2_per_point85=r= if(isec,1,r);
wave_2_per_point86=g= if(isec,0,g);
wave_2_per_point87=b= if(isec,1,b);
wave_2_per_point88=a= if(isec,1,a);
wave_2_per_point89=
wave_2_per_point90=//Corpo
wave_2_per_point91=
wave_2_per_point92=section +=1; isec=equal(int(s),section);
wave_2_per_point93=
wave_2_per_point94=x= if(isec,.531-sin(ba*100-vc)*.035,x); //spine
wave_2_per_point95=y= if(isec,.56,y);
wave_2_per_point96=r= if(isec,0,r);
wave_2_per_point97=g= if(isec,1,g);
wave_2_per_point98=b= if(isec,1,b);
wave_2_per_point99=a= if(isec,1,a);
wave_2_per_point100=
wave_2_per_point101=
wave_2_per_point102=//Braccia
wave_2_per_point103=
wave_2_per_point104=section +=1; isec=equal(int(s),section);
wave_2_per_point105=
wave_2_per_point106=x= if(isec,(.45-mi*abs(.39+0.85*wq)+fg*(cos(ba*100)*wq)*.00033),x); //screen left arm extension    -mi*abs(.39+0.85*wq)
wave_2_per_point107=y= if(isec,.528+(1/vb)*wq+sin(ba*75-(13*wq))*.042,y); //screen left arm length   +(1/vb)*wq+sin(ba*75-(13*wq))*.042
wave_2_per_point108=r= if(isec,1,r);
wave_2_per_point109=g= if(isec,0,g);
wave_2_per_point110=b= if(isec,1,b);
wave_2_per_point111=a= if(isec,1,a);
wave_2_per_point112=
wave_2_per_point113=section +=1; isec=equal(int(s),section);
wave_2_per_point114=
wave_2_per_point115=x= if(isec,(.558+(sin(ba*100)*wq)*.033),x-(sin((ba*100)*gr)*.003)); //arm return screen left
wave_2_per_point116=y= if(isec,.586+0.05*(6/vb),y); //collar height
wave_2_per_point117=r= if(isec,1,r);
wave_2_per_point118=g= if(isec,1,g);
wave_2_per_point119=b= if(isec,1,b);
wave_2_per_point120=a= if(isec,1,a);
wave_2_per_point121=
wave_2_per_point122=section +=1; isec=equal(int(s),section);
wave_2_per_point123=
wave_2_per_point124=x= if(isec,(.51+abs(tr*0.4*qw))+(ba*.13)*wq +abs(tr*0.4*wq),x); //screen right arm extension
wave_2_per_point125=y= if(isec,.55 +(12/vb)*0.22,y);   //screen right arm length
wave_2_per_point126=r= if(isec,0,r);
wave_2_per_point127=g= if(isec,0,g);
wave_2_per_point128=b= if(isec,0,b);
wave_2_per_point129=a= if(isec,1,a);
wave_2_per_point130=
wave_2_per_point131=section +=1; isec=equal(int(s),section);
wave_2_per_point132=
wave_2_per_point133=x= if(isec,.62+abs(tr*0.4*wq),x+abs(tr*0.004*wq)); //arm entry screen right hand pos   +(ba*0.259)*qw +(12/(vb/gr))*wq
wave_2_per_point134=y= if(isec,.55+(abs(0.09+0.3*wq)*0.2)*wq-(abs(0.09+0.3*qw)*0.2)*qw +((fg/vb)*wq),y);   //   
wave_2_per_point135=r= if(isec,1,r);
wave_2_per_point136=g= if(isec,0,g);
wave_2_per_point137=b= if(isec,0,b);
wave_2_per_point138=a= if(isec,1,a);
wave_2_per_point139=
wave_2_per_point140=//Testa
wave_2_per_point141=
wave_2_per_point142=section +=1; isec=equal(int(s),section);
wave_2_per_point143=
wave_2_per_point144=x= if(isec,.52,x); //collar  +(sin(ba*100)*wq)*.033)
wave_2_per_point145=y= if(isec,.57,y);  //
wave_2_per_point146=r= if(isec,0,r);
wave_2_per_point147=g= if(isec,1,g);
wave_2_per_point148=b= if(isec,0,b);
wave_2_per_point149=a= if(isec,1,a);
wave_2_per_point150=
wave_2_per_point151=section +=1; isec=equal(int(s),section);
wave_2_per_point152=
wave_2_per_point153=x= if(isec,.51+(ba*.23)*qw,x); // left side temple ear
wave_2_per_point154=y= if(isec,(.591-ba*.13),y);
wave_2_per_point155=r= if(isec,0,r);
wave_2_per_point156=g= if(isec,1,g);
wave_2_per_point157=b= if(isec,1,b);
wave_2_per_point158=a= if(isec,1,a);
wave_2_per_point159=
wave_2_per_point160=
wave_2_per_point161=section +=1; isec=equal(int(s),section);
wave_2_per_point162=
wave_2_per_point163=x= if(isec,.497-(ba*.19)*qw,x); // hairline l
wave_2_per_point164=y= if(isec,.638-(ba*.13)*qw,y);
wave_2_per_point165=r= if(isec,1,r);
wave_2_per_point166=g= if(isec,0,g);
wave_2_per_point167=b= if(isec,1,b);
wave_2_per_point168=a= if(isec,1,a);
wave_2_per_point169=
wave_2_per_point170=section +=1; isec=equal(int(s),section);
wave_2_per_point171=
wave_2_per_point172=x= if(isec,.535-(ba*.21)*qw,x); // hairline r
wave_2_per_point173=y= if(isec, 0.65+(ba*.13)*qw,y); //  .65+(ba*.13)*qw
wave_2_per_point174=r= if(isec,1,r);
wave_2_per_point175=g= if(isec,0,g);
wave_2_per_point176=b= if(isec,1,b);
wave_2_per_point177=a= if(isec,1,a);
wave_2_per_point178=
wave_2_per_point179=section +=1; isec=equal(int(s),section);
wave_2_per_point180=
wave_2_per_point181=x= if(isec,.55-(ba*.18)*qw,x); // right side temple ear
wave_2_per_point182=y= if(isec,.631,y);
wave_2_per_point183=r= if(isec,0,r);
wave_2_per_point184=g= if(isec,0,g);
wave_2_per_point185=b= if(isec,1,b);
wave_2_per_point186=a= if(isec,1,a);
wave_2_per_point187=
wave_2_per_point188=section +=1; isec=equal(int(s),section);
wave_2_per_point189=
wave_2_per_point190=x= if(isec,.53+(ba*0.13)*qw,x); //right face side chin
wave_2_per_point191=y= if(isec,.591,y);
wave_2_per_point192=r= if(isec,1,r);
wave_2_per_point193=g= if(isec,0,g);
wave_2_per_point194=b= if(isec,1,b);
wave_2_per_point195=a= if(isec,1,a);
wave_2_per_point196=
wave_2_per_point197=//add process post section
wave_2_per_point198=
wave_2_per_point199=x=x-0.5; y=y-0.5; //use polar from here
wave_2_per_point200=x=x*q28; //sign(var)
wave_2_per_point201=
wave_2_per_point202=
wave_2_per_point203=
wave_2_per_point204=x=(x+0.5)*dim+xpos;
wave_2_per_point205=y=(y+0.5)*dim+ypos;
wavecode_3_enabled=1
wavecode_3_samples=16
wavecode_3_sep=80
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_per_frame1=
wave_3_per_frame2=rx=at
wave_3_per_point1=diff=value2-value1;
wave_3_per_point2=meanbass = 0.01*(meanbass*99+bass_att*diff);
wave_3_per_point3=meantreb = 0.01*(meantreb*99+treb_att);
wave_3_per_point4=meanmid = 0.01*(meanmid*99+mid_att);
wave_3_per_point5=bassdiff = (bass_att - meanbass)*15;
wave_3_per_point6=trebdiff = (treb_att - meantreb)*15;
wave_3_per_point7=middiff = (mid_att - meanmid)*15;
wave_3_per_point8=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_3_per_point9=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_3_per_point10=mi = min(above(middiff,0)*middiff*.005,.11);
wave_3_per_point11=baprg=baprg+ba*.2;
wave_3_per_point12=trprg=trprg+tr*.4;
wave_3_per_point13=miprg=miprg+tr*.4;
wave_3_per_point14=
wave_3_per_point15=
wave_3_per_point16=dim =0.5+.3*sin(miprg); //Dancer dimensions
wave_3_per_point17=xpos=0+.3*sin(baprg);//Dancer x position variation
wave_3_per_point18=ypos=0+.02*sin(trprg);//Dancer y position variation
wave_3_per_point19=
wave_3_per_point20=
wave_3_per_point21=//Position Stabilization
wave_3_per_point22=xpos=xpos+(1-dim)/2;
wave_3_per_point23=ypos=ypos+(1-dim)/2;
wave_3_per_point24=
wave_3_per_point25=meanbass = 0.01*(meanbass*99+bass);
wave_3_per_point26=meantreb = 0.01*(meantreb*99+treb);
wave_3_per_point27=meanmid = 0.01*(meanmid*99+mid);
wave_3_per_point28=bassdiff = (bass - meanbass)*15;
wave_3_per_point29=trebdiff = (treb - meantreb)*15;
wave_3_per_point30=middiff = (mid - meanmid)*15;
wave_3_per_point31=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
wave_3_per_point32=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
wave_3_per_point33=mi = min(above(middiff,0)*middiff*.005,.11);
wave_3_per_point34=
wave_3_per_point35=mi2_prg = mi2_prg+mi;
wave_3_per_point36=gam = abs(gam-above(mi2_prg,5));
wave_3_per_point37=mi2_prg= if(above(mi2_prg,5),0,mi2_prg);
wave_3_per_point38=
wave_3_per_point39=
wave_3_per_point40=test=0+0.2*sin(time); tes2=0+0.2*cos(time); qw=1+test; wq=1+tes2; 
wave_3_per_point41=//fg +=if(above(0.05,fg),-gr,if(above(fg,50),-gr,gr));
wave_3_per_point42=vz=0.1/(value1-value2); vc=abs(vz)*wq; vb=abs(vc)/0.001;
wave_3_per_point43=zxsimspe=int(60/(fps/3)); grnd=int(rand(zxsimspe)); gr=1/grnd; gr +=0.1*gr; gr +=0.02*gr;
wave_3_per_point44=gr +=0.001*gr; gr +=0.0002*gr; gr +=0.00001*gr; gr +=0.000002*gr; gr +=0.0000001*gr; 
wave_3_per_point45= gr +=0.00000002*gr; gr +=0.000000001*gr; gr +=0.00000000002*gr;
wave_3_per_point46=fg =1/gr+fg; 
wave_3_per_point47=larm=(abs(0.09+0.3*wq)*0.2)*wq-(abs(0.09+0.3*qw)*0.2)*qw +((fg/vb)*wq); 
wave_3_per_point48=ralm=(abs(0.09+0.3*qw)*0.2)*qw-(abs(0.09-0.3*qw)*0.2)*qw +((fg/vb)*qw); 
wave_3_per_point49=
wave_3_per_point50=s = sample *section; section=0;
wave_3_per_point51=//legs
wave_3_per_point52=
wave_3_per_point53=section +=1; isec=equal(int(s),section);
wave_3_per_point54=
wave_3_per_point55=x= if(isec,.492-((ba)*.125)*(gam)+(tr*0.12*wq),.487);  //l foot   +((1/vc)*wq)*qw    +((1/vc)*qw)*qw)-(abs(ba-tr)*.15)*gam
wave_3_per_point56=y= if(isec,.192-((ba)*.15)*(gam)+(tr*0.12*qw)+larm,.188);   //-((ba+tr)*.7)*gam    -((ba-tr)*.72)*gam
wave_3_per_point57=r= if(isec,1,r);
wave_3_per_point58=g= if(isec,0,g);
wave_3_per_point59=b= if(isec,0,b);
wave_3_per_point60=a= if(isec,1,a);
wave_3_per_point61=
wave_3_per_point62=section +=1; isec=equal(int(s),section);
wave_3_per_point63=
wave_3_per_point64=x= if(isec,.523+(tr*0.12*qw),x); //inside leg +sin(ba*100-vc)*.020*((1/vc)*wq)*wq
wave_3_per_point65=y= if(isec,.454+((ba)*.15)*(gam)+(tr*0.12*wq)+larm*0.3,y);   //    +0.02*wq*gam    *(gr-gam)
wave_3_per_point66=r= if(isec,0,r);
wave_3_per_point67=g= if(isec,1,g);
wave_3_per_point68=b= if(isec,0,b);
wave_3_per_point69=a= if(isec,1,a);
wave_3_per_point70=
wave_3_per_point71=
wave_3_per_point72=section +=1; isec=equal(int(s),section);
wave_3_per_point73=
wave_3_per_point74=x= if(isec,.59-((ba)*.15)*(gam)+(tr*0.12*qw),x); //r leg    +(g/(vc+bass_att))*(mid_att-qw)*0.5)*qw,x);
wave_3_per_point75=y= if(isec,.182-((ba)*.125)*(gam)+(tr*0.12*wq)-ralm,y);   //-((ba)*.25)*(gam)
wave_3_per_point76=r= if(isec,0,r);
wave_3_per_point77=g= if(isec,1,g);
wave_3_per_point78=b= if(isec,1,b);
wave_3_per_point79=a= if(isec,0,a);
wave_3_per_point80=
wave_3_per_point81=
wave_3_per_point82=section +=1; isec=equal(int(s),section);
wave_3_per_point83=
wave_3_per_point84=x= if(isec,.52+(tr*0.16*qw),x+(tr*0.012*wq)); //waist   +sin(ba*100+vc)*.018
wave_3_per_point85=y= if(isec,.453,y);   //
wave_3_per_point86=r= if(isec,1,r);
wave_3_per_point87=g= if(isec,0,g);
wave_3_per_point88=b= if(isec,1,b);
wave_3_per_point89=a= if(isec,1,a);
wave_3_per_point90=
wave_3_per_point91=//Corpo
wave_3_per_point92=
wave_3_per_point93=section +=1; isec=equal(int(s),section);
wave_3_per_point94=
wave_3_per_point95=x= if(isec,.531-sin(ba*100-vc)*.035,x); //spine
wave_3_per_point96=y= if(isec,.56,y);
wave_3_per_point97=r= if(isec,0,r);
wave_3_per_point98=g= if(isec,1,g);
wave_3_per_point99=b= if(isec,1,b);
wave_3_per_point100=a= if(isec,1,a);
wave_3_per_point101=
wave_3_per_point102=
wave_3_per_point103=//Braccia
wave_3_per_point104=
wave_3_per_point105=section +=1; isec=equal(int(s),section);
wave_3_per_point106=
wave_3_per_point107=x= if(isec,(.45-mi*abs(.39+0.85*wq)+fg*(cos(ba*100)*wq)*.00033),x); //screen left arm extension    -mi*abs(.39+0.85*wq)
wave_3_per_point108=y= if(isec,.528+(1/vb)*wq+sin(ba*75-(13*wq))*.042,y); //screen left arm length   +(1/vb)*wq+sin(ba*75-(13*wq))*.042
wave_3_per_point109=r= if(isec,1,r);
wave_3_per_point110=g= if(isec,0,g);
wave_3_per_point111=b= if(isec,1,b);
wave_3_per_point112=a= if(isec,1,a);
wave_3_per_point113=
wave_3_per_point114=section +=1; isec=equal(int(s),section);
wave_3_per_point115=
wave_3_per_point116=x= if(isec,(.558+(sin(ba*100)*wq)*.033),x-(sin((ba*100)*gr)*.003)); //arm return screen left
wave_3_per_point117=y= if(isec,.586+0.05*(6/vb),y); //collar height
wave_3_per_point118=r= if(isec,1,r);
wave_3_per_point119=g= if(isec,1,g);
wave_3_per_point120=b= if(isec,1,b);
wave_3_per_point121=a= if(isec,1,a);
wave_3_per_point122=
wave_3_per_point123=section +=1; isec=equal(int(s),section);
wave_3_per_point124=
wave_3_per_point125=x= if(isec,(.51+abs(tr*0.4*qw))+(ba*.13)*wq +abs(tr*0.4*wq),x); //screen right arm extension
wave_3_per_point126=y= if(isec,.55 +(12/vb)*0.22,y);   //screen right arm length
wave_3_per_point127=r= if(isec,0,r);
wave_3_per_point128=g= if(isec,0,g);
wave_3_per_point129=b= if(isec,0,b);
wave_3_per_point130=a= if(isec,1,a);
wave_3_per_point131=
wave_3_per_point132=section +=1; isec=equal(int(s),section);
wave_3_per_point133=
wave_3_per_point134=x= if(isec,.62+abs(tr*0.4*wq),x+abs(tr*0.004*wq)); //arm entry screen right hand pos   +(ba*0.259)*qw +(12/(vb/gr))*wq
wave_3_per_point135=y= if(isec,.55+(abs(0.09+0.3*wq)*0.2)*wq-(abs(0.09+0.3*qw)*0.2)*qw +((fg/vb)*wq),y);   //   
wave_3_per_point136=r= if(isec,1,r);
wave_3_per_point137=g= if(isec,0,g);
wave_3_per_point138=b= if(isec,0,b);
wave_3_per_point139=a= if(isec,1,a);
wave_3_per_point140=
wave_3_per_point141=//Testa
wave_3_per_point142=
wave_3_per_point143=section +=1; isec=equal(int(s),section);
wave_3_per_point144=
wave_3_per_point145=x= if(isec,.52,x); //collar  +(sin(ba*100)*wq)*.033)
wave_3_per_point146=y= if(isec,.57,y);  //
wave_3_per_point147=r= if(isec,0,r);
wave_3_per_point148=g= if(isec,1,g);
wave_3_per_point149=b= if(isec,0,b);
wave_3_per_point150=a= if(isec,1,a);
wave_3_per_point151=
wave_3_per_point152=section +=1; isec=equal(int(s),section);
wave_3_per_point153=
wave_3_per_point154=x= if(isec,.51+(ba*.23)*qw,x); // left side temple ear
wave_3_per_point155=y= if(isec,(.591-ba*.13),y);
wave_3_per_point156=r= if(isec,0,r);
wave_3_per_point157=g= if(isec,1,g);
wave_3_per_point158=b= if(isec,1,b);
wave_3_per_point159=a= if(isec,1,a);
wave_3_per_point160=
wave_3_per_point161=
wave_3_per_point162=section +=1; isec=equal(int(s),section);
wave_3_per_point163=
wave_3_per_point164=x= if(isec,.497-(ba*.19)*qw,x); // hairline l
wave_3_per_point165=y= if(isec,.638-(ba*.13)*qw,y);
wave_3_per_point166=r= if(isec,1,r);
wave_3_per_point167=g= if(isec,0,g);
wave_3_per_point168=b= if(isec,1,b);
wave_3_per_point169=a= if(isec,1,a);
wave_3_per_point170=
wave_3_per_point171=section +=1; isec=equal(int(s),section);
wave_3_per_point172=
wave_3_per_point173=x= if(isec,.535-(ba*.21)*qw,x); // hairline r
wave_3_per_point174=y= if(isec, 0.65+(ba*.13)*qw,y); //  .65+(ba*.13)*qw
wave_3_per_point175=r= if(isec,1,r);
wave_3_per_point176=g= if(isec,0,g);
wave_3_per_point177=b= if(isec,1,b);
wave_3_per_point178=a= if(isec,1,a);
wave_3_per_point179=
wave_3_per_point180=section +=1; isec=equal(int(s),section);
wave_3_per_point181=
wave_3_per_point182=x= if(isec,.55-(ba*.18)*qw,x); // right side temple ear
wave_3_per_point183=y= if(isec,.631,y);
wave_3_per_point184=r= if(isec,0,r);
wave_3_per_point185=g= if(isec,0,g);
wave_3_per_point186=b= if(isec,1,b);
wave_3_per_point187=a= if(isec,1,a);
wave_3_per_point188=
wave_3_per_point189=section +=1; isec=equal(int(s),section);
wave_3_per_point190=
wave_3_per_point191=x= if(isec,.53+(ba*0.13)*qw,x); //right face side chin
wave_3_per_point192=y= if(isec,.591,y);
wave_3_per_point193=r= if(isec,1,r);
wave_3_per_point194=g= if(isec,0,g);
wave_3_per_point195=b= if(isec,1,b);
wave_3_per_point196=a= if(isec,1,a);
wave_3_per_point197=
wave_3_per_point198=//add process post section
wave_3_per_point199=
wave_3_per_point200=x=x-0.5; y=y-0.5; //use polar from here
wave_3_per_point201=x=x*q28; //sign(var)
wave_3_per_point202=
wave_3_per_point203=
wave_3_per_point204=
wave_3_per_point205=x=(x+0.5)*dim+xpos;
wave_3_per_point206=y=(y+0.5)*dim+ypos;
shapecode_0_enabled=0
shapecode_0_sides=100
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.840
shapecode_0_y=0.740
shapecode_0_rad=0.28999
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.32129
shapecode_0_r=0.100
shapecode_0_g=0.500
shapecode_0_b=0.500
shapecode_0_a=1.000
shapecode_0_r2=0.100
shapecode_0_g2=0.500
shapecode_0_b2=0.400
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=meantreb = 0.01*(meantreb*99+treb);
shape_0_per_frame2=trebdiff = (treb - meantreb)*15;
shape_0_per_frame3=tr = min(above(trebdiff,0)*trebdiff*.005,.11);
shape_0_per_frame4=
shape_0_per_frame5=tr_prg= tr_prg+tr;
shape_0_per_frame6=
shape_0_per_frame7=tex_ang =-tr_prg;
shapecode_1_enabled=0
shapecode_1_sides=100
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.150
shapecode_1_y=0.730
shapecode_1_rad=0.51133
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.36133
shapecode_1_r=0.600
shapecode_1_g=0.600
shapecode_1_b=0.200
shapecode_1_a=1.000
shapecode_1_r2=0.600
shapecode_1_g2=0.600
shapecode_1_b2=0.210
shapecode_1_a2=0.900
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_per_frame1=meanbass = 0.01*(meanbass*99+bass);
shape_1_per_frame2=bassdiff = (bass - meanbass)*15;
shape_1_per_frame3=ba = min(above(bassdiff,0)*bassdiff*.005,.11);
shape_1_per_frame4=
shape_1_per_frame5=
shape_1_per_frame6=ba_prg= ba_prg+ba;
shape_1_per_frame7=
shape_1_per_frame8=tex_ang =-ba_prg;
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_init_1=index = 0;
per_frame_init_2=loop (100000,
per_frame_init_3=  megabuf(index) = 0;
per_frame_init_4=  gmegabuf(index) = 0;
per_frame_init_5=  index = index + 1;
per_frame_init_6=);
per_frame_init_7=
per_frame_init_8=flen = 128; shapes = 32; sortbase = 7000;
per_frame_init_9=
per_frame_init_10=reg07 = sortbase;
per_frame_init_11=n = 0;
per_frame_init_12=loop (flen,
per_frame_init_13=  gmegabuf(sortbase+n) = n;
per_frame_init_14=  n = n+1; 
per_frame_init_15=);
per_frame_init_16=
per_frame_1=dec_m = pow (0.8, 30/fps);
per_frame_2=dec_s = pow (0.98, 30/fps);
per_frame_3=
per_frame_4=vol =  pow(bass+treb,1);
per_frame_5=vol_ = vol_*dec_m + (1-dec_m)*vol;
per_frame_6=
per_frame_7=
per_frame_8=//Kreuzkorrelation
per_frame_9=
per_frame_10=//Struktur
per_frame_11=//0: Masse
per_frame_12=//1: Geschw.
per_frame_13=//2: Weg
per_frame_14=//3..7: Frei;
per_frame_15=
per_frame_16=feder = 150;
per_frame_17=damp = 1-dt*0.1;
per_frame_18=
per_frame_19=dt = 1/fps;
per_frame_20=n = 0;
per_frame_21=num = 100;
per_frame_22=
per_frame_23=maxind = 0;
per_frame_24=Masse = 0.2;
per_frame_25=loop (num,
per_frame_26=  Masse *= 1.03;
per_frame_27=  Kraft = (vol-vol_)*16*Masse - feder * gmegabuf(n + 2) ;
per_frame_28=  gmegabuf (n+4) = gmegabuf(n+1); //alte Geschwindigkeit
per_frame_29=  gmegabuf (n+1) += Kraft / Masse * dt;
per_frame_30=  gmegabuf (n+1) *= damp;
per_frame_31=  gmegabuf (n+2) += gmegabuf(n+1) * dt ;
per_frame_32=  gmegabuf (n+3) = gmegabuf(n+3) *dec_s + abs (gmegabuf(n+1))* (1-dec_s)*0.1;
per_frame_33=  if (gmegabuf(n+3) > gmegabuf (maxind+3),maxind = n,0);
per_frame_34=  n += 8;
per_frame_35=);
per_frame_36=push = gmegabuf(maxind+1) * gmegabuf (maxind+4) < 0;
per_frame_37=push *= (gmegabuf (maxind+1) < 0);
per_frame_38=
per_frame_39=
per_frame_40=q32 = aspecty;
per_frame_41=
per_frame_42=q1 = push;
per_frame_43=prog = prog + push;
per_frame_44=q2 = prog % 8;
per_frame_45=//monitor = maxind;
per_frame_46=
per_frame_47=qw=0+0.2*sin(time);
per_frame_48=q27=mid_att+treb-(treb_att*cos(time*0.1)+bass_att*qw);
per_frame_49=q28=sign(q27); 
per_frame_50=
per_frame_51=monitor=q29*10;
per_pixel_1=zoom = .99; rot = 0; warp = 0; dy = -0.004;  dx = 0.002;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    float2 pix = texsize.zw*4;
warp_5=`    ret = max(GetBlur3(0.5 + (uv+pix-0.5)*0.94),GetBlur2(0.5 + (uv+pix-0.5)*0.94));
warp_6=`    ret -= 0.024;
warp_7=`}
comp_1=`float var1,var2,var3;
comp_2=`
comp_3=`shader_body
comp_4=`{
comp_5=`
comp_6=`float var1=sin((time+(bass_att-(mid*.9)/6)));
comp_7=`float var2=sin((time+(mid_att-(treb*.9)/6)));
comp_8=`float var3=cos((time+(treb_att-(bass*.9)/6)));
comp_9=`
comp_10=`float2 uv1 = uv-.5;
comp_11=`
comp_12=`float3 ret1 = tex2D(sampler_main, uv) * (1-rad);
comp_13=`
comp_14=`
comp_15=`float2 hor = float2 (texsize.z,0)*1-.1*var2;
comp_16=`float2 ver = float2 (0,texsize.w)*1-.1*var1;
comp_17=`float dx = GetBlur1 (uv-hor) - GetBlur2 (uv+hor);
comp_18=`float dy = GetBlur2 (uv-ver) - GetBlur1 (uv+ver);
comp_19=`float2 dz = float2 (dx,dy)*1.5+.31*var3;
comp_20=`
comp_21=`uv1 = uv1*0+.3*cos(uv1*2) - dz;;
comp_22=`float dots = saturate(.09/length(uv1));
comp_23=`uv1 = uv1*0+.3*cos(uv1*12) - 9*dz;;
comp_24=`float3 dots2 = saturate(.09/length(uv1));
comp_25=`
comp_26=`
comp_27=`ret = (-ret1) + dots + .0 + 12*dots2*(-0+sqrt(ret1));
comp_28=`}
