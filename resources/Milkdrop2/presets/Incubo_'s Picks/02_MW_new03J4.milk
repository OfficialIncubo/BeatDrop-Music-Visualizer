MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=0.952
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=7
bAdditiveWaves=1
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=1
bMaximizeWaveColor=0
bTexWrap=0
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=1.286
fWaveSmoothing=0.630
fWaveParam=0.000
fModWaveAlphaStart=0.710
fModWaveAlphaEnd=1.300
fWarpAnimSpeed=1.000
fWarpScale=2.853
fZoomExponent=2.63006
fShader=0.000
zoom=1.03100
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00000
sx=1.00000
sy=1.00000
wave_r=0.650
wave_g=0.650
wave_b=0.650
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.000
ib_g=0.000
ib_b=0.000
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=20.160
mv_dx=0.000
mv_dy=0.000
mv_l=0.400
mv_r=1.000
mv_g=0.400
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=0.700
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=1
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.50000
wavecode_0_r=1.000
wavecode_0_g=1.000
wavecode_0_b=1.000
wavecode_0_a=1.000
wave_0_init1=ma=.5;
wave_0_init2=my=.5;
wave_0_init3=md=0; //direction 0 1 2 3
wave_0_per_point1=oldmd=md;
wave_0_per_point2=md=(md+int(rand(4)))%4;
wave_0_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_0_per_point4=
wave_0_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_0_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_0_per_point7=my=my+(equal(md,2)*.002*treb);
wave_0_per_point8=my=my-(equal(md,3)*.002*treb);
wave_0_per_point9=
wave_0_per_point10=mx=if(above(mx,.9),.5,mx);
wave_0_per_point11=mx=if(below(mx,.1),.5,mx);
wave_0_per_point12=my=if(above(my,.9),.5,my);
wave_0_per_point13=my=if(below(my,.1),.5,my);
wave_0_per_point14=
wave_0_per_point15=x=mx;
wave_0_per_point16=y=my;
wave_0_per_point17=a=bass*.1;
wave_0_per_point18=
wave_0_per_point19=r=bass*.5;
wavecode_1_enabled=1
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=1
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.50000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_init1=mx=.5;
wave_1_init2=my=.5;
wave_1_init3=md=1;
wave_1_per_point1=oldmd=md;
wave_1_per_point2=md=(md+int(rand(4)))%4;
wave_1_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_1_per_point4=
wave_1_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_1_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_1_per_point7=my=my+(equal(md,2)*.002*treb);
wave_1_per_point8=my=my-(equal(md,3)*.002*treb);
wave_1_per_point9=
wave_1_per_point10=mx=if(above(mx,.9),.5,mx);
wave_1_per_point11=mx=if(below(mx,.1),.5,mx);
wave_1_per_point12=my=if(above(my,.9),.5,my);
wave_1_per_point13=my=if(below(my,.1),.5,my);
wave_1_per_point14=
wave_1_per_point15=x=mx;
wave_1_per_point16=y=my;
wave_1_per_point17=a=bass*.1;
wave_1_per_point18=
wave_1_per_point19=g=treb*.5;
wavecode_2_enabled=1
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_init1=mx=.5;
wave_2_init2=my=.5;
wave_2_init3=md=2;
wave_2_per_point1=oldmd=md;
wave_2_per_point2=md=(md+int(rand(4)))%4;
wave_2_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_2_per_point4=
wave_2_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_2_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_2_per_point7=my=my+(equal(md,2)*.002*treb);
wave_2_per_point8=my=my-(equal(md,3)*.002*treb);
wave_2_per_point9=
wave_2_per_point10=mx=if(above(mx,.9),.5,mx);
wave_2_per_point11=mx=if(below(mx,.1),.5,mx);
wave_2_per_point12=my=if(above(my,.9),.5,my);
wave_2_per_point13=my=if(below(my,.1),.5,my);
wave_2_per_point14=
wave_2_per_point15=x=mx;
wave_2_per_point16=y=my;
wave_2_per_point17=a=bass*.1;
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
wave_3_init1=mx=.5;
wave_3_init2=my=.4;
wave_3_init3=md=3;
wave_3_per_point1=oldmd=md;
wave_3_per_point2=md=(md+int(rand(4)))%4;
wave_3_per_point3=md=if(equal(md,oldmd),(md+1)%4,md);
wave_3_per_point4=
wave_3_per_point5=mx=mx+(equal(md,0)*.002*bass);
wave_3_per_point6=mx=mx-(equal(md,1)*.002*bass);
wave_3_per_point7=my=my+(equal(md,2)*.002*treb);
wave_3_per_point8=my=my-(equal(md,3)*.002*treb);
wave_3_per_point9=
wave_3_per_point10=mx=if(above(mx,.9),.5,mx);
wave_3_per_point11=mx=if(below(mx,.1),.5,mx);
wave_3_per_point12=my=if(above(my,.9),.5,my);
wave_3_per_point13=my=if(below(my,.1),.5,my);
wave_3_per_point14=
wave_3_per_point15=x=mx;
wave_3_per_point16=y=my;
wave_3_per_point17=a=bass*.1;
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=1.20321
shapecode_0_ang=0.00000
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=1.22019
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.000
shapecode_0_r2=0.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.500
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=0.10000
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=1.00000
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=1.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.100
shapecode_2_enabled=0
shapecode_2_sides=4
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.10000
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=1.00000
shapecode_2_r=1.000
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=1.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.100
shapecode_3_enabled=0
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=1
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.10000
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.00000
shapecode_3_r=1.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=1.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.100
per_frame_1=wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );
per_frame_2=wave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );
per_frame_3=wave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );
per_frame_4=mv_r = wave_r;
per_frame_5=mv_b = wave_b;
per_frame_6=mv_g = wave_g;
per_frame_7=q8 =oldq8+ 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);
per_frame_8=oldq8 = q8;
per_frame_9=bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);
per_frame_10=q5_residual = equal(bass_thresh,2)*0.0064*sin(q8*5) + (1-equal(bass_thresh,2))*q5_residual;
per_frame_11=q6_residual = equal(bass_thresh,2)*0.0048*sin(q8*6) + (1-equal(bass_thresh,2))*q6_residual;
per_frame_12=dx=q5_residual ;
per_frame_13=dy=q6_residual ;
per_frame_14=q1 = 0.03*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);
per_frame_15=monitor = q1;
per_frame_16=mv_a = bass-1.2;
per_pixel_1=zoom = 0.9 + 0.1*q1 + rad*0.1;
per_pixel_2=zoomexp = 2*zoom;
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`    
warp_6=`    // darken (decay) over time
warp_7=`    ret *= 0.50; //or try: ret -= 0.004;
warp_8=`}
comp_1=`#define sat saturate
comp_2=`sampler sampler_image415;
comp_3=`float3 bcol,mcol;
comp_4=`float2 uv0,uv1,uv2,uv3,dz,dzw, dzb;
comp_5=`float bri, shine,radi,mask;
comp_6=`static const float anz=18;
comp_7=`static const float2 lpos =float2 (q10,q11);
comp_8=`static const float3 col1 = frac(q1*float3(.001,.01,0.1))+0.2;
comp_9=`static const float3 col2 = frac(q4*float3(.001,.01,0.1));
comp_10=`static float2 hor = float2(1,0)*texsize.zw;
comp_11=`static float2 ver = float2(0,1)*texsize.zw;
comp_12=`#define GB1 GetBlur1
comp_13=`#define GB2 GetBlur2
comp_14=`#define GB3 GetBlur3
comp_15=`#define GP GetPixel
comp_16=`
comp_17=`float noise2 (float2 uvi)
comp_18=`{float tmp=0; float mul = 1; uvi*= 2; ;
comp_19=`tmp = tex2D(sampler_noise_lq, uvi);
comp_20=`return tmp * 0.05+sat(.1/length(sin(uvi*32*aspect.xy)));}
comp_21=`
comp_22=`float vnoise (float2 uvi)
comp_23=`{float tmp=0; float m=1; uvi*= q5; 
comp_24=`for (int n=0; n <= 2; n++) {tmp += tex3D(sampler_noisevol_lq, float3(uvi*m,time*0.1*m))/m; m *= 2;}
comp_25=`return (tmp-1);}
comp_26=`
comp_27=`shader_body
comp_28=`{
comp_29=`uv0=uv;
comp_30=`mask = saturate (-1+8*(GP(uv0).r));
comp_31=`uv = (uv-0.5)*(1+ 0.014*sin(256*rad-time*22)*pow(rad,5))+0.5;
comp_32=`
comp_33=`dz.x = GB1(uv+hor*4).r-GB1(uv-hor*4).r;
comp_34=`dz.y = GB1(uv+ver*4).r-GB1(uv-ver*4).r;
comp_35=`dz*=1/GB2(uv).r * (mask>0) * 0.3;
comp_36=`
comp_37=`dzw.x = noise2(uv+hor)-noise2(uv-hor);
comp_38=`dzw.y = noise2(uv+ver)-noise2(uv-ver);
comp_39=`
comp_40=`mcol = lerp (lerp (col2,col1,length(dz)*2),(1+col1.zxy)/2,sat(4*GetBlur1(uv).g));
comp_41=`
comp_42=`bcol = (1+sin(float3(ang,ang+1,ang+2)))/2; 
comp_43=`bcol = lerp (bcol,col1,q2);
comp_44=`
comp_45=`dz += 2*dzw * (tex2D(sampler_noise_hq,uv).r>0.8);
comp_46=`dz += 3*dzw* (GB1(uv).g>0.2);
comp_47=`
comp_48=`uv2 = uv+dzw;
comp_49=`ret = 8*GB3(uv2).b*bcol;;
comp_50=`
comp_51=`bri = GetBlur1(uv+-dz*.7).r-0.12;
comp_52=`ret = lerp (ret,.25*bri, mask );;
comp_53=`
comp_54=`ret += 0.08/length(uv-dz*8-lpos) * mcol * mask;
comp_55=`
comp_56=`dzb.x = 2*lum(GB1(uv+hor*2).b)-2*lum(GB1(uv-hor*2).b);
comp_57=`dzb.y = 2*lum(GB1(uv+ver*2).b)-2*lum(GB1(uv-ver*2).b);
comp_58=`
comp_59=`float bmask = sat(GP(uv).b*8);
comp_60=`ret = lerp(ret, (ret+GB1(uv).b)*(2+2/length(uv*0.5+32*dzb*vnoise(uv)))*bcol, bmask);
comp_61=`
comp_62=`uv2 = uv-lpos;
comp_63=`uv3 = (uv-0.5)*0.9+.5+(lpos-0.5)*.2;
comp_64=`float k1=0.17/sqrt(length(uv2+dzw))*(1+0.5*lum(tex2D(sampler_image415,uv)))*!mask;
comp_65=`ret +=  k1* sat(1-2*GB2(uv3).r*!mask)*q15*(1-rad)*col1; //lamp
comp_66=`
comp_67=`ret +=  GB3(uv-dz).b*16*mask*bcol; //blue mirr
comp_68=`
comp_69=`shine = 0; radi = 0.95;
comp_70=`for (int n=1; n <= anz; n++)
comp_71=`{ shine += 1/anz*GetBlur2((uv0-.5)*radi+.5).b;
comp_72=`  radi -= 0.95/anz;}
comp_73=`ret += 24*shine*min(1,2*rad) *clamp(0.5+sin(ang-q9),0,2)* bcol;
comp_74=`
comp_75=`ret=1-exp(-1.8*ret);
comp_76=`}
comp_77=`//martin
