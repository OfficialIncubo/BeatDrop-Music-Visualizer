MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=3
PSVERSION_COMP=3
[preset00]
fRating=5.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=2
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.007
fWaveScale=0.022
fWaveSmoothing=0.900
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.00909
sx=0.99990
sy=1.00000
wave_r=0.000
wave_g=0.000
wave_b=0.000
wave_x=0.500
wave_y=0.690
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=1.000
mv_b=1.000
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=0.990
b2x=0.150
b3x=1.000
b1ed=0.000
wavecode_0_enabled=1
wavecode_0_samples=102
wavecode_0_sep=10
wavecode_0_bSpectrum=0
wavecode_0_bUseDots=1
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=11.20204
wavecode_0_smoothing=0.03000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.600
wavecode_0_a=0.000
wave_0_per_frame1=t1=500;t2=500; t5=0;
wave_0_per_point1=v=value1+value2;
wave_0_per_point2=if (value1>gmegabuf(t1),gmegabuf(t1)=value1,0);
wave_0_per_point3=if (value2>gmegabuf(t2),gmegabuf(t2)=value2,0);
wave_0_per_point4=
wave_0_per_point5=gmegabuf(t1)*= 1-4/fps;
wave_0_per_point6=gmegabuf(t2)*= 1-4/fps;
wave_0_per_point7=
wave_0_per_point8=t5+=v*v;
wave_0_per_point9=reg19 = sqrt(t5);;
wave_0_per_point10=
wave_0_per_point11=
wave_0_per_point12=t1 += 1;
wave_0_per_point13=t2 -= 1;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=1
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=1
wavecode_1_scaling=0.88027
wavecode_1_smoothing=0.00000
wavecode_1_r=0.000
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=0.000
wave_1_per_frame1=t1=0;
wavecode_2_enabled=1
wavecode_2_samples=500
wavecode_2_sep=0
wavecode_2_bSpectrum=1
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=1
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=0.800
wavecode_2_b=0.000
wavecode_2_a=1.000
wave_2_per_frame1=t1=0;
wave_2_per_point1=instance = 2*t1+1;
wave_2_per_point2=zo=q31;
wave_2_per_point3=bs=1000+instance*reg02;
wave_2_per_point4=if (gmegabuf(bs+6)==1,
wave_2_per_point5=  u=gmegabuf(bs);  v=gmegabuf(bs+1);  h=gmegabuf(bs+2);
wave_2_per_point6=  age=gmegabuf(bs+7);
wave_2_per_point7=  size=gmegabuf(bs+8);
wave_2_per_point8=
wave_2_per_point9=  nen = h*(q22*q23-q20*q25) +q30*q26 - q26*v -q29*q28 +u*q28;
wave_2_per_point10=  x = (h*(q25*q26-q23*q28) - q29*q22 + u*q22 + q30*q20 -v*q20) / nen * zo +.5;
wave_2_per_point11=  y = (h*(q22*q26-q20*q28) + q29*q25 - u*q25 - q30*q23 +v*q23) / nen * zo +.5;
wave_2_per_point12=  
wave_2_per_point13=  t2=t2*.75+rand(1)*.5;
wave_2_per_point14=  a = max(0,min(1,2*sqrt(h+1))) *(nen<0) * (size>t2);
wave_2_per_point15=  x=(x-0.5)*0.92+0.5; //linker Rand
wave_2_per_point16=  if ((x<0)||(x>1)||(y<0)||(y>1), gmegabuf(bs+7)+=1/fps,0);
wave_2_per_point17=
wave_2_per_point18=,a=0);
wave_2_per_point19=
wave_2_per_point20=t1 += 1;
wave_2_per_point21=
wavecode_3_enabled=1
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=1
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.000
wavecode_3_g=0.800
wavecode_3_b=0.000
wavecode_3_a=1.000
wave_3_per_frame1=t1=0;
wave_3_per_point1=instance = 2*t1+501;
wave_3_per_point2=zo=q31;
wave_3_per_point3=bs=1000+instance*reg02;
wave_3_per_point4=if (gmegabuf(bs+6)==1,
wave_3_per_point5=  u=gmegabuf(bs);
wave_3_per_point6=  v=gmegabuf(bs+1);
wave_3_per_point7=  h=gmegabuf(bs+2);
wave_3_per_point8=  age=gmegabuf(bs+7);
wave_3_per_point9=  size=gmegabuf(bs+8);
wave_3_per_point10=
wave_3_per_point11=  nen = h*(q22*q23-q20*q25) +q30*q26 - q26*v -q29*q28 +u*q28;
wave_3_per_point12=  x = (h*(q25*q26-q23*q28) - q29*q22 + u*q22 + q30*q20 -v*q20) / nen * zo +.5;
wave_3_per_point13=  y = (h*(q22*q26-q20*q28) + q29*q25 - u*q25 - q30*q23 +v*q23) / nen * zo +.5;
wave_3_per_point14=
wave_3_per_point15=  a = max(0,min(1,2*sqrt(h+1))) *(nen<0);
wave_3_per_point16=  x=(x-0.5)*0.92+0.5; //linker Rand
wave_3_per_point17=  if ((x<0)||(x>1)||(y<0)||(y>1), gmegabuf(bs+7)+=1/fps,0);
wave_3_per_point18=
wave_3_per_point19=,a=0);
wave_3_per_point20=
wave_3_per_point21=t1 += 1;
shapecode_0_enabled=1
shapecode_0_sides=10
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=0
shapecode_0_num_inst=32
shapecode_0_x=0.690
shapecode_0_y=0.420
shapecode_0_rad=0.03948
shapecode_0_ang=0.00000
shapecode_0_tex_ang=4.71239
shapecode_0_tex_zoom=0.24146
shapecode_0_r=1.000
shapecode_0_g=0.000
shapecode_0_b=0.000
shapecode_0_a=0.900
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=i=int(instance/2)%16;
shape_0_per_frame2=k=2*i;
shape_0_per_frame3=
shape_0_per_frame4=x=gmegabuf(k); y= gmegabuf(k+1);
shape_0_per_frame5=if (instance%2==0, additive=1; a=0.5; b2=0; b=0; r=0.5; r2=0;,
shape_0_per_frame6=                 additive=1; rad*=0.6; r=0.5;r2=0;a=1);
shape_0_per_frame7=
shape_0_per_frame8=
shapecode_1_enabled=1
shapecode_1_sides=6
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=32
shapecode_1_x=0.280
shapecode_1_y=0.110
shapecode_1_rad=0.24146
shapecode_1_ang=0.00000
shapecode_1_tex_ang=5.02655
shapecode_1_tex_zoom=1.92800
shapecode_1_r=0.040
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.500
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=1.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shape_1_init1=t1 = rand(2)+0.8;
shape_1_per_frame1=if (instance<12,
shape_1_per_frame2=  x0 = 0.5; y0 = 0.13;
shape_1_per_frame3=  x = x0+0.05*sin(instance*542*t1);
shape_1_per_frame4=  y = y0+0.05*sin(instance*332);
shape_1_per_frame5=
shape_1_per_frame6=  rad = 0.14*abs(sin(instance*733));
shape_1_per_frame7=  r = 0.02/rad;
shape_1_per_frame8=  tex_zoom = t1;
shape_1_per_frame9=,
shape_1_per_frame10= if (instance < 16, //kopf
shape_1_per_frame11= k=(instance-12)/num_inst;
shape_1_per_frame12= k1=0.1+k*0.4;
shape_1_per_frame13=//border_a=1;
shape_1_per_frame14= additive=0; 
shape_1_per_frame15= x=k1;y=0.55; a=0.8;a2=.1; rad=.14;b=1;b2=0.5;r=0;
shape_1_per_frame16= ,
shape_1_per_frame17=  if (instance <32, //wirbel
shape_1_per_frame18=  additive=1;
shape_1_per_frame19=  k=(instance-20)/num_inst;
shape_1_per_frame20=  k1=0.18+k*0.3;
shape_1_per_frame21=  additive=0; sides=8;
shape_1_per_frame22=  //border_a=1;
shape_1_per_frame23=  x=k1;y=0.55; a=0.3;a2=0.3; rad=0.03;b=1;b2=.3;r=0;
shape_1_per_frame24=
shape_1_per_frame25=,
shape_1_per_frame26=  additive=1;
shape_1_per_frame27=  k=(instance-32)/num_inst;
shape_1_per_frame28=  additive=0; sides=8;
shape_1_per_frame29=//  border_a=1;
shape_1_per_frame30=  x=0.18;y=0.53; a=0.3;a2=0.3; rad=0.06;b=0.5;b2=0;r=0;
shape_1_per_frame31=
shape_1_per_frame32=
shape_1_per_frame33=0)));
shapecode_2_enabled=1
shapecode_2_sides=5
shapecode_2_additive=1
shapecode_2_thickOutline=0
shapecode_2_textured=0
shapecode_2_num_inst=1000
shapecode_2_x=0.730
shapecode_2_y=0.300
shapecode_2_rad=0.11559
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=4.02657
shapecode_2_r=0.000
shapecode_2_g=1.000
shapecode_2_b=0.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.500
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.000
shapecode_2_border_g=1.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=zo=q31;
shape_2_per_frame2=bs=1000+2*instance*reg02;
shape_2_per_frame3=if (gmegabuf(bs+6)==1,
shape_2_per_frame4=  u=gmegabuf(bs);
shape_2_per_frame5=  v=gmegabuf(bs+1);
shape_2_per_frame6=  h=gmegabuf(bs+2);
shape_2_per_frame7=  age=gmegabuf(bs+7);
shape_2_per_frame8=  size=gmegabuf(bs+8);
shape_2_per_frame9=
shape_2_per_frame10=  nen = h*(q22*q23-q20*q25) +q30*q26 - q26*v -q29*q28 +u*q28;
shape_2_per_frame11=  x = (h*(q25*q26-q23*q28) - q29*q22 + u*q22 + q30*q20 -v*q20) / nen * zo * reg33+.5;
shape_2_per_frame12=  y = (h*(q22*q26-q20*q28) + q29*q25 - u*q25 - q30*q23 +v*q23) / nen * zo * reg32+.5;
shape_2_per_frame13=
shape_2_per_frame14=  rad = 0.003/abs(nen) * (nen<0) * sqrt(1-age/reg03) * size*reg32*zo;
shape_2_per_frame15=  rad *= 1+min(2,0.1/max(age,0.01));
shape_2_per_frame16=  x=(x-0.5)*0.92+0.5; //linker Rand
shape_2_per_frame17=  a = max(0,min(1,sqrt(h+1))) * (x>0.01+rad);
shape_2_per_frame18=  if ((x<0)||(x>1)||(y<0)||(y>1), gmegabuf(bs+7)+=1/fps,0);
shape_2_per_frame19=,a=0; rad=0);
shapecode_3_enabled=1
shapecode_3_sides=4
shapecode_3_additive=1
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=50
shapecode_3_x=0.200
shapecode_3_y=0.130
shapecode_3_rad=0.02007
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=4.06728
shapecode_3_r=0.000
shapecode_3_g=1.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.000
shapecode_3_border_g=0.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=if (instance <= 50,
shape_3_per_frame2= rad = 1.4/num_inst;
shape_3_per_frame3= x = rad/2;
shape_3_per_frame4= chan = (instance%2)*2-1;
shape_3_per_frame5= y = 0.5+(instance+0.5)/num_inst/2*chan; 
shape_3_per_frame6= g = max(0,(gmegabuf(500+instance*chan)/reg20));
shape_3_per_frame7= g = 1-exp(-g*8);
shape_3_per_frame8= g2 = g;
shape_3_per_frame9= if(g<0,rad=1,0);
shape_3_per_frame10= a = a2 = 1;
shape_3_per_frame11=
shape_3_per_frame12=,rad=0);
per_frame_init_1=n = 0; loop (15000,megabuf(n) =0;gmegabuf(n) = 0; n+=1;);
per_frame_init_2=minbpm=100; maxbpm=240; num_res=100;
per_frame_init_3=
per_frame_init_4=//0..2: x,y,z
per_frame_init_5=//3..5: vx vy vz
per_frame_init_6=//6: live
per_frame_init_7=//7: age
per_frame_init_8=//8: size
per_frame_init_9=//9:
per_frame_init_10=
per_frame_init_11=shapes = 2048; reg01 = shapes;
per_frame_init_12=recsize = 12;  reg02 = recsize;
per_frame_init_13=maxage = 4; reg03 = maxage;
per_frame_init_14=fu1=1; fu2=2; rscale=26; crint=0; 
per_frame_init_15=BPM_=150; start=1; m=0; prog=0;
per_frame_1=dt=1/fps; dec_f = 1-8*dt; dec_m = 1-3*dt; dec_s = 1-dt;;
per_frame_2=
per_frame_3=vol=(bass_att+mid_att+treb_att)/3;
per_frame_4=maxind = 0; qavg = 0.1; i=0;
per_frame_5=vol_=vol_*dec_m + (1-dec_m)*vol;
per_frame_6=run = if(vol_>0.7-run*0.3,1,0);
per_frame_7=run_=run_*dec_m+(1-dec_m)*(run*0.9+0.1);
per_frame_8=
per_frame_9=Excite = (vol-vol_);
per_frame_10=loop (num_res,
per_frame_11=  n = i*8;
per_frame_12=  Freq  = (i/(num_res-1)+minbpm/(maxbpm-minbpm))*(maxbpm-minbpm)/60;
per_frame_13=  Feder = sqr(Freq*6.2832);
per_frame_14=  megabuf (n+4) = megabuf(n+1); megabuf (n+1) *= 1-0.26*dt;
per_frame_15=  ECS = int (16*Freq*dt)+1;
per_frame_16=  loop (ECS,
per_frame_17=    Kraft = Excite - Feder*megabuf(n+2) ;
per_frame_18=    megabuf (n+1) += Kraft        * dt/ECS;
per_frame_19=    megabuf (n+2) += megabuf(n+1) * dt/ECS;  );
per_frame_20=  beatcos = megabuf(n+1);  beatsin = megabuf(n+2)*Freq*6.2832;
per_frame_21=  quad = sqrt (pow(beatsin,2) + pow(beatcos,2));
per_frame_22=  megabuf (n+3) = megabuf(n+3) *dec_m +  quad* (1-dec_m);
per_frame_23=  if (megabuf(n+3) > megabuf (maxind*8+3), maxind =i,0);
per_frame_24=  qavg = qavg+pow (megabuf(n+3),2);
per_frame_25=  i += 1;);
per_frame_26=qavg = sqrt (qavg/num_res);
per_frame_27=qdev = 0; i =0; loop (num_res, qdev += pow(megabuf(i+3)-qavg,2); i += 8; );
per_frame_28=qdev = sqrt (qdev/num_res);
per_frame_29=BPM =   (maxind/(num_res-1)+minbpm/(maxbpm-minbpm))*(maxbpm-minbpm);
per_frame_30=if (BPM > 200, BPM *= 0.5, 0);
per_frame_31=BPM_=BPM_*dec_m+(1-dec_m)*BPM;
per_frame_32=m1 = maxind*8;
per_frame_33=certain = certain * dec_m + (1-dec_m) * megabuf(m1+3)/qavg;
per_frame_34=trel1 += BPM/60*dt*3.14;
per_frame_35=trel2 += certain*dt;
per_frame_36=
per_frame_37=trv += BPM/60*dt*2;
per_frame_38=sgl_beat = !(int(trv) == trvo); trvo=int(trv);
per_frame_39=bcount = (bcount+sgl_beat)%16;
per_frame_40=
per_frame_41=//#### vol cal ##############
per_frame_42=dec = if(reg19>reg20,dec_m,dec_s);
per_frame_43=reg20= reg20*dec + (1-dec)*reg19;
per_frame_44=reg20 = min(10,max(.001,reg20));
per_frame_45=
per_frame_46=//##### PARTICLES ###########
per_frame_47=//volc Pos
per_frame_48=n=0;
per_frame_49=loop (16, arg=n*6.28/16;h2=5.5;
per_frame_50= gmegabuf(2*n  )=0.5+h2/rscale*cos(arg);
per_frame_51= gmegabuf(2*n+1)=0.5+h2/rscale*sin(arg); 
per_frame_52=n+=1);
per_frame_53=
per_frame_54=nn+=vol*6*dt;
per_frame_55=if (sgl_beat && (rand(1)>0.95),seg=pow(2,1+int(rand(5)));d=rand(1)>0.5,0);
per_frame_56=dir = if (d,1,(frame%2)*2-1);
per_frame_57=
per_frame_58=ni=(16+ dir*(nn%seg)*16/seg)%16;
per_frame_59=n=0; x0=gmegabuf(2*ni); y0=1-gmegabuf(2*ni+1); z0=-1.01;
per_frame_60=nums=0;
per_frame_61=loop (shapes,
per_frame_62=  bs = 1000+n*recsize;
per_frame_63=  bs1= 1000+fu1*recsize;
per_frame_64=  bs2= 1000+fu2*recsize;
per_frame_65=  cbeam=(seg<=4)*(sin(trel1/2)<0);
per_frame_66=//cbeam=1;
per_frame_67=  isdot = n%2;
per_frame_68=  live = gmegabuf(bs+6);
per_frame_69=  if (live,
per_frame_70=    nums+=1;
per_frame_71=    gmegabuf(bs) += gmegabuf(bs+3)*dt;
per_frame_72=    gmegabuf(bs+1) += gmegabuf(bs+4)*dt;
per_frame_73=    gmegabuf(bs+2) += gmegabuf(bs+5)*dt* (0.3+min(0.7,2*age));
per_frame_74=    vz = gmegabuf(bs+5); 
per_frame_75=    vz = vz*(1-5*abs(vz)/gmegabuf(bs+8)*dt) - dt*0.4;
per_frame_76=    gmegabuf(bs+5) = vz;
per_frame_77=    gmegabuf(bs+7) +=dt*(20+n%10)/25;
per_frame_78=    z = gmegabuf(bs+2);
per_frame_79=    age=gmegabuf(bs+7);
per_frame_80=    if ((z> 1) || (z<z0) || (age>maxage*(1+isdot)),
per_frame_81=      gmegabuf(bs+6)=0;
per_frame_82=   ,0);
per_frame_83=  ,
per_frame_84=    logdist=1-(rand(1)-0.2)*sqrt(rand(1));
per_frame_85=    v0= max(0,min(sqrt(max(0,vol-1))/2,2)*sqrt(4*certain))*logdist*1;
per_frame_86=    if((v0>0.1) && (vol>nums/shapes*4),
per_frame_87=      r1=rand(12); r2=rand(1)*.06*sqrt(v0);
per_frame_88=      gmegabuf(bs)   = if (cbeam,0.5,x0)+cos(r1)*r2/8;
per_frame_89=      gmegabuf(bs+1) = if (cbeam,0.5,y0)+sin(r1)*r2/8;
per_frame_90=      gmegabuf(bs+2) = z0;
per_frame_91=      gmegabuf(bs+3) = cos(r1)*r2;
per_frame_92=      gmegabuf(bs+4) = sin(r1)*r2;
per_frame_93=      gmegabuf(bs+5) = v0;
per_frame_94=      gmegabuf(bs+6) =1;
per_frame_95=      gmegabuf(bs+7) =0;
per_frame_96=      gmegabuf(bs+8) =if (isdot,0.5+rand(1),(2+rand(2))*min(1,2*v0));
per_frame_97=      if ((v0>1) && (v0<2) && (fe1<=0), fe1=1; fu1=n, 0;);
per_frame_98=  ,0)); n+=1);
per_frame_99=
per_frame_100=//#############################
per_frame_101=//Kamera blickt nach z. Boden bei y=-1. x geht nach rechts.
per_frame_102=//Die Winkel ax, ay, az rotieren die Welt um ihre Original-Achsen
per_frame_103=
per_frame_104=t1a+=BPM/60*3.14*dt;
per_frame_105=ax = -1.2+.23*cos(t1a/12);  az = .2*cos(t1a/17);    
per_frame_106=axr=ax+1.2;
per_frame_107=
per_frame_108=if ((cr<20)||!run, mode=0, if (cr>40, mode=1,0));
per_frame_109=tm1=min(20,max(-20,tm1+(mode-0.5)*dt*3));
per_frame_110=cr += (2*certain-tm1+(vol_-1)*10)*dt*0.3;
per_frame_111=mode *= run_;
per_frame_112=m+=min(.1,max(-.1,mode-m))*dt*15;
per_frame_113=//m=0;
per_frame_114=
per_frame_115=div0=(cos(t1a/8)+1.1)*(cos(t1a/12)+1.1);
per_frame_116=idiv0=.1/div0;
per_frame_117=
per_frame_118=div1=cos(t1a/8+0.5)*cos(t1a/4);
per_frame_119=dtrig1 = div1*divo<0; divo=div1;
per_frame_120=fac = sqrt(150/BPM_)*0.3;
per_frame_121=if(abs(div1)>0.000001,idiv1=fac/div1,0); k=.02;idiv1 = atan(idiv1*k)/k;
per_frame_122=
per_frame_123=nsk=int(nsk+dtrig1)%4+0.5; 
per_frame_124=sfoc = sqrt(abs(atan(idiv1*.5))/1.56);  
per_frame_125=sw=min(1,max(-1,4*cos(time*.03)))/2+0.5;
per_frame_126=sfoc=sfoc*sw+(1-sw)*(1-sfoc);
per_frame_127=day=(m*idiv1 + (1-m)*idiv0);
per_frame_128=
per_frame_129=atr = if ((day>=0)&&dtrig1,1,0);
per_frame_130=if (atr, doabs=if(rand(1)>0.7,1,0),0);
per_frame_131=ay = ay+min(1,max(-1,8*sin(t1a*0.04)))*if(doabs,abs(day),day)*dt; 
per_frame_132=
per_frame_133=zo = 1 +axr*.2 + abs(day*.01*certain);
per_frame_134=ddx = m*cos(nsk*1.56)*0.28*sfoc + (1-m)*sin(t1a/24)*0.1; 
per_frame_135=ddy = m*sin(nsk*1.56)*0.28*sfoc + (1-m)*sin(t1a/16)*0.1;
per_frame_136=ofx = (0.5-ddx);
per_frame_137=ofy = (0.5+ddy);
per_frame_138=
per_frame_139=c1 = cos(ax); c2 = cos(ay); c3 = cos(az);
per_frame_140=s1 = sin(ax); s2 = sin(ay); s3 = sin(az);
per_frame_141=q20 = c2*c3;            q21 = c2*s3;            q22 = -s2;
per_frame_142=q23 = s1*s2*c3 - c1*s3; q24 = s1*s2*s3 + c1*c3; q25 = s1*c2;
per_frame_143=q26 = c1*s2*c3 + s1*s3; q27 = c1*s2*s3 - s1*c3; q28 = c1*c2;
per_frame_144=
per_frame_145=//scene pos
per_frame_146=q29 = ofx+tan(ax+1.56)*cos(ay); q30 = ofy-tan(ax+1.56)*sin(ay)+tan(az);
per_frame_147=q29+=0.1*cos(time*.23);
per_frame_148=reg32 = aspecty;
per_frame_149=reg33 = aspectx;
per_frame_150=
per_frame_151=//Strg Ring
per_frame_152=q5 = (trel1/4);
per_frame_153=q6 = sin(trel1/4)* 2*int(r2*8) + q5;
per_frame_154=
per_frame_155=//Berechnung Funken fu1, fu2
per_frame_156=n=0;
per_frame_157=loop (2,
per_frame_158=  bs= fu1*recsize+1000;
per_frame_159=  h=gmegabuf(bs+2); u=gmegabuf(bs); v=gmegabuf(bs+1);;
per_frame_160=
per_frame_161=  if (n==0,fe1-=dt*2,0); 
per_frame_162=  if (n>0, h=-2-h;,0 );
per_frame_163=  nen = h*(q22*q23-q20*q25) +q30*q26 - q26*v -q29*q28 +u*q28;
per_frame_164=  x = (h*(q25*q26-q23*q28) - q29*q22 + u*q22 + q30*q20 -v*q20) / nen * zo +.5;
per_frame_165=  y = (h*(q22*q26-q20*q28) + q29*q25 - u*q25 - q30*q23 +v*q23) / nen * zo +.5;
per_frame_166=  bri = treb_att*max(0,fe1)*0.003*certain/2;
per_frame_167=  if (n==0,q9=x;q10=1-y;q11=bri*4;, q13=x;q14=1-y;q15=bri*max(0,-h)*4;);
per_frame_168=;n+=1);
per_frame_169=
per_frame_170=q16=trel1;
per_frame_171=cslow = cslow*dec_s + (1-dec_s)*(certain+0.1);
per_frame_172=q17=cslow;
per_frame_173=q31=zo;
per_frame_174=start=0;
per_frame_175=
per_frame_176=//"seltene vol-peaks"
per_frame_177=v2_=v2_*dec_m + (1-dec_m)*vol*kv;
per_frame_178=bt = vol>v2_;
per_frame_179=kv = kv*dec_m + (1-dec_m)*bt*18;
per_frame_180=
per_frame_181=si = sin(trel1*2);
per_frame_182=trig = si*osin<0; osin=si;
per_frame_183=trig=bt;
per_frame_184=q1=rscale;q2=ddx*-0.4;q3=ddy*0.4;
per_frame_185=
per_frame_186=tt = if(trig>tt,trig,tt*0.5);
per_frame_187=q7=tt+max(0,min(2,sfoc*2*(zo-1.2)))+0.2;
per_frame_188=reg90=dec_s*reg90+(1-dec_s)*progress;
per_frame_189=q8=pow(reg90,4);
per_frame_190=
per_frame_191=//diag
per_frame_192=monitor = certain;
per_frame_193=monitor = int(cr)*1000+certain;
per_frame_194=tbers+= (cr<1);
per_frame_195=ttot +=1;
per_frame_196=///monitor = tbers/ttot;
per_frame_197=
per_frame_198=monitor=axr;
warp_1=`#define sat saturate
warp_2=`#define snm sampler_noise_mq
warp_3=`#define rp rand_preset
warp_4=`#define GP GetPixel
warp_5=`static const float lf=q17, prog=q8;
warp_6=`static const float2 hor = float2 (1,0)*texsize.zw;
warp_7=`static const float2 ver = float2 (0,1)*texsize.zw;
warp_8=`float2 dz,db,uv1,uv2,mskull;
warp_9=`float ring, tmp, k1;
warp_10=`
warp_11=`float3 noi (float2 uvi, float t) {float q, r=.1; t+= rp+time*0.0004;
warp_12=`  for (float i=0; i<6; i++) {q=pow(2,i); r+=tex2D(snm, uvi*q+t)/q;} return r;}
warp_13=`
warp_14=`float2 skull (float2 uvi)
warp_15=`{ float tmp=0; float br=uvi.x*uvi.y<0;
warp_16=`uvi=mul(uvi,float2x2(0.7,0.7,-0.7,0.7));
warp_17=`uvi = lerp (uvi,uvi.yx,(abs(uvi.y)<abs(uvi.x)));
warp_18=`float2 uvo=uvi;
warp_19=`uvi.y=.35-abs(uvi.y);
warp_20=`  uvi=float2(6*pow(uvi.x,1.6),uvi.y)*3.5;
warp_21=`  float2 r= pow(uvi-0.055-uvi.x*.2,1.4);
warp_22=`  float e = length(2*r)-0.055;
warp_23=`  float eyes= sat(1-256*pow(e,2));
warp_24=`  eyes *= sat( 1-uvi.x*1.8);
warp_25=`  float nose = sat(length ((uvi-float2(0,0.15))*float2(12/uvi.y,15)));
warp_26=`  float mouth = sat(1-6*length(uvi.x))*(1-0.2*tex2D(snm,uvo.x*4)*sat(16*uvi.y-3.9));
warp_27=`  eyes = max(eyes,mouth*(uvi.y>0.15)*sat(8-uvi.y*23))*nose;
warp_28=`  tmp = max(eyes,(1.05-3.2*length(uvi))*(uvi.y<uvi.x*.2-0.02))*0.9;
warp_29=`  return float2(.001/length(r)*br,tmp)*(1-prog);
warp_30=`}
warp_31=`
warp_32=`shader_body {
warp_33=`float3 h = GP(uv+hor) - GP(uv-hor);
warp_34=`float3 v = GP(uv+ver) - GP(uv-ver);
warp_35=`dz = float2(h.r,v.r);
warp_36=`db = float2(h.b,v.b);
warp_37=`
warp_38=`uv1 = (uv-0.5);
warp_39=`float l = length(uv1*q1);
warp_40=`ring = ceil(l);
warp_41=`uv1 += (noi(uv/2,0)-1)*prog*0.2;
warp_42=`mskull=skull(uv1);
warp_43=`ret.b = 0.7+(noi(uv1/5,0).r*.5-0.3-0.09*l);
warp_44=`ret.b = sat(max(ret.b,mskull.y*0.9)) ;
warp_45=`
warp_46=`float2 noise = tex2D(sampler_noise_lq,uv*4+rand_frame)-0.5;
warp_47=`uv2= uv*0+0.1*noi(uv/4,0);
warp_48=`ret.r = abs(noi(uv2/2+noise*texsize.zw*4*lf,0)-1)*(2-rad) ;
warp_49=`ret.r *= sat(tex2D(sampler_noise_hq,uv/2+time*0.0034))*2*(1.3-rad);
warp_50=`
warp_51=`ret.r = lerp (ret.r, GetPixel(uv-dz*texsize.zw*4).r,0.95);
warp_52=`
warp_53=`float dit = sat(0.004/length (rp.y*.5+0.3-uv.y-0.14*noi(uv/8,0)))*0.25*(ring>4);
warp_54=`ret.r += dit;
warp_55=`ret.b-=dit*0.25;
warp_56=`
warp_57=`ret.r += rp.x*(sat (3.3*noi(0.5*ang+uv2+db*rp.z,0)-4))*sat(1-1.6*ret.b)*(ret.b+0.1);
warp_58=`
warp_59=`ret.r *= sat(1-GetBlur1(uv).b*0.5) * sat(rad*1.5);
warp_60=`ret.r += exp(-8*l/q17*(1-prog));
warp_61=`ret.r+=mskull.x*2*sat(mid_att-0.5);
warp_62=`
warp_63=`float2 nn=tex2D(sampler_noise_lq,uv*8+rand_frame)-0.5;
warp_64=`ret.g = max(ret.g,GetPixel(uv+nn*0.01).g*0.4);
warp_65=`
warp_66=`ret.r += (0.01/abs(noi(uv*.2,rand_frame/8+time/8)-0.5))*mskull.y*sin(q16/2-ang)*mid_att*sat(q17-3.5);
warp_67=`ret.b-=.03*ret.r;
warp_68=`ret.rb *= sat (2-rad*1.3);
warp_69=`ret-=0.004;
warp_70=`
warp_71=`}
comp_1=`#define sat saturate
comp_2=`#define GP GetPixel
comp_3=`#define GB1 GetBlur1
comp_4=`#define rp rand_preset
comp_5=`sampler sampler_lichen;
comp_6=`static const float quality = 8, depth=.12/quality, k1=48;
comp_7=`float3 li, licol, screen3;
comp_8=`float2 dz, uv0, uv1, uv2, uv4, rsl, rsl0, rsl2;
comp_9=`float  r,lprof,noise,gmask,tmp,pa,prad,l,h1,ring;
comp_10=`static float lav_gnd = -1;
comp_11=`
comp_12=`float3 lavcol (float t){t=sat(t*1-0.05); return 2*float3(t*1,pow(t,2),pow(t,8));}
comp_13=`//float3 lavcol (float t) {return sat(t-float3 (0.07,0.3,0.7))*float3(2,2,2);}
comp_14=`
comp_15=`static const float3 mov = float3(q29,q30,0);
comp_16=`static const float3 t   = float3(q20,q23,q26);
comp_17=`static const float3 s   = float3(q22,q25,q28);
comp_18=`static const float3 ts  = cross(t,s);
comp_19=`static const float myzoom=q31;
comp_20=`
comp_21=`static const float2 hor = float2 (1,0)*texsize.zw;
comp_22=`static const float2 ver = float2 (0,1)*texsize.zw;
comp_23=`
comp_24=`float atan3 (float x,float y)
comp_25=`{float r, a; if (abs(x)>abs(y))
comp_26=`{a=y/x; r=0.973*a-0.191*a*a*a;return (x>0?r:r+M_PI);} else
comp_27=`{a=x/y; r=M_PI/2-0.973*a+0.191*a*a*a;return (y>0?r:r+M_PI);}}
comp_28=`
comp_29=`float2 project (float d)  {float z;
comp_30=`  z = d/mul(ts,screen3); if(z>3) {z=0;}
comp_31=`  return (mul(float2x3(t,s),cross(ts,screen3))*z+mov);}
comp_32=`
comp_33=`float3 get (float2 uvi, float r) {return lerp (GetPixel(uvi), GetBlur1(uvi),r);}
comp_34=`
comp_35=`shader_body {
comp_36=`screen3 = float3 ((uv-0.5)*aspect.xy,myzoom);
comp_37=`rsl0 = project (lav_gnd); float3 struc;
comp_38=`  for (int m=1; m <= quality; m++) {
comp_39=`    rsl = frac(project (lav_gnd));
comp_40=`    r= sat(length (rsl-0.5));
comp_41=`    struc = get(rsl,r*1.5);
comp_42=`    lprof = sat (1-lerp (struc.b, 0.75, sat(5.5-r*q1)))+0*(struc.r-0.5)/4;
comp_43=`    lav_gnd -= saturate(4*(lprof-m/quality))*depth * (1-r);  }
comp_44=`rsl = project(lav_gnd);
comp_45=`dz.x = dot(GP(rsl+hor)-GP(rsl-hor),float3(-0.2,0,1));
comp_46=`dz.y = dot(GP(rsl+ver)-GP(rsl-ver),float3(-0.2,0,1));
comp_47=`
comp_48=`l = length(rsl-0.5)*q1;
comp_49=`ring = ceil(l);
comp_50=`dz *= ring>4;
comp_51=`h1=frac(l);
comp_52=`float rill = (ring<6) * sat (-10+24*abs(frac(l)-0.5));
comp_53=`dz += rill*.15;
comp_54=`
comp_55=`// spectrum calc
comp_56=`uv2=rsl-0.5;
comp_57=`float ang1 = atan3(uv2.x,uv2.y)*1.5;
comp_58=`float n=int(k1*ang1/M_PI);
comp_59=`float amp = GB1(float2(0.015,n/k1)).g*(n>0)*(n<k1);
comp_60=`
comp_61=`//licht
comp_62=`tmp=q5*(5-ring);
comp_63=`uv4 = rsl.xy+dz+ dot((rsl-0.5),float2(sin(tmp+q6),cos(tmp)))-0.5;
comp_64=`licol = (0.2+roam_sin)/2;
comp_65=`li = 0.75*exp(-32*abs(uv4.x))*(GP(rsl).r<0.1)*licol;;
comp_66=`
comp_67=`ret = GP(rsl).b*q7*sat(1-2*length(rsl-0.5-dz*8-float2(q2,q3))) * tex2D(sampler_lichen,rsl*4);
comp_68=`ret-=rill*.25;
comp_69=`
comp_70=`ret -= 8*sat(-dz.x);
comp_71=`ret = sat (ret);
comp_72=`ret += li*(ring<6)*(ring>1)*sat(5-l);
comp_73=`ret += lavcol(GP(rsl).r);
comp_74=`
comp_75=`// spectrum draw
comp_76=`float dmask = sat(sin(2*ang1*k1)+0.5);
comp_77=`ret *= !(dmask * (l<3.8)*(l>3.2)*(n>0)*(n<k1));
comp_78=`ret += dmask * (l<3.8)*(l>(4-amp*0.8)) *float3(0.3,0.6,2);
comp_79=`ret = sat(ret);
comp_80=`
comp_81=`//Particles
comp_82=`uv2=(uv-0.5)*float2(0.92,1)+0.5; //linker Rand;
comp_83=`pa = GetPixel(uv2).g;
comp_84=`ret*=sat(1-(pa>0.3));
comp_85=`pa = max(pa, min(0.5,2*GetBlur2(uv2).g));
comp_86=`ret += lavcol(pa*1.5) ;
comp_87=`
comp_88=`//####Funken
comp_89=`uv1 = (screen3.xy+0.5-float2(q9,q10));
comp_90=`ret += 1/length(uv1)*q11*licol;
comp_91=`uv1 = (screen3.xy+0.5+8*GP(rsl).b*dz-float2(q13,q14));
comp_92=`ret += 1/length(uv1)*q15*licol;
comp_93=`
comp_94=`uv4=rsl0-0.5; //backrotation zu aufwendig
comp_95=`uv2=uv4; uv4.x+=uv2.y; uv4.y-=uv2.x;
comp_96=`float r = sat(-0.2-0.75*rp.x-(uv4.x)/2+lprof/2);
comp_97=`ret = lerp (ret,  float3 (.3+r,0.5,1),r);
comp_98=`ret = 1-exp(-ret*1.6);
comp_99=`
comp_100=`
comp_101=`}
comp_102=`martin
comp_103=`END
