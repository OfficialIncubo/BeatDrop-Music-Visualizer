MILKDROP_PRESET_VERSION=201
PSVERSION=4
PSVERSION_WARP=4
PSVERSION_COMP=2
[preset00]
fRating=5.000000
fGammaAdj=1.900
fDecay=0.980
fVideoEchoZoom=2.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=0
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=0
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.001
fWaveScale=5.830
fWaveSmoothing=0.500
fWaveParam=0.000
fModWaveAlphaStart=0.500
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000
fWarpScale=2.853
fZoomExponent=1.00563
fShader=0.000
zoom=1.00068
rot=0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.30890
sx=1.00000
sy=1.00000
wave_r=0.500
wave_g=0.500
wave_b=0.500
wave_x=0.500
wave_y=0.500
ob_size=0.000
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=0.000
ib_size=0.000
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=51.200
nMotionVectorsY=33.600
mv_dx=0.000
mv_dy=0.000
mv_l=5.000
mv_r=0.400
mv_g=0.300
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.250
wavecode_0_enabled=1
wavecode_0_samples=302
wavecode_0_sep=30
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=1.76649
wavecode_0_smoothing=0.04000
wavecode_0_r=0.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.000
wave_0_per_frame1=t1 = 0; t2 = 1000;
wave_0_per_point1=if (reg05,
wave_0_per_point2=  sig = log(1+(value1+value2)/reg20) * (1+exp(-16*sample));
wave_0_per_point3=  dec = if (sig > gmegabuf(t1),reg00,reg01);
wave_0_per_point4=  gmegabuf(t1) *= dec;
wave_0_per_point5=  gmegabuf(t1) += (1-dec)*sig;
wave_0_per_point6=  reg19 = max (reg19, gmegabuf(t1));
wave_0_per_point7=
wave_0_per_point8=  t3 = t1+2000;
wave_0_per_point9=  gmegabuf(t3)=max(0,if(gmegabuf(t1)>gmegabuf(t2),1,gmegabuf(t3)-1/fps));
wave_0_per_point10=
wave_0_per_point11=  t2 = t1+1000;
wave_0_per_point12=  dif = if (gmegabuf(t3)>0,0,2/fps);
wave_0_per_point13=  dif = 0.5/fps;
wave_0_per_point14=  gmegabuf(t2)=max (gmegabuf(t2)-dif,gmegabuf(t1));
wave_0_per_point15=
wave_0_per_point16=,0);
wave_0_per_point17=
wave_0_per_point18=t1 += 1;
wave_0_per_point19=x=sample; y=0.5+value1*.1;
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=1
wavecode_1_bAdditive=0
wavecode_1_scaling=1.86831
wavecode_1_smoothing=0.00000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=1.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = 0;
wave_1_per_point1=step = 12;
wave_1_per_point2=frac = (t1%step);
wave_1_per_point3=
wave_1_per_point4=slot = int(t1/7);
wave_1_per_point5=
wave_1_per_point6=rad1 = if (frac<3, 0, if (frac>step-4, gmegabuf(slot)*0.2, gmegabuf(slot)*0.2))+0.2;
wave_1_per_point7=
wave_1_per_point8=ang1 = slot*0.2;
wave_1_per_point9=
wave_1_per_point10=x = 0.5 + cos(ang1)*rad1;
wave_1_per_point11=y = 0.5 + sin(ang1)*rad1;
wave_1_per_point12=
wave_1_per_point13=a = (frac>1) * (frac<step-2);
wave_1_per_point14=
wave_1_per_point15=t1 += 1;
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=1
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=1.000
wavecode_2_g=1.000
wavecode_2_b=0.000
wavecode_2_a=1.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=1
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=0.700
wavecode_3_g=0.700
wavecode_3_b=1.000
wavecode_3_a=0.600
shapecode_0_enabled=1
shapecode_0_sides=14
shapecode_0_additive=1
shapecode_0_thickOutline=1
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.39719
shapecode_0_ang=0.69115
shapecode_0_tex_ang=0.00000
shapecode_0_tex_zoom=0.67839
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=0.000
shapecode_0_a=1.000
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=0.200
shapecode_0_border_g=0.140
shapecode_0_border_b=0.000
shapecode_0_border_a=0.000
shapecode_1_enabled=1
shapecode_1_sides=4
shapecode_1_additive=1
shapecode_1_thickOutline=0
shapecode_1_textured=0
shapecode_1_num_inst=128
shapecode_1_x=0.800
shapecode_1_y=0.500
shapecode_1_rad=0.02815
shapecode_1_ang=0.00000
shapecode_1_tex_ang=1.50796
shapecode_1_tex_zoom=4.72143
shapecode_1_r=1.000
shapecode_1_g=0.000
shapecode_1_b=0.000
shapecode_1_a=0.500
shapecode_1_r2=1.000
shapecode_1_g2=0.000
shapecode_1_b2=0.000
shapecode_1_a2=0.000
shapecode_1_border_r=1.000
shapecode_1_border_g=0.700
shapecode_1_border_b=0.400
shapecode_1_border_a=0.000
shape_1_per_frame1=x = 1-rad/2;
shape_1_per_frame2=y = 1-instance/num_inst;
shape_1_per_frame3=bias = -0.05;
shape_1_per_frame4=r = max(0,gmegabuf(instance)/4+bias);
shape_1_per_frame5=r = 1-exp(-r);
shape_1_per_frame6=r2 = r;
shape_1_per_frame7=
shape_1_per_frame8=dec = 1-2/fps;
shape_1_per_frame9=g = max(0,gmegabuf (1000+instance)/4+bias);
shape_1_per_frame10=g=1-exp(-g);
shape_1_per_frame11=g2=g;
shape_1_per_frame12=
shape_1_per_frame13=b=1;
shape_1_per_frame14=
shape_1_per_frame15=a = a2 = 1;
shape_1_per_frame16=g2=g;
shapecode_2_enabled=1
shapecode_2_sides=20
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=61
shapecode_2_x=0.500
shapecode_2_y=0.500
shapecode_2_rad=0.02900
shapecode_2_ang=0.00000
shapecode_2_tex_ang=1.50790
shapecode_2_tex_zoom=1.13805
shapecode_2_r=0.800
shapecode_2_g=0.000
shapecode_2_b=0.000
shapecode_2_a=0.000
shapecode_2_r2=0.000
shapecode_2_g2=0.000
shapecode_2_b2=0.000
shapecode_2_a2=0.000
shapecode_2_border_r=0.800
shapecode_2_border_g=0.400
shapecode_2_border_b=0.000
shapecode_2_border_a=0.000
shape_2_per_frame1=if (instance==0, s1=3; s2=13,0);
shape_2_per_frame2=zmax = 8;
shape_2_per_frame3=k1 = instance/num_inst;
shape_2_per_frame4=bs=4096;
shape_2_per_frame5=reg60 = time*.08;
shape_2_per_frame6=s1 = s1%bs*3036 + s1/bs;
shape_2_per_frame7=s2 = s2%bs*3288 + s2/bs;
shape_2_per_frame8=z = k1-reg60; z = (z-int(z))*zmax;
shape_2_per_frame9=x = (s1%bs/bs-.5)/z+.5;
shape_2_per_frame10=y = (s2%bs/bs-.5)/z*reg32+0.5;
shape_2_per_frame11=rad = .025/z*reg32 ;
shape_2_per_frame12=a = pow((zmax-z)/zmax,0.5);
shape_2_per_frame13=r = 0.7 + 0.29*sin(instance);
shape_2_per_frame14=r2=0;
shape_2_per_frame15=a *= x<0.95-rad/2;
shape_2_per_frame16=a2=1;
shape_2_per_frame17=
shapecode_3_enabled=1
shapecode_3_sides=24
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=7
shapecode_3_x=0.500
shapecode_3_y=0.500
shapecode_3_rad=0.01504
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=2.54800
shapecode_3_r=0.000
shapecode_3_g=0.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=1.000
shapecode_3_border_r=1.000
shapecode_3_border_g=0.900
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=if (instance==0, s1=73; s2=15,0);
shape_3_per_frame2=zmax = 8;
shape_3_per_frame3=k1 = instance/num_inst;
shape_3_per_frame4=bs=4096;
shape_3_per_frame5=reg60 = time*.05;
shape_3_per_frame6=s1 = s1%bs*3036 + s1/bs;
shape_3_per_frame7=s2 = s2%bs*3288 + s2/bs;
shape_3_per_frame8=z = k1-reg60; z = (z-int(z))*zmax;
shape_3_per_frame9=x = (s1%bs/bs-.5)/z+.5;
shape_3_per_frame10=y = (s2%bs/bs-.5)/z*reg32+0.5;
shape_3_per_frame11=rad = .14/z*reg32 ;
shape_3_per_frame12=
shape_3_per_frame13=a = 1-sqr(sqr(z/zmax));
shape_3_per_frame14=a2=a*0.9;
shape_3_per_frame15=
shape_3_per_frame16=
per_frame_init_1=n=1;
per_frame_init_2=check1 = 1;
per_frame_init_3=check2 = 0;
per_frame_init_4=check3 = 0;
per_frame_1=
per_frame_2=rg1 = max(rg1*0.77, 0.02 + 0.5*min(2,max(0,treb_att-1)*.3));
per_frame_3=rg2 = max(rg2*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*.3));
per_frame_4=rg3 = max(rg3*0.77, 0.02 + 0.5*min(2,max(0,bass_att-1)*.3));
per_frame_5=
per_frame_6=rg4 = min(2,max(0,mid_att-1)*.3);
per_frame_7=
per_frame_8=q1 = rg1;
per_frame_9=q2 = rg2;
per_frame_10=q3 = rg3;
per_frame_11=
per_frame_12=rg12 = max(rg12*0.97, 0.02 + 0.5*min(3,max(0,treb_att-1)*.6));
per_frame_13=rg22 = max(rg22*0.97, 0.02 + 0.5*min(3,max(0,mid_att-1)*.6));
per_frame_14=rg32 = max(rg32*0.97, 0.02 + 0.5*min(3,max(0,bass_att-1)*.6));
per_frame_15=
per_frame_16=
per_frame_17=rg_treb = rg_treb + rg12;
per_frame_18=rg_mid = rg_mid + rg22;
per_frame_19=rg_bass = rg_bass + rg32;
per_frame_20=
per_frame_21=q5 = rg_treb;
per_frame_22=q6 = rg_mid;
per_frame_23=q7 = rg_bass;
per_frame_24=
per_frame_25=beat = (q5 + q6 + q7)*0.3333;
per_frame_26=q32 = bass;
per_frame_27=
per_frame_28=//rot = rg_treb*0.01;
per_frame_29=
per_frame_30=wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );
per_frame_31=wave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );
per_frame_32=wave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );
per_frame_33=
per_frame_34=wave_a=0;
per_frame_35=warp = 0;
per_frame_36=
per_frame_37=n = if(frame%13 == 0, n+1, n);
per_frame_38=n = if(n == 4, 1, n);
per_frame_39=
per_frame_40=check1 = if(n==10, 10,10);
per_frame_41=check2 = if(n==20, 1, 0);
per_frame_42=check3 = if(n==30, 1, 0);
per_frame_43=
per_frame_44=q8 = check1;
per_frame_45=q9 = check2;
per_frame_46=q10 = check3;
warp_1=`float dist(float2 a, float2 b)
warp_2=`{
warp_3=`    return sqrt(pow(a.x-b.x,2) + pow(a.y-b.y,2));
warp_4=`}
warp_5=`
warp_6=`shader_body
warp_7=`{
warp_8=`    uv-= 0.5;
warp_9=`    uv.y*=-1;
warp_10=`    uv *= aspect.xy;
warp_11=`    
warp_12=`    float rotspeed = 0.02*q5 + time*0.2;
warp_13=`    uv = float2(cos(rotspeed)*uv.x - sin(rotspeed)*uv.y, sin(rotspeed)*uv.x + cos(rotspeed)*uv.y);
warp_14=`    
warp_15=`    float beat = q32;
warp_16=`    
warp_17=`    ret = tex2D( sampler_main, uv ).xyz;
warp_18=`    
warp_19=`    float3 col = 0;
warp_20=`    
warp_21=`    float3 lookat = float3(3*sin(0.2*time), 3*cos(q5*0.05), 0);
warp_22=`    
warp_23=`    float zoom = 0.15;
warp_24=`
warp_25=`    float3 ro = float3(0, 0, -1);
warp_26=`    
warp_27=`    float3 F = normalize(lookat-ro); // Forward
warp_28=`    float3 R = normalize(cross(float3(0., 1., 0.), F)); //Right
warp_29=`    float3 U = cross(F, R); //Up
warp_30=`
warp_31=`    float3 C = ro + F*zoom;
warp_32=`    float3 I = C + uv.x*R + uv.y*U;
warp_33=`    float3 rd = normalize(I-ro);
warp_34=`    float t = time;
warp_35=`    
warp_36=`    float dS, dO;
warp_37=`    float3 p;
warp_38=`    float breakloop = 0;
warp_39=`    for(int i = 0; i<100 && breakloop == 0; i++)
warp_40=`    {
warp_41=`        p = ro + rd * dO;
warp_42=`        dS = -(length(float2(length(p.xz)-1, p.y)) -0.75);
warp_43=`        if(dS < 0.001) {breakloop = 1; }
warp_44=`        dO += dS;
warp_45=`    }    
warp_46=`    float check1 = q8;
warp_47=`    float check2 = q9;
warp_48=`    float check3 = q10;
warp_49=`    if(dS < 0.003)
warp_50=`    {
warp_51=`        float x = atan2(p.x,p.z) - rotspeed;
warp_52=`        float y = atan2(length(p.xz)-1, p.y);
warp_53=`        float bands = sin(y*100 + x*3);
warp_54=`        float ripples = sin((x*10 - y*30)*3)*0.5 + 0.5;
warp_55=`        float waves = tan(x*4 - y*2 + q5*0.4);
warp_56=`        float b1 = smoothstep(-0.2, 0.2, bands);
warp_57=`        float b2 = smoothstep(-0.2, 0.2, bands-1.5);
warp_58=`        float m = b1*(1-b2);
warp_59=`        m = max(m,ripples*b2*max(30,waves));
warp_60=`        m += max(0,waves*0.2*b2);
warp_61=`        float m2 = m-ripples-waves;
warp_62=`        float m22 = 0.5*m2 + m2*q3*1.5;
warp_63=`        float m3 = b1*waves;
warp_64=`        if(check1 == 1) {col = 0.4*float3(m22,m22, m22);}
warp_65=`        if(check2 == 1) {col = float3(m22*0.5,0, 0);}
warp_66=`        if(check3 == 1) {col = float3(m22*0.2,0, m22*0.5);}
warp_67=`        col += float3(0.2*m3 + m3*q2, 0*m3*q3*0.5, 0);
warp_68=`        col = waves;
warp_69=`    
warp_70=`    }
warp_71=`
warp_72=`    ret = col*10;
warp_73=`
warp_74=`    // darken (decay) over time
warp_75=`   ret -= 0.004;   
warp_76=`}
comp_1=`shader_body
comp_2=`{
comp_3=`
comp_4=`float2 uva = uv;
comp_5=`float2 uvb = -(uv - .5) + .5;
comp_6=`
comp_7=`//ret = tex2D(sampler_main, uva).x + tex2D(sampler_main, uvb).x;
comp_8=`
comp_9=`float3 blurs = GetBlur1(uva).x + GetBlur3(uva).x;
comp_10=`//blurs += GetBlur1(uvb).x + GetBlur3(uvb).x;
comp_11=`
comp_12=`ret = lerp (
comp_13=`blurs,
comp_14=`ret,
comp_15=`pow(ret,0.5));
comp_16=`
comp_17=`
comp_18=`
comp_19=`  
comp_20=`  ret = tex2D(sampler_main, uv).x - GetBlur1(uv).x;
comp_21=`  //  ret = pow(ret,float3(.8,.9,.7))*1.25 - .25;
comp_22=`    ret = pow(ret,float3(.9,1,.5));
comp_23=`    ret *= 1.0; //gamma
comp_24=` 
comp_25=`}
