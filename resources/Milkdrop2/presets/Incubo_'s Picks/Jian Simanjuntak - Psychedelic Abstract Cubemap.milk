MILKDROP_PRESET_VERSION=201
PSVERSION=3
PSVERSION_WARP=2
PSVERSION_COMP=3
[preset00]
fRating=3.000
fGammaAdj=1.000
fDecay=1.000
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.000
nVideoEchoOrientation=3
nWaveMode=6
bAdditiveWaves=0
bWaveDots=0
bWaveThick=0
bModWaveAlphaByVolume=0
bMaximizeWaveColor=0
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=0
bSolarize=0
bInvert=0
fWaveAlpha=0.005
fWaveScale=0.167
fWaveSmoothing=0.000
fWaveParam=0.000
fModWaveAlphaStart=1.000
fModWaveAlphaEnd=1.000
fWarpAnimSpeed=1.000000
fWarpScale=2.853000
fZoomExponent=1.000000
fShader=0.000000
zoom=1.010000
rot=0.000000
cx=0.500000
cy=0.500000
dx=0.000000
dy=0.000000
warp=0.000000
sx=1.000000
sy=1.000000
wave_r=1.000
wave_g=1.000
wave_b=1.000
wave_x=0.950
wave_y=1.000
ob_size=0.000
ob_r=1.000
ob_g=1.000
ob_b=1.000
ob_a=1.000
ib_size=0.100
ib_r=1.000
ib_g=1.000
ib_b=1.000
ib_a=1.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=-0.002
mv_dy=0.000
mv_l=0.000
mv_r=1.000
mv_g=0.000
mv_b=0.000
mv_a=0.000
b1n=0.000000
b2n=0.000000
b3n=0.000000
b1x=1.000000
b2x=1.000000
b3x=1.000000
b1ed=0.250000
wavecode_0_enabled=0
wavecode_0_samples=512
wavecode_0_sep=0
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=1
wavecode_0_scaling=1.00000
wavecode_0_smoothing=0.00000
wavecode_0_r=0.400
wavecode_0_g=0.400
wavecode_0_b=0.400
wavecode_0_a=1.000
wavecode_1_enabled=0
wavecode_1_samples=512
wavecode_1_sep=0
wavecode_1_bSpectrum=1
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=1.00000
wavecode_1_smoothing=0.00000
wavecode_1_r=0.000
wavecode_1_g=0.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wavecode_2_enabled=0
wavecode_2_samples=512
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=1
wavecode_2_bAdditive=0
wavecode_2_scaling=1.00000
wavecode_2_smoothing=0.50000
wavecode_2_r=0.000
wavecode_2_g=0.000
wavecode_2_b=0.000
wavecode_2_a=0.000
wavecode_3_enabled=0
wavecode_3_samples=512
wavecode_3_sep=0
wavecode_3_bSpectrum=0
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=0
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=1.000
shapecode_0_enabled=0
shapecode_0_sides=4
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=1
shapecode_0_num_inst=1
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=5.38980
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.19381
shapecode_0_tex_zoom=0.18923
shapecode_0_r=1.000
shapecode_0_g=0.970
shapecode_0_b=1.000
shapecode_0_a=0.940
shapecode_0_r2=1.000
shapecode_0_g2=1.000
shapecode_0_b2=1.000
shapecode_0_a2=1.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=0
shapecode_1_thickOutline=0
shapecode_1_textured=1
shapecode_1_num_inst=1
shapecode_1_x=0.500
shapecode_1_y=0.500
shapecode_1_rad=3.99882
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.25005
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=0.600
shapecode_1_r2=1.000
shapecode_1_g2=1.000
shapecode_1_b2=1.000
shapecode_1_a2=0.600
shapecode_1_border_r=1.000
shapecode_1_border_g=1.000
shapecode_1_border_b=1.000
shapecode_1_border_a=0.000
shapecode_2_enabled=0
shapecode_2_sides=18
shapecode_2_additive=0
shapecode_2_thickOutline=0
shapecode_2_textured=1
shapecode_2_num_inst=10
shapecode_2_x=0.463
shapecode_2_y=0.500
shapecode_2_rad=1.60089
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.67634
shapecode_2_r=1.000
shapecode_2_g=1.000
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.700
shapecode_2_g2=0.800
shapecode_2_b2=0.800
shapecode_2_a2=1.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=1.000
shapecode_2_border_a=0.000
shapecode_3_enabled=1
shapecode_3_sides=50
shapecode_3_additive=0
shapecode_3_thickOutline=0
shapecode_3_textured=0
shapecode_3_num_inst=15
shapecode_3_x=0.503
shapecode_3_y=0.500
shapecode_3_rad=0.02
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=1.11234
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=1.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=1.000
shapecode_3_border_g=1.000
shapecode_3_border_b=1.000
shapecode_3_border_a=0.000
shape_3_per_frame1=sample=instance/num_inst;
shape_3_per_frame2=rad=0.19 + 0.01*sin(time*2);  
shape_3_per_frame3=
shape_3_per_frame4=x = 0.5 + 0.4*sin(time + sample*3);  
shape_3_per_frame5=y = 0.5 + 0.1*sin(time*3 + sample*5);  
shape_3_per_frame6=
shape_3_per_frame7=r = .4*sin(sample*80);
shape_3_per_frame8=b = .8*sin(sample*66);
shape_3_per_frame9=g = .6*sin(sample*120);
per_frame_1=wave_r = 0.5 + 0.5*sin(1.6*time);
per_frame_2=wave_g = 0.5 + 0.5*sin(4.1*time);
per_frame_3=wave_b = -1 + (1-wave_r + 1-wave_g);
per_frame_4=q1 = wave_r;
per_frame_5=q2 = wave_g;
per_frame_6=q3 = wave_b;
per_frame_7=
per_frame_8=ib_r = 1-abs(q1)*0.75;
per_frame_9=ib_g = 1-abs(q2)*0.75;
per_frame_10=ib_b = 1-abs(q3)*0.75;
per_frame_11=warp = 0.6;
per_frame_12=
per_frame_13=// Composite shader with rotation cubemap
per_frame_14=mtime = mtime + (bass + mid + treb)*0.05;  // Audio-accelerated time
per_frame_15=q5 = mtime*0.08;                          // Rotation speed control
per_pixel_1=dx=dx+0.01*sin(y*30 + time*3);
per_pixel_2=dy=dy+0.01*sin(x*25 + time*2.5);
warp_1=`shader_body
warp_2=`{
warp_3=`    // sample previous frame
warp_4=`    ret = tex2D( sampler_main, uv ).xyz;
warp_5=`
warp_6=`      // take the difference between the crisp and blurred images,
warp_7=`      // then add it back into the image.  Creates spots and stripes over time.
warp_8=`      ret += (ret - GetBlur2(uv))*0.3;
warp_9=`      ret *= 0.9;
warp_10=`
warp_11=`      // add noise:
warp_12=`      float2 dither_uv = uv_orig*texsize.xy*texsize_noise_lq.zw * 0.0 + rand_frame.xy;
warp_13=`      ret += (tex2D(sampler_noise_lq, dither_uv).xyz-0.5)/856.0 * 112;
warp_14=`
warp_15=`      // desaturate over time, to keep the globs white
warp_16=`      //ret = lerp(ret, lum(ret), 0.2);
warp_17=`}
comp_1=`// Rotational helper function
comp_2=`float2x2 rot(float a) {
comp_3=`    float s = sin(a), c = cos(a);
comp_4=`    return float2x2(c, -s, s, c);
comp_5=`}
comp_6=`
comp_7=`shader_body
comp_8=`{
comp_9=`    // Initialize variables
comp_10=`    float2 R = texsize.xy;
comp_11=`    float FOV = 2.5;
comp_12=`    
comp_13=`    // Calculate ray direction
comp_14=`    float3 D = normalize(float3(1.0/FOV, (uv_orig*aspect.xy*2.0 - aspect.xy)/aspect.y));
comp_15=`    
comp_16=`    // Apply rotation over time
comp_17=`    D.xz = mul(rot(q5), D.xz);      // XZ rotation (main beat-synced)
comp_18=`    D.yz = mul(rot(q5*0.5), D.yz);  // YZ rotation (half speed)
comp_19=`    
comp_20=`    // Cubemap simulation and face detection
comp_21=`    float3 A = abs(D);
comp_22=`    int i = 0;
comp_23=`    float M = A.x;
comp_24=`    if (A.y > M) { M = A.y; i = 1; }
comp_25=`    if (A.z > M) { M = A.z; i = 2; }
comp_26=`    int faceID = i + 3 * int(D[i] < 0.0);
comp_27=`    
comp_28=`    // Calculate proper UV coordinates for each face
comp_29=`    float2 cubemapUV;
comp_30=`    if (faceID == 0) cubemapUV = D.zy / abs(D.x); // +X
comp_31=`    else if (faceID == 3) cubemapUV = D.zy / abs(D.x); // -X
comp_32=`    else if (faceID == 1) cubemapUV = D.xz / abs(D.y); // +Y
comp_33=`    else if (faceID == 4) cubemapUV = D.xz / abs(D.y); // -Y
comp_34=`    else if (faceID == 2) cubemapUV = D.xy / abs(D.z); // +Z
comp_35=`    else cubemapUV = D.xy / abs(D.z); // -Z
comp_36=`    
comp_37=`    // Sample from appropriate texture based on face
comp_38=`    if (faceID == 0) ret = tex2D(sampler_main, cubemapUV*0.5+0.5).xyz; // +X
comp_39=`    else if (faceID == 1) ret = tex2D(sampler_main, cubemapUV*0.5+0.5).xyz; // +Y
comp_40=`    else if (faceID == 2) ret = tex2D(sampler_main, cubemapUV*0.5+0.5).xyz; // +Z
comp_41=`    else if (faceID == 3) ret = tex2D(sampler_main, cubemapUV*0.5+0.5).xyz; // -X
comp_42=`    else if (faceID == 4) ret = tex2D(sampler_main, cubemapUV*0.5+0.5).xyz; // -Y
comp_43=`    else ret = tex2D(sampler_main, cubemapUV*0.5+0.5).xyz; // -Z
comp_44=`    
comp_45=`    // Apply the blur effect
comp_46=`    float3 base = ret;
comp_47=`    ret = base*1 + GetBlur1(cubemapUV*0.5+0.5)*3 + GetBlur2(cubemapUV*0.5+0.5)*0 + GetBlur3(cubemapUV*0.5+0.5)*0 + 0;
comp_48=`    ret += GetBlur2( (uv-0.5)*0.333 + 0.5);
comp_49=`    ret *= 1;
comp_50=`}